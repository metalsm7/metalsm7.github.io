openapi: 3.0.0
info:
  version: 1.0.39
  title: PersonalBreadcast RESTfulAPI
  description: |
    개인방송 API
  termsOfService: empty
  contact:
    name: leeyh
    email: metalsm7@gmail.com
    url: https://mparang.com
  x-logo:
    altText: PersonalBreadcast
servers:
  - url: http://localhost/v1
tags:
  - name: 작업기록
    description: |
      업데이트 기록<br />
      <table>
      <tr><td>일자</td><td>기능</td><td>비고</td></tr>
      <!--tr><td></td><td></td><td></td></tr-->
      
      <tr><td>'20.06.23</td><td>
        <font color="blue">[수정]</font> <a href="#operation/Translate">Translate</a>
      </td><td>
        번역 언어 추가(몽골어, mn-mn)
      </td></tr>
      
      <tr><td>'20.06.10</td><td>
        <font color="blue">[수정]</font> <a href="#operation/RegistCompleteSocial">RegistCompleteSocial</a>
      </td><td>
        애플 로그인 추가
      </td></tr>
      
      <tr><td>'20.05.27</td><td>
        <font color="blue">[수정]</font> <a href="#operation/EnterCast">EnterCast</a>
        <br /><font color="blue">[수정]</font> <a href="#operation/ControlCastWarn">ControlCastWarn</a>
      </td><td>
        경고 누적에 의한 입장 제한 오류 추가
        <br />내부 처리 수정
      </td></tr>
      
      <tr><td>'20.05.19</td><td>
        <font color="red">[추가]</font> <a href="#operation/ControlCastWarn">ControlCastWarn</a>
      </td><td>
        사용자 경고 기능 추가
      </td></tr>
      
      <tr><td>'20.05.09</td><td>
        <font color="blue">[수정]</font> <a href="#operation/BuyCubicInAppPurchase">BuyCubicInAppPurchase</a>
      </td><td>
        요청 구분 추가(onestore 추가)
      </td></tr>
      
      <tr><td>'20.05.06</td><td>
        <font color="blue">[수정]</font> <a href="#operation/GetShopCubics">GetShopCubics</a>
      </td><td>
        요청값 추가(exeCode(Optional))
      </td></tr>
      
      <tr><td>'20.04.29</td><td>
        <font color="blue">[수정]</font> <a href="#operation/StartCast">StartCast</a>
        <br /><font color="blue">[수정]</font> <a href="#operation/WowzaSetCast">WowzaSetCast</a>
      </td><td>
        오류값 추가(일부 서비스 점검)
        <br />오류값 추가(일부 서비스 점검)
      </td></tr>
      
      <tr><td>'20.04.22</td><td>
        <font color="blue">[수정]</font> <a href="#operation/UpdateMemberSchedule">UpdateMemberSchedule</a>
      </td><td>
        요청값 추가(hmCode)
      </td></tr>
      
      <tr><td>'20.04.21</td><td>
        <font color="blue">[수정]</font> <a href="#operation/GetCastPreset">GetCastPreset</a>
        <br /><font color="blue">[수정]</font> <a href="#operation/UpdateMemberSchedule">UpdateMemberSchedule</a>
      </td><td>
        반환값 추가(restream 정보)
        <br />요청값 변경
      </td></tr>
      
      <tr><td>'20.04.17</td><td>
        <font color="blue">[수정]</font> <a href="#operation/GetMemberSchedule">GetMemberSchedule</a>
        <br /><font color="blue">[수정]</font> <a href="#operation/GetMemberSchedulesDaily">GetMemberSchedulesDaily</a>
        <br /><font color="red">[추가]</font> <a href="#operation/RemoveMemberSchedules">RemoveMemberSchedules</a>
        <br /><font color="blue">[수정]</font> <a href="#operation/RemoveMemberSchedule">RemoveMemberSchedule</a>
        <br /><font color="red">[추가]</font> <a href="#operation/UpdateMemberSchedule">UpdateMemberSchedule</a>
      </td><td>
        반환값 추가(isRecurrence)
        <br />반환값 추가(isRecurrence)
        <br />스케줄 목록 삭제 추가
        <br />요청값 추가(includeRecurrence)
        <br />스케줄 수정 추가
      </td></tr>
      
      <tr><td>'20.04.14</td><td>
        <font color="blue">[수정]</font> <a href="#operation/AddComment">AddComment</a>
        <br /><font color="blue">[수정]</font> <a href="#operation/GetComments">GetComments</a>
      </td><td>
        등록값 추가(비공개)
        <br />등록값 추가(비공개)
      </td></tr>
      
      <tr><td>'20.04.08</td><td>
        <font color="purple">[종료]</font> <a href="#operation/RegistSocialStepSvcIDNickName">RegistSocialStepSvcIDNickName</a>
        <br /><font color="purple">[종료]</font> <a href="#operation/RegistLocalStepCellNumber">RegistLocalStepCellNumber</a>
        <br /><font color="purple">[종료]</font> <a href="#operation/RegistLocalStepCellNumberCertify">RegistLocalStepCellNumberCertify</a>
        <br /><font color="purple">[종료]</font> <a href="#operation/RegistLocalStepPassword">RegistLocalStepPassword</a>
        <br /><font color="purple">[종료]</font> <a href="#operation/RegistLocalStepMakeSvcID">RegistLocalStepMakeSvcID</a>
        <br /><font color="purple">[종료]</font> <a href="#operation/RegistLocalStepSvcID">RegistLocalStepSvcID</a>
        <br /><font color="purple">[종료]</font> <a href="#operation/RegistLocalStepMakeNickName">RegistLocalStepMakeNickName</a>
        <br /><font color="purple">[종료]</font> <a href="#operation/RegistLocalStepNickName">RegistLocalStepNickName</a>
        <br /><font color="purple">[종료]</font> <a href="#operation/RegistLocalStepProfile">RegistLocalStepProfile</a>
        <br /><font color="purple">[종료]</font> <a href="#operation/RegistLocalStepProfileRandomInit">RegistLocalStepProfileRandomInit</a>
        <br /><font color="purple">[종료]</font> <a href="#operation/RegistLocalComplete">RegistLocalComplete</a>
        <br /><font color="purple">[종료]</font> <a href="#operation/LoginSocialAccount">LoginSocialAccount</a>
      </td><td>
        종료 처리
        <br />종료 처리
        <br />종료 처리
        <br />종료 처리
        <br />종료 처리
        <br />종료 처리
        <br />종료 처리
        <br />종료 처리
        <br />종료 처리
        <br />종료 처리
        <br />종료 처리
        <br />종료 처리
      </td></tr>
      
      <tr><td>'20.03.25</td><td>
        <font color="red">[추가]</font> <a href="#operation/LoginSocialAccountNew">LoginSocialAccountNew</a>
        <br /><font color="blue">[수정]</font> <a href="#operation/LoginSocialAccount">LoginSocialAccount</a>
      </td><td>
        반환값 추가
        <br />'20.03.24 변경건 복원 처리
      </td></tr>
      
      <tr><td>'20.03.24</td><td>
        <font color="red">[추가]</font> <a href="#operation/RegistCellCertify">RegistCellCertify</a>
        <br /><font color="red">[추가]</font> <a href="#operation/RegistCompleteLocal">RegistCompleteLocal</a>
        <br /><font color="red">[추가]</font> <a href="#operation/RegistCompleteSocial">RegistCompleteSocial</a>
        <br /><font color="blue">[수정]</font> <a href="#operation/LoginSocialAccount">LoginSocialAccount</a>
      </td><td>
        가입시 본인인증 처리
        <br />회원가입(로컬계정)
        <br />회원가입(소셜계정)
        <br />반환 오류 추가(가입 변경에 따른)
      </td></tr>
      
      <tr><td>'20.03.18</td><td>
        <font color="blue">[수정]</font> <a href="#operation/StartCast">StartCast</a>
      </td><td>
        반환값 추가
      </td></tr>
      
      <tr><td>'20.03.06</td><td>
        <font color="blue">[수정]</font> <a href="#operation/GetSearch">GetSearch</a>
        <br /><font color="blue">[수정]</font> <a href="#operation/GetCasts">GetCasts</a>
        <br /><font color="blue">[수정]</font> <a href="#operation/GetSummaryLive">GetSummaryLive</a>
        <br /><font color="blue">[수정]</font> <a href="#operation/GetClips">GetClips</a>
      </td><td>
        앱 버전 확인 수정
        <br />앱 버전 확인 수정
        <br />앱 버전 확인 수정
        <br />앱 버전 확인 수정
      </td></tr>
      
      <tr><td>'20.03.05</td><td>
        <font color="red">[추가]</font> <a href="#operation/OperationCastGuestCountUpdate">OperationCastGuestCountUpdate</a>
      </td><td>
        채널 더미 사용자 카운터 설정
      </td></tr>

      <tr><td>'20.02.07</td><td>
        <font color="blue">[수정]</font> <a href="#operation/GetMember">GetMember</a>
        <br /><font color="blue">[수정]</font> <a href="#operation/GetShopCoins">GetShopCoins</a>
        <br /><font color="blue">[수정]</font> <a href="#operation/GetShopCubics">GetShopCubics</a>
      </td><td>
        요청/반환값 추가(isAccountBlock)
        <br />반환값 수정(user.isAccountBlocked -> user.isAccountBlock)
        <br />반환값 수정(user.isAccountBlocked -> user.isAccountBlock)
      </td></tr>

      <tr><td>'20.02.06</td><td>
        <font color="blue">[수정]</font> <a href="#operation/GetComments">GetComments</a>
        <br /><font color="red">[추가]</font> <a href="#tag/Anonymous">Anonymous 정보</a>
      </td><td>
        반환값 추가(isAnonymous/isOperator)
        <br />Anonymous 정보 추가
      </td></tr>

      <tr><td>'20.01.29</td><td>
        <font color="red">[추가]</font> <a href="#operation/BuyCubicInAppPurchase">BuyCubicInAppPurchase</a>
        <br /><strike><font color="red">[삭제]</font> <a href="#operation/BuyShopCoin">BuyShopCoin</a></strike>
        <br /><strike><font color="red">[삭제]</font> <a href="#operation/BuyShopCubic">BuyShopCubic</a></strike>
      </td><td>
        큐빅 인앱 결제 처리
        <br />코인 결제 요청 삭제
        <br />큐빅 결제 요청 삭제
      </td></tr>

      <tr><td>'20.01.07</td><td>
        <font color="blue">[수정]</font> <a href="#operation/GetRankings">GetRankings</a>
        <br /><font color="blue">[수정]</font> <a href="#operation/GetSummaryLive">GetSummaryLive</a>
      </td><td>
        반환값 추가(isLeave)
        <br />반환값 추가(rankings.{daily|weekly|monthly}.isLeave)
      </td></tr>

      <tr><td>'19.12.30</td><td>
        <font color="blue">[수정]</font> <a href="#operation/LoginLocalAccount">LoginLocalAccount</a>
        <br /><font color="blue">[수정]</font> <a href="#operation/LoginSocialAccount">LoginSocialAccount</a>
      </td><td>
        반환값 추가(isCellCertify, isAdult)
        <br />반환값 추가(isCellCertify, isAdult)
      </td></tr>

      <tr><td>'19.12.19</td><td>
        <font color="red">[추가]</font> <a href="#operation/GetCoinInfoVersion">GetCoinInfoVersion</a>
        <br /><font color="blue">[수정]</font> <a href="#operation/GetCoinInfo">GetCoinInfo</a>
      </td><td>
        코인정보 버전 반환
        <br />반환값 추가(metadata.missionUrl)
      </td></tr>

      <tr><td>'19.12.16</td><td>
        <font color="blue">[수정]</font> <a href="#operation/LoginSocialAccount">LoginSocialAccount</a>
        <br /><font color="red">[추가]</font> <a href="#operation/RegistSocialStepSvcIDNickName">RegistSocialStepSvcIDNickName</a>
      </td><td>
        반환값 추가(isCreated)
        <br />소셜 가입중 svcId, nickname 변경 기능 추가
      </td></tr>

      <tr><td>'19.12.12</td><td>
        <font color="blue">[수정]</font> <a href="#tag/greater">코드표 &gt; 업적</a>
      </td><td>
        문자열 변경
      </td></tr>

      <tr><td>'19.12.09</td><td>
        <font color="blue">[수정]</font> <a href="#operation/EnterCastInspector">EnterCastInspector</a>
      </td><td>
        반환값 수정
      </td></tr>

      <tr><td>'19.12.07</td><td>
        <font color="blue">[수정]</font> <a href="#operation/GetMember">GetMember</a>
      </td><td>
        요청/반환값 추가(adult/isAdult)
      </td></tr>

      <tr><td>'19.12.05</td><td>
        <font color="blue">[수정]</font> <a href="#operation/GetCoinInfo">GetCoinInfo</a>
        <br /><font color="blue">[수정]</font> <a href="#tag/greater">코드표 &gt; 업적</a>
      </td><td>
        반환값 추가(metadata.categories 내 coinSkin 추가)
        <br />업적 코드표 변경
      </td></tr>

      <tr><td>'19.12.04</td><td>
        <font color="blue">[수정]</font> <a href="#operation/SendMessageCoin">SendMessageCoin</a>
        <br /><font color="blue">[수정]</font> <a href="#operation/SendCastCoin">SendCastCoin</a>
        <br /><font color="red">[추가]</font> <a href="#operation/SendMissionCoin">SendMissionCoin</a>
      </td><td>
        요청값 변경
        <br />요청값 변경
        <br />미션으로 인한 코인 선물
      </td></tr>

      <tr><td>'19.11.26</td><td>
        <font color="blue">[추가]</font> <a href="#operation/GetCoinInfo">GetCoinInfo</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/UpdateChatItemUsage">UpdateChatItemUsage</a>
      </td><td>
        코인정보 반환
        <br />채팅 아이템 사용 여부 변경 처리
      </td></tr>

      <tr><td>'19.11.15</td><td>
        <font color="red">[수정]</font> <a href="#operation/UpdateNickName">UpdateNickName</a>
        <br /><font color="red">[수정]</font> <a href="#operation/UpdateNickNameFree">UpdateNickNameFree</a>
        <br /><font color="red">[수정]</font> <a href="#operation/UpdateSvcID">UpdateSvcID</a>
      </td><td>
        반환값 변경
        <br />반환값 변경
        <br />반환값 변경
      </td></tr>

      <tr><td>'19.11.05</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetSearch">GetSearch</a>
        <br /><font color="red">[수정]</font> <a href="#operation/RemoveFollowing">RemoveFollowing</a>
        <br /><font color="red">[수정]</font> <a href="#operation/WowzaSetCast">WowzaSetCast</a>
      </td><td>
        닉네임 검색 오류 수정
        <br />castDTCode 값에 따른 채팅서버 연동 처리 추가
        <br />현재 팔로워 인원수 채팅서버로 전달 처리
      </td></tr>

      <tr><td>'19.10.31</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetMemberClips">GetMemberClips</a>
      </td><td>
        반환값 변경
      </td></tr>

      <tr><td>'19.10.25</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetEvents">GetEvents</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetEvent">GetEvent</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetComments">GetComments</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetClips">GetClips</a>
      </td><td>
        반환값 변경
        <br />반환값 변경
        <br />반환값 변경(isOperator 추가)
        <br />반환값 변경(본인 자료 조회시 isOpen 추가/자료 변경)
      </td></tr>

      <tr><td>'19.10.18</td><td>
        <font color="red">[수정]</font> <a href="#operation/WowzaRemoveCast">WowzaRemoveCast</a>
      </td><td>
        방송종료 처리 중 일부 오류에 대해 에러->경고로 변경
      </td></tr>

      <tr><td>'19.10.16</td><td>
        <font color="red">[수정]</font> <a href="#operation/EnterCast">EnterCast</a>
        <br /><font color="red">[수정]</font> <a href="#operation/InteractionCastLike">InteractionCastLike</a>
        <br /><font color="red">[수정]</font> <a href="#operation/AddComment">AddComment</a>
        <br /><font color="red">[수정]</font> <a href="#operation/SendMessageCoin">SendMessageCoin</a>
        <br /><font color="red">[수정]</font> <a href="#operation/BuyShopItem">BuyShopItem</a>
      </td><td>
        익명처리
        <br />익명처리
        <br />익명처리
        <br />익명처리
        <br />익명처리
      </td></tr>

      <tr><td>'19.10.15</td><td>
        <font color="blue">[추가]</font> <a href="#operation/GetSchedulesExistsWithCount">GetSchedulesExistsWithCount</a>
      </td><td>
        스케줄 반환 정보 추가
      </td></tr>

      <tr><td>'19.10.11</td><td>
        <font color="red">[수정]</font> <a href="#operation/DownloadBankFile">DownloadBankFile</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetShopItem">GetShopItem</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/DownloadBankFileTest">DownloadBankFileTest</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/DownloadIdFileTest">DownloadIdFileTest</a>
        <br /><font color="red">[수정]</font> <a href="#operation/StartCast">StartCast</a>
        <br /><font color="red">[수정]</font> <a href="#operation/EnterCast">EnterCast</a>
        <br /><font color="red">[수정]</font> <a href="#operation/EndCast">EndCast</a>
      </td><td>
        파일 경로 오류 수정
        <br />쿼리 수정(국가별 검색 제거)
        <br />테스트용 api 추가
        <br />테스트용 api 추가
        <br />wowza 서버 주소 변경에 따른 추가 변경 처리
        <br />wowza 서버 주소 변경에 따른 추가 변경 처리
        <br />wowza 서버 주소 변경에 따른 추가 변경 처리
      </td></tr>

      <tr><td>'19.10.07</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetMemberNickName">GetMemberNickName</a>
        <br /><font color="red">[수정]</font> <a href="#operation/UpdateNickName">UpdateNickName</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/UpdateNickNameFree">UpdateNickNameFree</a>
      </td><td>
        반환값 추가(changeable)
        <br />처리시 무료로 수정 가능한 경우 무료로 처리
        <br />닉네임 무료 수정 처리 전용
      </td></tr>

      <tr><td>'19.10.01</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetMemberSchedulesDaily">GetMemberSchedulesDaily</a>
      </td><td>
        반환값 추가
      </td></tr>

      <tr><td>'19.09.24</td><td>
        <font color="blue">[추가]</font> <a href="#operation/RemoveFollowings">RemoveFollowings</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/RemoveManagers">RemoveManagers</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/RemoveBlocks">RemoveBlocks</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/RemoveMemberClips">RemoveMemberClips</a>
      </td><td>
        팔로잉 목록 삭제
        <br />매니저 목록 해제
        <br />시청차단 목록 해제
        <br />클립영상 목록 삭제
      </td></tr>

      <tr><td>'19.09.10</td><td>
        <font color="red">[수정]</font> <a href="#operation/UseItem">UseItem</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetSchedulesDaily">GetSchedulesDaily</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetRankings">GetRankings</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetSummaryLive">GetSummaryLive</a>
      </td><td>
        반환값 수정
        <br />반환값 수정
        <br />반환값 수정
        <br />반환값 수정
      </td></tr>

      <tr><td>'19.09.09</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetShopCoins">GetShopCoins</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetShopCubics">GetShopCubics</a>
        <br /><font color="red">[수정]</font> <a href="#operation/buyShopItem">buyShopItem</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/UseItem">UseItem</a>
      </td><td>
        반환값 수정
        <br />반환값 수정
        <br />요청값 수정(선물하기 추가)
        <br />아이템 사용 처리
      </td></tr>

      <tr><td>'19.09.05</td><td>
        <font color="blue">[추가]</font> <a href="#operation/AddRequestBank">AddRequestBank</a>
      </td><td>
        무통장입금 요청
      </td></tr>

      <tr><td>'19.09.04</td><td>
        <font color="blue">[추가]</font> <a href="#operation/BuyShopCoin">BuyShopCoin</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/BuyShopCubic">BuyShopCubic</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetReceivedItems">GetReceivedItems</a>
      </td><td>
        코인(루비)구매
        <br />코인(큐빅)구매
        <br />반환값 수정
      </td></tr>

      <tr><td>'19.09.03</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetShopCoins">GetShopCoins</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetShopCubics">GetShopCubics</a>
      </td><td>
        반환값 수정
        <br />반환값 수정
      </td></tr>

      <tr><td>'19.08.20</td><td>
        <font color="blue">[추가]</font> <a href="#operation/Translate">Translate</a>
      </td><td>
        번역
      </td></tr>

      <tr><td>'19.08.08</td><td>
        <font color="blue">[추가]</font> <a href="#operation/ReportCast">ReportCast</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetShopCoins">GetShopCoins</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetShopCubics">GetShopCubics</a>
        <br /><font color="red">[수정]</font> <a href="#operation/SendMessageCoin">SendMessageCoin</a>
      </td><td>
        방송 신고
        <br />판매 코인(루비) 목록
        <br />판매 큐빅 목록
        <br />메시지 코인 선물 온라인 겸용 처리
      </td></tr>

      <tr><td>'19.08.05</td><td>
        <font color="blue">[추가]</font> <a href="#operation/GetAllSendCoins">GetAllSendCoins</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetAllSendCoinsByThemaGroup">GetAllSendCoinsByThemaGroup</a>
      </td><td>
        선물 가능한 코인 목록
        <br />선물 가능한 코인 목록(그룹별)
      </td></tr>

      <tr><td>'19.08.01</td><td>
        <font color="blue">[추가]</font> <a href="#operation/JoinSupporter">JoinSupporter</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetSupporter">GetSupporter</a>
      </td><td>
        서포터 가입
        <br />서포터 가입 정보
      </td></tr>

      <tr><td>'19.07.29</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetCast">GetCast</a>
      </td><td>
        방송 정보 반환값 수정(r_i 추가)
      </td></tr>

      <tr><td>'19.07.25</td><td>
        <font color="blue">[추가]</font> <a href="#operation/DownloadIdFile">DownloadIdFile</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/DownloadBankFile">DownloadBankFile</a>
      </td><td>
        정산 - 신분증 파일 다운로드
        <br />정산 - 통장 파일 다운로드
      </td></tr>

      <tr><td>'19.07.24</td><td>
        <font color="blue">[추가]</font> <a href="#operation/GetPayRequests">GetPayRequests</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/SetPayRequest">SetPayRequest</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/AddPayRequest">AddPayRequest</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/CancelPayRequest">CancelPayRequest</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetPayConfirm">GetPayConfirm</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/UpdatePayConfirm">UpdatePayConfirm</a>
      </td><td>
        정산 - 요청목록
        <br />정산 - 요청 자료/임시 저장
        <br />정산 - 요청 등록
        <br />정산 - 요청 취소
        <br />정산 - 승인 자료
        <br />정산 - 승인 수정
      </td></tr>

      <tr><td>'19.07.16</td><td>
        <font color="red">[수정]</font> <a href="#operation/AddBlock">AddBlock</a>
        <br /><font color="green">[삭제]</font> <a href="#operation/ControlCastKick">ControlCastKick</a>
      </td><td>
        요청값에 castDTCode 추가
        <br />방송중 강퇴처리 <a href="#operation/AddBlock">AddBlock</a>으로 통합
      </td></tr>

      <tr><td>'19.07.15</td><td>
        <font color="red">[수정]</font> <a href="#operation/BuyShopItem">BuyShopItem</a>
      </td><td>
        잉크/컬러챗 구매시 채팅서버로 전달을 위한 req.userId값 추가
      </td></tr>

      <tr><td>'19.07.12</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetCastUsers">GetCastUsers</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetCastUserInfo">GetCastUserInfo</a>
        <br /><font color="green">[삭제]</font> <a href="#operation/OperationCastMessage">OperationCastMessage</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/SendServiceMessage">SendServiceMessage</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/SendChannelMessage">SendChannelMessage</a>
      </td><td>
        매니저 목록 추가
        <br />방송에 대한 사용자 정보
        <br />운영자 채널 메시지 전달 삭제
        <br />운영자 전체 메시지 전달
        <br />운영자 채널 메시지 전달
      </td></tr>

      <tr><td>'19.07.09</td><td>
        <font color="blue">[추가]</font> <a href="#operation/GetShopItem">GetShopItem</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/BuyShopItem">BuyShopItem</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/EnterChat">EnterChat</a>
      </td><td>
        판매 아이템 정보
        <br />판매 아이템 구매 처리
        <br />방송자 입장 처리
      </td></tr>

      <tr><td>'19.07.08</td><td>
        <font color="blue">[추가]</font> <a href="#operation/GetCast">GetCast</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetMember">GetMember</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/SendCastCoin">SendCastCoin</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/EnterChatInspector">EnterChatInspector</a>
      </td><td>
        방송 정보 반환
        <br />cast 항목 추가(캐시자료 반환)
        <br />코인 선물(방송중)
        <br />채팅 관전자 참여
      </td></tr>

      <tr><td>'19.07.05</td><td>
      <font color="blue">[추가]</font> <a href="#operation/GetCastMissions">GetCastMissions</a>
      <br /><font color="blue">[추가]</font> <a href="#operation/AddCastMission">AddCastMission</a>
      <br /><font color="blue">[추가]</font> <a href="#operation/RemoveCastMission">RemoveCastMission</a>
      <br /><font color="blue">[추가]</font> <a href="#operation/GetCastUsers">GetCastUsers</a>
      <br /><font color="blue">[추가]</font> <a href="#operation/GetCastDonators">GetCastDonators</a>
      <br /><font color="blue">[추가]</font> <a href="#operation/InteractionCastLike">InteractionCastLike</a>
      <br /><font color="blue">[추가]</font> <a href="#operation/ControlCastFreeze">ControlCastFreeze</a>
      <br /><font color="blue">[추가]</font> <a href="#operation/ControlCastBlock">ControlCastBlock</a>
      <br /><font color="blue">[추가]</font> <a href="#operation/ControlCastKick">ControlCastKick</a>
      <br /><font color="blue">[추가]</font> <a href="#operation/OperationCastAlert">OperationCastAlert</a>
      <br /><font color="blue">[추가]</font> <a href="#operation/OperationCastMessage">OperationCastMessage</a>
      </td><td>
      방송 미션 목록
      <br />방송 미션 추가
      <br />방송 미션 삭제
      <br />방송 참여자 목록
      <br />방송 후원자 목록
      <br />방송 좋아요
      <br />채팅 얼림
      <br />방송 블럭
      <br />방송 참여자 강퇴
      <br />방송 제재
      <br />메시지 전달(관리자)
      </td></tr>

      <tr><td>'19.07.04</td><td>
        <font color="blue">[추가]</font> <a href="#operation/StartCast">StartCast</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/EndCast">EndCast</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/EnterCast">EnterCast</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetCastPreset">GetCastPreset</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/UpdateCastPreset">UpdateCastPreset</a>
      </td><td>
        방송 시작(방송자)
        <br />방송 종료(방송자)
        <br />방송 입장(방송자/시청자)
        <br />방송 설정 정보
        <br />방송 설정 수정
      </td></tr>

      <tr><td>'19.07.03</td><td>
        <font color="blue">[추가]</font> <a href="#operation/GetJoinedFans">GetJoinedFans</a>
      </td><td>
        팬등록된 목록 반환
      </td></tr>

      <tr><td>'19.06.28</td><td>
        <font color="red">[수정]</font> <a href="#operation/SendMessageCoin">SendMessageCoin</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetQuestion">GetQuestion</a>
      </td><td>
        res 변경
        <br />res.addFilePath? -> addFileName? 변경
      </td></tr>

      <tr><td>'19.06.27</td><td>
        <font color="blue">[추가]</font> <a href="#operation/GetMemberCoin">GetMemberCoin</a>
      </td><td>
        코인 정보 반환
      </td></tr>

      <tr><td>'19.06.21</td><td>
        <font color="blue">[추가]</font> <a href="#operation/UpdateNickName">UpdateNickName</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/SendMessageCoin">SendMessageCoin</a>
      </td><td>
        내부 처리 변경
        <br />메시지(오프라인) 후원
      </td></tr>

      <tr><td>'19.06.20</td><td>
        <font color="blue">[추가]</font> <a href="#tag/greater">코드표 > 업적</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetMemberNickName">GetMemberNickName</a>
      </td><td>
        업적에 대한 코드표 추가
        <br />닉네임 정보
      </td></tr>

      <tr><td>'19.06.19</td><td>
        <font color="blue">[추가]</font> <a href="#operation/GetSupporters">GetSupporters</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetMemberClips">GetMemberClips</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/AddMemberClip">AddMemberClip</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/RemoveMemberClip">RemoveMemberClip</a>
      </td><td>
        서포터 목록
        <br />회원 클립 목록
        <br />회원 클립 등록
        <br />회원 클립 삭제
      </td></tr>

      <tr><td>'19.06.18</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetMemberTags">GetMemberTags</a>
        <br /><font color="red">[수정]</font> <a href="#operation/SetTMemberags">SetMemberTags</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetFollowers">GetFollowers</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetFollowings">GetFollowings</a>
        <br /><font color="red">[수정]</font> <a href="#operation/AddFollowing">AddFollowing</a>
        <br /><font color="red">[수정]</font> <a href="#operation/RemoveFollowing">RemoveFollowing</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetFans">GetFans</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetTopFans">GetTopFans</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetLevelFans">GetLevelFans</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetManagers">GetManagers</a>
        <br /><font color="red">[수정]</font> <a href="#operation/AddManager">AddManager</a>
        <br /><font color="red">[수정]</font> <a href="#operation/RemoveManager">RemoveManager</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetBlocks">GetBlocks</a>
        <br /><font color="red">[수정]</font> <a href="#operation/AddBlock">AddBlock</a>
        <br /><font color="red">[수정]</font> <a href="#operation/RemoveBlock">RemoveBlock</a>
      </td><td>
        태그 목록 반환
        <br />태그 수정
        <br />req/res 수정
        <br />req/res 수정
        <br />req/res 수정
        <br />req/res 수정
        <br />req/res 수정
        <br />req/res 수정
        <br />req/res 수정
        <br />req/res 수정
        <br />req/res 수정
        <br />req/res 수정
        <br />req/res 수정
        <br />req/res 수정
        <br />req/res 수정
      </td></tr>

      <tr><td>'19.06.17</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetComments">GetComments</a>
        <br /><font color="red">[수정]</font> <a href="#operation/AddComment">AddComment</a>
        <br /><font color="red">[수정]</font> <a href="#operation/ReportComment">ReportComment</a>
        <br /><font color="red">[수정]</font> <a href="#operation/RemoveComment">RemoveComment</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/AddMemberSchedule">AddMemberSchedule</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetMemberSchedule">GetMemberSchedule</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/RemoveMemberSchedule">RemoveMemberSchedule</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetMemberSchedulesExists">GetMemberSchedulesExists</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetMemberSchedulesDaily">GetMemberSchedulesDaily</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetAchieveSummary">GetAchieveSummary</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetAchieveMissions">GetAchieveMissions</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/AddAchieveRewards">AddAchieveRewards</a>
      </td><td>
        req/res 변경
        <br />req/res 변경
        <br />req/res 변경
        <br />req/res 변경
        <br />회원 스케줄 등록
        <br />회원 스케줄 정보 반환
        <br />회원 스케줄 삭제
        <br />회원 스케줄 일자 목록
        <br />회원 스케줄 일별 내역
        <br />업적 현재 그룹별 미션 진행 정보
        <br />업적 특정 그룹내 미션별 진행 정보
        <br />업적 미션에 대한 보상 요청
      </td></tr>

      <tr><td>'19.06.11</td><td>
        <font color="blue">[추가]</font> <a href="#operation/GetQuestions">GetQuestions</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetQuestion">GetQuestion</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/AddQuestion">AddQuestion</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetEvents">GetEvents</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetEvent">GetEvent</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetPurchasedCoins">GetPurchasedCoins</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetUsedCoins">GetUsedCoins</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetReceivedCoins">GetReceivedCoins</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetPurchasedCubics">GetPurchasedCubics</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetUsedCubics">GetUsedCubics</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetItems">GetItems</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetReceivedItems">GetReceivedItems</a>
      </td><td>
        1:1문의 내역
        <br />1:1문의 상세
        <br />1:1문의 등록
        <br />이벤트 목록
        <br />이벤트 정보
        <br />코인(루비) 구매내역
        <br />코인(루비) 사용내역
        <br />선물(후원)받은 코인(루비)내역
        <br />큐빅 구매내역
        <br />큐빅 사용내역
        <br />사용중인 아이템 목록
        <br />선물받은 아이템 목록
      </td></tr>

      <tr><td>'19.06.10</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetMember">GetMember</a>
      </td><td>
        res.level 변경
      </td></tr>

      <tr><td>'19.06.04</td><td>
        <font color="blue">[추가]</font> <a href="#operation/UpdateProfilePreset">UpdateProfilePreset</a>
        <br /><font color="red">[수정]</font> <a href="#operation/UpdateProfile">UpdateProfile</a>
        <br /><font color="red">[수정]</font> <a href="#operation/UpdateCellNumberCertify">UpdateCellNumberCertify</a>
        <br /><font color="red">[수정]</font> <a href="#operation/UpdateCellNumber">UpdateCellNumber</a>
        <br /><font color="red">[수정]</font> <a href="#operation/UpdateSvcID">UpdateSvcID</a>
        <br /><font color="red">[수정]</font> <a href="#operation/UpdatePassword">UpdatePassword</a>
        <br /><font color="red">[수정]</font> <a href="#operation/UpdateCertify">UpdateCertify</a>
        <br /><font color="red">[수정]</font> <a href="#operation/UpdatePushKey">UpdatePushKey</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetNotifications">GetNotifications</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/UpdateNotificationFollowing">UpdateNotificationFollowing</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/UpdateNotificationEvent">UpdateNotificationEvent</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/UpdateFollowingsPush">UpdateFollowingsPush</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetNotices">GetNotices</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetNotice">GetNotice</a>
      </td><td valign="top">
        프로필 설정(시스템 목록에서 선택)
        <br />req/res 변경
        <br />req/res 변경
        <br />req/res 변경
        <br />req/res 변경
        <br />req/res 변경
        <br />-
        <br />-
        <br />res 변경
        <br />노티-팔로잉 수신 설정
        <br />노티-소식(이벤트) 수신 설정
        <br />req/res 변경
        <br />req/res 변경
        <br />res 변경
      </td></tr>

      <tr><td>'19.05.30</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetMember">GetMember</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetClips">GetClips</a>
      </td><td>
        res.isCellCertify 추가
        <br />res.clips.castLevel 추가
      </td></tr>

      <tr><td>'19.05.23</td><td>
        <font color="blue">[추가]</font> <a href="#operation/GetSummaryTag">GetSummaryTag</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetMembers">GetMembers</a>
      </td><td>
        태그 메인용
        <br />req/res 수정
      </td></tr>

      <tr><td>'19.05.20</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetMember">GetMember</a>
      </td><td>
        req/res 수정
      </td></tr>

      <tr><td>'19.05.16</td><td>
        <font color="blue">[추가]</font> <a href="#operation/GetClip">GetClip</a>/<a href="#operation/GetClips">Getclips</a>
      </td><td>
        viewType/isAdult 추가
      </td></tr>

      <tr><td>'19.05.15</td><td>
        <font color="blue">[추가]</font> <a href="#operation/GetClip">GetClip</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetFollowings">GetFollowings</a>
      </td><td>
        클립 정보
        <br />방송중인 목록 추출 기능 추가
      </td></tr>

      <tr><td>'19.05.13</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetRankings">GetRankings</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetCasts">GetCasts</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetSchedulesDaily">GetSchedulesDaily</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetSchedulesExists">GetSchedulesExists</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetClips">GetClips</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/AddClipLike">AddClipLike</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/RemoveClipLike">RemoveClipLike</a>
      </td><td>
        랭킹(월/주/일) 목록 반환
        <br />핫리스트 목록 포함 기능 추가(웹)
        <br />일자별 스케줄 정보
        <br />기간내 스케줄 등록 정보
        <br />클립 목록
        <br />클립 좋아요 처리
        <br />클립 좋아요 취소 처리
      </td></tr>

      <tr><td>'19.05.10</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetSummaryLive">GetSummaryLive</a>
        <br />&nbsp;
        <br />&nbsp;
      </td><td>
        req/res 전체 수정
        <br />GetSummaryApp -> GetSummaryLive
        <br />주소 변경 (/{svcKey}/complex/summary/app -><br />/{svcKey}/complex/summary/live)및 "r_c" 추가
      </td></tr

      <tr><td>'19.05.03</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetCasts">GetCasts</a>
        <!--<br /><font color="blue">[추가]</font> <a href="#operation/GetFollowingsCasts">GetFollowingsCasts</a>-->
        <br /><font color="blue">[추가]</font> <a href="#operation/GetSchedulesDaily">GetSchedulesDaily</a>
        <br /><font color="blue">[추가]</font> <a href="#operation/GetSchedulesExists">GetSchedulesExists</a>
      </td><td>
        req/res 전체 수정
        <br />지정일의 방송 스케줄 전체 목록 반환
        <br />지정기간 동안의 스케줄이 존재하는 일자 목록 반환
      </td></tr

      <tr><td>'19.04.30</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetSummaryApp">GetSummaryApp</a>
      </td><td>
        res.casts.pictureURL 수정(랜덤X)
      </td></tr

      <tr><td>'19.04.29</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetSummaryApp">GetSummaryApp</a>
      </td><td>
        res.rankings 값 추가(likeCount, viewCount, followCount)
      </td></tr

      <tr><td>'19.04.26</td><td>
        <font color="red">[수정]</font> <a href="#operation/WowzaSetCast">WowzaSetCast</a>
      </td><td>
        res.streamName 값 추가
      </td></tr

      <tr><td>'19.04.25</td><td>
        <font color="red">[추가]</font> <a href="#operation/GetSummaryApp">GetSummaryApp</a>
      </td><td>
        Summary main for app
      </td></tr>

      <tr><td>'19.04.19</td><td>
        <font color="blue">[추가]</font> <a href="#operation/GetVulgarWords">GetVulgarWords</a>
        <br /><font color="red">[수정]</font> <a href="#operation/RegistLocalStepSvcID">RegistLocalStepSvcID</a>
        <br /><font color="red">[수정]</font> <a href="#operation/RegistLocalStepNickName">RegistLocalStepNickName</a>
      </td><td>
        필터링 대상 비속어 목록 반환
        <br />필터링 기능 추가에 따른 오류 코드(0x2066) 추가
        <br />필터링 기능 추가에 따른 오류 코드(0x2066) 추가
      </td></tr>

      <tr><td>'19.04.18</td><td>
        <font color="red">[수정]</font> <a href="#operation/GetSearch">GetSearch</a>
        <br /><font color="red">[수정]</font> <a href="#operation/GetSearchKeywords">GetSearchKeywords</a>
      </td><td>
        req/res 값 변경, 메모리캐싱 처리
        <br />req/res 값 변경, 메모리캐싱 처리
      </td></tr>

      <tr><td>'19.04.16</td><td>
        <font color="red">[추가]</font> <a href="#operation/GetSearch">GetSearch</a>
        <br /><font color="red">[추가]</font> <a href="#operation/GetSearchKeywords">GetSearchKeywords</a>
      </td><td>
        검색
        <br />검색 키워드
      </td></tr>
      </table>
  - name: complex
    description: |
      메인 등 복합정보 반환 요청 처리
  - name: program
    description: 프로그램 정보
  - name: 검색
    description: 검색
  - name: 회원
    description: 회원 정보
  - name: 회원 가입
    description: 회원 가입
  - name: 회원 재설정
    description: 정보 수정/초기화
  - name: 회원 수정
    description: 회원 > 정보수정
  - name: 회원 노티
    description: 회원 > 알림
  - name: 회원 태그
    description: 회원 > 태그
  - name: 회원 댓글
    description: 회원 > 댓글
  - name: 회원 스케줄
    description: 회원 > 스케줄
  - name: 회원 업적
    description: 회원 > 업적
  - name: 회원 클립
    description: 회원 > 클립
  - name: 회원 팔로우
    description: 회원 > 팔로우
  - name: 회원 팬
    description: 회원 > 팬
  - name: 회원 서포터
    description: 회원 > 서포터
  - name: 회원 매니저
    description: 회원 > 매니저
  - name: 회원 차단
    description: 회원 > 차단
  - name: 회원 코인
    description: 회원 > 루비/큐빅의 구매/선물 내역 등
  - name: 회원 아이템
    description: 회원 > 아이템 구매/선물 내역 등
  - name: 회원 문의
    description: 회원 > 1:1 문의
  - name: 회원 정산
    description: 회원 > 정산
  - name: 방송 프리셋
    description: 방송 설정 정보
  - name: 방송
    description: 방송 정보
  - name: 방송 미션
    description: 방송 미션 처리
  - name: 방송 참여자
    description: 방송 참여자 정보
  - name: 방송 인터액션
    description: 방송 상호작용
  - name: 방송 제어
    description: 방송 제어 처리
  - name: 방송 운영
    description: 방송 운영 처리
  - name: 채팅
    description: 채팅 정보
  - name: 코인/아이템
    description: 코인/아이템 조회 및 구매 처리
  - name: 스케줄
    description: 방송 스케줄 처리
  - name: 클립
    description: 클립영상 정보
  - name: 지원 센터
    description: 지원 센터
  - name: 랭킹
    description: 랭킹
  - name: 유틸리티
    description: 기타
  - name: wowza
    description: Wowza 서버 요청
  - name: 파일다운로드
    description: 파일 다운로드 처리
  - name: 번역
    description: 번역
  - name: Anonymous 정보
    description: |
      Anonymous 적용 범위
      - 채팅
        - 메시지 : nickName='Anonymous'
        - 아이템
          - 라이브업 : nickName='Anonymous'
          - 좋아요 : nickName='Anonymous'
          - 후원 : nickName='Anonymous'
          - 메시지 후원 : nickName='Anonymous'
      - API
        - GetCastDonators : memKey=0, nickName='Anonymous'
        - GetComments : memKey=0, nickName='Anonymous', isAnonymous=1
        - GetReceivedCoins : memKey=0, nickName='Anonymous'
  - name: 코드표 > 업적보상
    description: |
      업적 보상 정보
      <table>
      <tr><td>보상타입(rwdType)</td><td>보상(rwdValue)</td><td>보상처리</td><td>안내문구</td></tr>
      <tr><td>0 - 시스템보상</td><td>XP</td><td>보상 요청과 동시에 (rwdCnt)경험치 추가 입력</td><td>회원등급 점수 ?xp 가 증가합니다</td></tr>
      <tr><td>0 - 시스템보상</td><td>FAN LV Cast Open</td><td>보상 요청과 동시에 팬레벨 제한 방송 허용</td><td>팬 등급방송을 시작할 수 있습니다</td></tr>
      <tr><td>0 - 시스템보상</td><td>Member LV Cast Open</td><td>보상 요청과 동시에 회원레벨 제한 방송 허용</td><td>회원 등급방송을 시작할 수 있습니다</td></tr>
      <tr><td>0 - 시스템보상</td><td>Plus manager</td><td>보상 요청과 동시에 지정가능 매니저수(rwdCnt)만큰 영구 증가</td><td>본인 방송의 매니저가 제한없이 ?명 증가합니다</td></tr>
      <tr><td>0 - 시스템보상</td><td>Plus View</td><td>보상 요청과 동시에 시청가능 인원수(rwdCnt)까지 영구 증가</td><td>본인방송의 최대 시청가능 인원수가 ?명 까지 증가합니다.</td></tr>
      <tr><td>1 - 아이템지급</td><td>cl*</td><td>컬러리스트 x(rwdCnt)개 지급</td><td>방송목록에서 본인의 방송리스트 배경색이 적용됩니다</td></tr>
      <tr><td>1 - 아이템지급</td><td>hl*</td><td>핫리스트 x(rwdCnt)개 지급</td><td>본인의 방송이 메인,인기,추천 방송목록에 우선적으로 검색 및 노출됩니다</td></tr>
      <tr><td>1 - 아이템지급</td><td>pm*</td><td>플러스매니저 x(rwdCnt)개 지급</td><td>방송자의 매니저 지정수가 해당 기간동안 증가합니다</td></tr>
      <tr><td>1 - 아이템지급</td><td>pv*</td><td>플러스뷰 x(rwdCnt)개 지급</td><td>본인방송의 최대 시청가능 인원수가 해당기간동안 증가합니다</td></tr>
      <tr><td>2 - 코인(루비)지급</td><td>r*</td><td>루비지급 x(rwdCnt)개 지급</td><td>방송자에게 선물할 수 있습니다</td></tr>
      <tr><td>2 - 코인(큐빅)지급</td><td>c*</td><td>큐빅지급 x(rwdCnt)개 지급</td><td>아이템을 구매할 수 있습니다.</td></tr>
      </table>
  - name: 코드표 > 업적
    description: |
      업적 코드표
      <table>
      <tr><td colspan="2">Group</td><td colspan="2">Mission</td><td rowspan="2">MissionCode</td></tr>
      <tr><td>Code</td><td>설명</td><td>Step</td><td>설명</td></tr>
      <tr><td>0</td><td>정회원</td><td>1</td><td>본인인증 하기</td><td>0-1</td></tr>
      <tr><td rowspan="5">1</td><td rowspan="5">라이브 사랑</td><td>1</td><td>좋아요 500회 보내기</td><td>1-1</td></tr>
      <tr><td>2</td><td>좋아요 1,000회 보내기</td><td>1-2</td></tr>
      <tr><td>3</td><td>좋아요 1,500회 보내기</td><td>1-3</td></tr>
      <tr><td>4</td><td>좋아요 2,000회 보내기</td><td>1-4</td></tr>
      <tr><td>5</td><td>좋아요 2,500회 보내기</td><td>1-5</td></tr>
      <tr><td rowspan="10">2</td><td rowspan="10">남들과 다른눈</td><td>1</td><td>20시간 시청 달성</td><td>2-1</td></tr>
      <tr><td>2</td><td>40시간 시청 달성</td><td>2-2</td></tr>
      <tr><td>3</td><td>70시간 시청 달성</td><td>2-3</td></tr>
      <tr><td>4</td><td>120시간 시청 달성</td><td>2-4</td></tr>
      <tr><td>5</td><td>170시간 시청 달성</td><td>2-5</td></tr>
      <tr><td>6</td><td>240시간 시청 달성</td><td>2-6</td></tr>
      <tr><td>7</td><td>320시간 시청 달성</td><td>2-7</td></tr>
      <tr><td>8</td><td>380시간 시청 달성</td><td>2-8</td></tr>
      <tr><td>9</td><td>420시간 시청 달성</td><td>2-9</td></tr>
      <tr><td>10</td><td>470시간 시청 달성</td><td>2-10</td></tr>
      <tr><td rowspan="10">3</td><td rowspan="10">후원 실세</td><td>1</td><td>루비 후원 100개 하기</td><td>3-1</td></tr>
      <tr><td>2</td><td>루비 후원 200개 하기</td><td>3-2</td></tr>
      <tr><td>3</td><td>루비 후원 400개 하기</td><td>3-3</td></tr>
      <tr><td>4</td><td>루비 후원 600개 하기</td><td>3-4</td></tr>
      <tr><td>5</td><td>루비 후원 900개 하기</td><td>3-5</td></tr>
      <tr><td>6</td><td>루비 후원 1,400개 하기</td><td>3-6</td></tr>
      <tr><td>7</td><td>루비 후원 2,000개 하기</td><td>3-7</td></tr>
      <tr><td>8</td><td>루비 후원 2,500개 하기</td><td>3-8</td></tr>
      <tr><td>9</td><td>루비 후원 3,000개 하기</td><td>3-9</td></tr>
      <tr><td>10</td><td>루비 후원 3,400개 하기</td><td>3-10</td></tr>
      <tr><td rowspan="10">4</td><td rowspan="10">팬등급 수집</td><td>1</td><td>팬등급 1레벨 첫 달성하기</td><td>4-1</td></tr>
      <tr><td>2</td><td>팬등급 2레벨 첫 달성하기</td><td>4-2</td></tr>
      <tr><td>3</td><td>팬등급 3레벨 첫 달성하기</td><td>4-3</td></tr>
      <tr><td>4</td><td>팬등급 4레벨 첫 달성하기</td><td>4-4</td></tr>
      <tr><td>5</td><td>팬등급 5레벨 첫 달성하기</td><td>4-5</td></tr>
      <tr><td>6</td><td>팬등급 6레벨 첫 달성하기</td><td>4-6</td></tr>
      <tr><td>7</td><td>팬등급 7레벨 첫 달성하기</td><td>4-7</td></tr>
      <tr><td>8</td><td>팬등급 8레벨 첫 달성하기</td><td>4-8</td></tr>
      <tr><td>9</td><td>팬등급 9레벨 첫 달성하기</td><td>4-9</td></tr>
      <tr><td>10</td><td>팬등급 10레벨 첫 달성하기</td><td>4-10</td></tr>
      <tr><td rowspan="7">5</td><td rowspan="7">활동 능력</td><td>1</td><td>회원등급 10레벨 달성하기</td><td>5-1</td></tr>
      <tr><td>2</td><td>회원등급 20레벨 달성하기</td><td>5-2</td></tr>
      <tr><td>3</td><td>회원등급 30레벨 달성하기</td><td>5-3</td></tr>
      <tr><td>4</td><td>회원등급 40레벨 달성하기</td><td>5-4</td></tr>
      <tr><td>5</td><td>회원등급 50레벨 달성하기</td><td>5-5</td></tr>
      <tr><td>6</td><td>회원등급 60레벨 달성하기</td><td>5-6</td></tr>
      <tr><td>7</td><td>회원등급 70레벨 달성하기</td><td>5-7</td></tr>
      <tr><td rowspan="10">6</td><td rowspan="10">서비스 체크</td><td>1</td><td>서비스 3일 접속하기</td><td>6-1</td></tr>
      <tr><td>2</td><td>서비스 4일 접속하기</td><td>6-2</td></tr>
      <tr><td>3</td><td>서비스 7일 접속하기</td><td>6-3</td></tr>
      <tr><td>4</td><td>서비스 16일 접속하기</td><td>6-4</td></tr>
      <tr><td>5</td><td>서비스 30일 접속하기</td><td>6-5</td></tr>
      <tr><td>6</td><td>서비스 40일 접속하기</td><td>6-6</td></tr>
      <tr><td>7</td><td>서비스 100일 접속하기</td><td>6-7</td></tr>
      <tr><td>8</td><td>서비스 200일 접속하기</td><td>6-8</td></tr>
      <tr><td>9</td><td>서비스 250일 접속하기</td><td>6-9</td></tr>
      <tr><td>10</td><td>서비스 350일 접속하기</td><td>6-10</td></tr>
      <tr><td rowspan="10">7</td><td rowspan="10">정규 채널</td><td>1</td><td>10시간 이상 라이브 하기</td><td>7-1</td></tr>
      <tr><td>2</td><td>20시간 이상 라이브 하기</td><td>7-2</td></tr>
      <tr><td>3</td><td>50시간 이상 라이브 하기</td><td>7-3</td></tr>
      <tr><td>4</td><td>90시간 이상 라이브 하기</td><td>7-4</td></tr>
      <tr><td>5</td><td>150시간 이상 라이브 하기</td><td>7-5</td></tr>
      <tr><td>6</td><td>300시간 이상 라이브 하기</td><td>7-6</td></tr>
      <tr><td>7</td><td>500시간 이상 라이브 하기</td><td>7-7</td></tr>
      <tr><td>8</td><td>800시간 이상 라이브 하기</td><td>7-8</td></tr>
      <tr><td>9</td><td>1,200시간 이상 라이브 하기</td><td>7-9</td></tr>
      <tr><td>10</td><td>2,000시간 이상 라이브 하기</td><td>7-10</td></tr>
      <tr><td rowspan="10">8</td><td rowspan="10">인기 방송</td><td>1</td><td>좋아요 1,000번 받기</td><td>8-1</td></tr>
      <tr><td>2</td><td>좋아요 3,000번 받기</td><td>8-2</td></tr>
      <tr><td>3</td><td>좋아요 11,000번 받기</td><td>8-3</td></tr>
      <tr><td>4</td><td>좋아요 20,000번 받기</td><td>8-4</td></tr>
      <tr><td>5</td><td>좋아요 35,000번 받기</td><td>8-5</td></tr>
      <tr><td>6</td><td>좋아요 80,000번 받기</td><td>8-6</td></tr>
      <tr><td>7</td><td>좋아요 100,000번 받기</td><td>8-7</td></tr>
      <tr><td>8</td><td>좋아요 250,000번 받기</td><td>8-8</td></tr>
      <tr><td>9</td><td>좋아요 300,000번 받기</td><td>8-9</td></tr>
      <tr><td>10</td><td>좋아요 500,000번 받기</td><td>8-10</td></tr>
      <tr><td rowspan="10">9</td><td rowspan="10">팬 모집</td><td>1</td><td>팬 50명 달성</td><td>9-1</td></tr>
      <tr><td>2</td><td>팬 150명 달성</td><td>9-2</td></tr>
      <tr><td>3</td><td>팬 300명 달성</td><td>9-3</td></tr>
      <tr><td>4</td><td>팬 500명 달성</td><td>9-4</td></tr>
      <tr><td>5</td><td>팬 1,000명 달성</td><td>9-5</td></tr>
      <tr><td>6</td><td>팬 1,500명 달성</td><td>9-6</td></tr>
      <tr><td>7</td><td>팬 2,500명 달성</td><td>9-7</td></tr>
      <tr><td>8</td><td>팬 4,000명 달성</td><td>9-8</td></tr>
      <tr><td>9</td><td>팬 5,000명 달성</td><td>9-9</td></tr>
      <tr><td>10</td><td>팬 10,000명 달성</td><td>9-10</td></tr>
      <tr><td rowspan="10">10</td><td rowspan="10">최고 시청률</td><td>1</td><td>동시 시청자 900명</td><td>10-1</td></tr>
      <tr><td>2</td><td>동시 시청자 1,400명</td><td>10-2</td></tr>
      <tr><td>3</td><td>동시 시청자 1,900명</td><td>10-3</td></tr>
      <tr><td>4</td><td>동시 시청자 2,400명</td><td>10-4</td></tr>
      <tr><td>5</td><td>동시 시청자 2,900명</td><td>10-5</td></tr>
      <tr><td>6</td><td>동시 시청자 3,400명</td><td>10-6</td></tr>
      <tr><td>7</td><td>동시 시청자 3,900명</td><td>10-7</td></tr>
      <tr><td>8</td><td>동시 시청자 4,400명</td><td>10-8</td></tr>
      <tr><td>9</td><td>동시 시청자 4,900명</td><td>10-9</td></tr>
      <tr><td>10</td><td>동시 시청자 5,400명</td><td>10-10</td></tr>
      </table>
  - name: 코드표 > API
    description: |
      API 오류 코드 History
      <table>
        <tr><td>코드</td><td>추가/수정일시</td><td>비고</td></tr>
        <tr><td>0x5037</td><td>2020.05.27</td><td>방송중 경고 누적으로 인한 입장 제한</td></tr>
        <tr><td>0xZZZP</td><td>2020.04.29</td><td>점검(일부 서비스 제한)</td></tr>
        <tr><td>DxC003</td><td>2020.04.17</td><td>해당 스케줄 존재하지 않음</td></tr>
        <tr><td>0x1101</td><td>2020.04.08</td><td>해당 기능 종료됨</td></tr>
        <tr><td>0x1100</td><td>2020.03.24</td><td>가입용 본인인증 정보 없음</td></tr>
        <tr><td>0x2081</td><td>2020.03.24</td><td>svcID에 비속어 포함됨</td></tr>
        <tr><td>0x2082</td><td>2020.03.24</td><td>nickName에 비속어 포함됨</td></tr>
        <tr><td>Dx1036</td><td>2020.03.24</td><td>가입된 소셜 계정 없음</td></tr>
        <tr><td>0x1099</td><td>2020.01.29</td><td>인앱 영수증 중복 요청</td></tr>
        <tr><td>0x1098</td><td>2020.01.29</td><td>인앱 영수증 검증 원격 서버 오류</td></tr>
        <tr><td>0x1097</td><td>2020.01.29</td><td>인앱 영수증 검증 실패</td></tr>
        <tr><td>0x2080</td><td>2020.01.29</td><td>미지원 플랫폼</td></tr>
        <tr><td>0x2079</td><td>2020.01.29</td><td>시간초과</td></tr>
        <tr><td>0x2078</td><td>2020.01.29</td><td>번역 대상 언어와 요청 언어가 일치하지 않아야 합니다</td></tr>
        <tr><td>0x1096</td><td>2020.01.06</td><td>본인인증 일일 제한 도달</td></tr>
        <tr><td>0xZ404</td><td>2019.11.15</td><td>지원하지 않는 기능</td></tr>
        <tr><td>0xZ500</td><td>2019.11.15</td><td>관리되지 않은 오류</td></tr>
        <tr><td>0x2077</td><td>2019.08.20</td><td>미지원 번역 언어</td></tr>
        <tr><td>0x1092</td><td>2019.07.05</td><td>추가 제한 도달</td></tr>
        <tr><td>0x1093</td><td>2019.07.05</td><td>추가 제한 초과</td></tr>
        <tr><td>0x1094</td><td>2019.07.05</td><td>일일 추가 제한 도달</td></tr>
        <tr><td>0x1095</td><td>2019.07.05</td><td>일일 추가 제한 초과</td></tr>
        <tr><td>0x5029</td><td>2019.07.04</td><td>비로그인 사용자 입장 불가</td></tr>
        <tr><td>0x5030</td><td>2019.07.04</td><td>회원레벨 제한 사용 불가</td></tr>
        <tr><td>0x5031</td><td>2019.07.04</td><td>팬레벨 제한 사용 불가</td></tr>
        <tr><td>0x5032</td><td>2019.07.04</td><td>회원레벨 제한값 범위 초과</td></tr>
        <tr><td>0x5033</td><td>2019.07.04</td><td>팬레벨 제한값 범위 초과</td></tr>
        <tr><td>0x5034</td><td>2019.07.04</td><td>방송 제목에 비속어 포함됨</td></tr>
        <tr><td>0x5035</td><td>2019.07.04</td><td>방송 태그에 비속어 포함됨</td></tr>
        <tr><td>0x1091</td><td>2019.06.27</td><td>큐빅 부족</td></tr>
        <tr><td>0x1090</td><td>2019.06.27</td><td>코인 부족</td></tr>
        <tr><td>DxB001</td><td>2019.06.20</td><td>클립 자료 없음</td></tr>
        <tr><td>DxB002</td><td>2019.06.20</td><td>클립에 대한 좋아요 이미 처리됨</td></tr>
        <tr><td>DxB003</td><td>2019.06.20</td><td>클립에 대한 좋아요 처리 내역 없음</td></tr>
        <tr><td>DxC001</td><td>2019.06.20</td><td>동일 시간대 등록된 스케줄 있음</td></tr>
        <tr><td>DxC002</td><td>2019.06.20</td><td>지난 시간 스케줄임</td></tr>
        <tr><td>0x2070</td><td>2019.06.20</td><td>지원하지 않는 영상 링크</td></tr>
        <tr><td>0x1089</td><td>2019.06.20</td><td>영상 파일 처리 오류(썸네일 추출)</td></tr>
        <tr><td>0x1088</td><td>2019.06.20</td><td>영상 파일 처리 오류</td></tr>
        <tr><td>0x1087</td><td>2019.06.20</td><td>원하지 않는 지역/언어</td></tr>
        <tr><td>0x1086</td><td>2019.06.11</td><td>파일 처리 오류(복사/삭제 등)</td></tr>
        <tr><td>0x2068</td><td>2019.06.11</td><td>파일 전달 갯수 초과</td></tr>
        <tr><td>0x2069</td><td>2019.06.11</td><td>파일 용량 초과</td></tr>
        <tr><td>DxZ001</td><td>2019.05.07</td><td>캐시 자료 준비중</td></tr>
        <tr><td>0x2067</td><td>2019.05.03</td><td>지원하지 않는 (s)earch (c)ategory 값</td></tr>
        <tr><td>0xZZZZ</td><td>2019.04.19</td><td>점검중</td></tr>
        <tr><td>0x2066</td><td>2019.04.19</td><td>요청값에 비속어가 포함되어 있음</td></tr>
        <tr><td>0x2065</td><td>2019.04.19</td><td>지원하지 않는 언어</td></tr>
        <tr><td>0x1085</td><td>2019.04.04</td><td>SMS인증 발송 정보 없음</td></tr>
        <tr><td>0x1084</td><td>2019.04.04</td><td>SMS인증 발송 제한에 도달함</td></tr>
        <tr><td>0x1083</td><td>2019.04.04</td><td>로그인 시도 제한에 도달함</td></tr>
        <tr><td>0x1082</td><td>2019.04.04</td><td>로그인 오류</td></tr>
        <tr><td>0x1081</td><td>2019.04.04</td><td>방송자 아님</td></tr>
        <tr><td>0x1080</td><td>2019.04.04</td><td>방송자임</td></tr>
        <tr><td>Dx1030</td><td>2019.02.13</td><td>SNS계정 가입처리시 오류 추가</td></tr>
        <tr><td>0x1077</td><td>2019.02.13</td><td>SNS계정 가입처리시 오류 - 이메일 없음</td></tr>
        <tr><td>0x1078</td><td>2019.02.13</td><td>SNS API 접속 오류</td></tr>
        <tr><td>0x1079</td><td>2019.02.14</td><td>SNS API로부터 오류 반환</td></tr>
      </table>
      API 오류 코드 형식
      <table>
        <tr><td>자릿수</td><td>비고</td></tr>
        <tr><td>1</td><td>
        대분류<br />
        &nbsp;&nbsp;-&nbsp;0: 내부오류<br />
        &nbsp;&nbsp;-&nbsp;A: 인증서버 오류<br />
        &nbsp;&nbsp;-&nbsp;D: DB서버 오류<br />
        &nbsp;&nbsp;-&nbsp;S: 채팅서버 오류<br />
        &nbsp;&nbsp;-&nbsp;W: Wowza서버 오류
        </td></tr>
        <tr><td>2</td><td>고정값(x), 대분류와 소분류 구분용</td></tr>
        <tr><td>3</td><td>소분류</td></tr>
        <tr><td>4~6</td><td>상세값</td></tr>
      </table>
      API 오류코드 대/소분류 안내
      <table>
        <tr><td>대/소분류 코드</td><td>비고</td></tr>
        <tr><td>0x0</td><td>주요 키값 오류(svcKey, version 등)</td></tr>
        <tr><td>0xC</td><td>쿠키값 오류</td></tr>
        <tr><td>0x1</td><td>일반 오류</td></tr>
        <tr><td>0x2</td><td>전달값 오류</td></tr>
        <tr><td>0x3</td><td>대상자/요청자 오류</td></tr>
        <tr><td>0x5</td><td>방송 관련 오류</td></tr>
        <tr><td>Dx0</td><td>DB-자료 유무 및 읽기/쓰기 등 원초적 오류</td></tr>
        <tr><td>Dx1</td><td>DB-회원정보 관련 오류</td></tr>
        <tr><td>Dx2</td><td>DB-방송정보 관련 오류</td></tr>
        <tr><td>Dx3</td><td>DB-SMS 관련 오류</td></tr>
        <tr><td>Dx4</td><td>DB-지원센터 관련 오류</td></tr>
        <tr><td>Dx5</td><td>DB-팔로우 관련 오류</td></tr>
        <tr><td>Dx6</td><td>DB-매니저 관련 오류</td></tr>
        <tr><td>Dx7</td><td>DB-아이템 관련 오류</td></tr>
        <tr><td>Dx8</td><td>DB-업적 관련 오류</td></tr>
        <tr><td>Dx9</td><td>DB-좋아요 관련 오류</td></tr>
        <tr><td>DxA</td><td>DB-댓글 관련 오류</td></tr>
      </table>
      API 오류코드표<br />
      <table>
        <tr><td>코드</td><!--td>코드명</td--><td>StatusCode</td><td>설명</td></tr>

        <tr><td>0x0000</td><!--td>OK</td--><td>200</td><td>성공</td></tr>

        <tr><td>0xZ404</td><!--td>Unsupported</td--><td>404</td><td>제공하지 않는 기능 요청</td></tr>
        <tr><td>0xZ500</td><!--td>Unhandled</td--><td>500</td><td>관리되지 않은 오류 발생</td></tr>

        <tr><td>0xZZZZ</td><!--td>Maintenance</td--><td>500</td><td>점검</td></tr>
        <tr><td>0xZZZP</td><!--td>PartialMaintenance</td--><td>500</td><td>점검(일부 서비스)</td></tr>

        <tr><td>0x0001</td><!--td>SvcKeyInvalid</td--><td>400</td><td>잘못된 값 - svcKey</td></tr>
        <tr><td>0x0002</td><!--td>PtnKeyInvalid</td--><td>400</td><td>잘못된 값 - ptnKey</td></tr>
        <tr><td>0x0003</td><!--td>MktKeyInvalid</td--><td>400</td><td>잘못된 값 - mktKey</td></tr>
        <tr><td>0x0004</td><!--td>VersionInvalid</td--><td>400</td><td>잘못된 값 - version</td></tr>

        <tr><td>0xC001</td><!--td>CookieAuthEmpty</td--><td>401</td><td>쿠키 - 인증값 없음</td></tr>
        <tr><td>0xC002</td><!--td>CookieAuthInvalid</td--><td>401</td><td>쿠키 - 인증값 잘못된 형식</td></tr>
        <tr><td>0xC003</td><!--td>CookieAuthDecryptFail</td--><td>401</td><td>쿠키 - 인증값 복호중 오류 발생</td></tr>
        <tr><td>0xC004</td><!--td>CookieAuthExpired</td--><td>401</td><td>쿠키 - 시간 만료된 인증값</td></tr>

        <tr><td>Ax0001</td><!--td>CAuthUnavailable</td--><td>500</td><td>인증 - 서버 연결 오류</td></tr>
        <tr><td>Ax0002</td><!--td>CAuthDBError</td--><td>500</td><td>인증 - 서버 오류(DB)</td></tr>
        <tr><td>Ax0003</td><!--td>CAuthTokenNotExists</td--><td>401</td><td>인증 - 인증서버에 해당 요청 자료가 존재하지 않음</td></tr>

        <tr><td>0x1001</td><!--td>PasswordNotMatched</td--><td>400</td><td>비밀번호가 일치하지 않음</td></tr>
        <tr><td>0x1002</td><!--td>PasswordErrorDailyLimitReached</td--><td>400</td><td>비밀번호 오류 일일 제한 횟수 도달</td></tr>
        <tr><td>0x1003</td><!--td>PasswordErrorLimitReached</td--><td>400</td><td>비밀번호 오류 제한횟수 도달</td></tr>
        <tr><td>0x1011</td><!--td>LoginRequired</td--><td>403</td><td>로그인이 필요한 기능</td></tr>
        <tr><td>0x1012</td><!--td>AccountBlockedPermanent</td--><td>400</td><td>차단된 계정(영구적)</td></tr>
        <tr><td>0x1013</td><!--td>AccountBlockedTemporary</td--><td>400</td><td>차단된 계정(기간제)</td></tr>
        <tr><td>0x1021</td><!--td>AuthorizationInUse</td--><td>400</td><td>본인인증을 현재 사용중임</td></tr>
        <tr><td>0x1022</td><!--td>AuthorizationNotInUse</td--><td>400</td><td>본인인증을 현재 사용중이지 않음</td></tr>
        <tr><td>0x1031</td><!--td>ChangeValueIsSameAsBefore</td--><td>400</td><td>변경을 요청한 값이 이전값과 동일함</td></tr>
        <tr><td>0x1032</td><!--td>ChangeLimitReached</td--><td>400</td><td>변경 제한 횟수에 도달함</td></tr>
        <tr><td>0x1033</td><!--td>ChangeLimitExceeded</td--><td>400</td><td>변경 제한 횟수를 초과함</td></tr>
        <tr><td>0x1034</td><!--td>ChangeLimitReachedSvcID</td--><td>400</td><td>변경 제한 횟수에 도달함(svcID 한정)</td></tr>
        <tr><td>0x1035</td><!--td>ChangeLimitExceededSvcID</td--><td>400</td><td>변경 제한 횟수를 초과함(svcID 한정)</td></tr>
        <tr><td>0x1036</td><!--td>ChangeLimitReachedNickName</td--><td>400</td><td>변경 제한 횟수에 도달함(nickName 한정)</td></tr>
        <tr><td>0x1037</td><!--td>ChangeLimitExceededNickName</td--><td>400</td><td>변경 제한 횟수를 초과함(nickName 한정)</td></tr>
        <tr><td>0x1041</td><!--td>SMSCertifySendDailyLimitReached</td--><td>400</td><td>SMS - 인증 요청 일일 제한 횟수 도달</td></tr>
        <tr><td>0x1042</td><!--td>SMSCertifyTokenNotExists</td--><td>400</td><td>SMS - 인증 토큰 자료 없음</td></tr>
        <tr><td>0x1043</td><!--td>SMSCertifyTokenFormatInvalid</td--><td>400</td><td>SMS - 인증 토큰 형식이 올바르지 않음</td></tr>
        <tr><td>0x1044</td><!--td>SMSCertifyCodeNotMatched</td--><td>400</td><td>SMS - 인증 코드가 일치하지 않음</td></tr>
        <tr><td>0x1045</td><!--td>SMSCertifyCodeExpired</td--><td>400</td><td>SMS - 인증 코드의 유효기간이 만료됨</td></tr>
        <tr><td>0x1051</td><!--td>IsAdult</td--><td>401</td><td>본인 인증을 통해 성인임이 확인 됨</td></tr>
        <tr><td>0x1052</td><!--td>IsNotAdult</td--><td>401</td><td>현재 성인 상태가 아님</td></tr>
        <tr><td>0x1061</td><!--td>MemberLevelInsufficient</td--><td>400</td><td>회원 레벨 제한을 충족하지 못함</td></tr>
        <tr><td>0x1062</td><!--td>VIPLevelInsufficient</td--><td>400</td><td>VIP레벨 제한을 충족하지 못함</td></tr>
        <tr><td>0x1063</td><!--td>FanLevelInsufficient</td--><td>400</td><td>팬레벨 제한을 충족하지 못함</td></tr>
        <tr><td>0x1064</td><!--td>RequestLeaveAlreadyExists</td--><td>400</td><td>회원 탈퇴를 이미 신청한 상태임</td></tr>
        <tr><td>0x1065</td><!--td>ClientIPNotAllowed</td--><td>400</td><td>현재 연결 요청하는 사용자의 IP가 허용되지 않음</td></tr>
        <tr><td>0x1066</td><!--td>AccountBlocked</td--><td>400</td><td>블럭 처리된 사용자</td></tr>
        <tr><td>0x1067</td><!--td>IsOperator</td--><td>400</td><td>관리자 권한을 가지고 있음</td></tr>
        <tr><td>0x1068</td><!--td>IsNotOperator</td--><td>400</td><td>관리자 권한을 가지지 않음</td></tr>
        <tr><td>0x1069</td><!--td>PGResultFail</td--><td>400</td><td>PG 결제 결과 오류</td></tr>
        <tr><td>0x1070</td><!--td>PasswordChkValueNotMatched</td--><td>400</td><td>비밀번호와 비밀번호 확인값이 일치하지 않음</td></tr>
        <tr><td>0x1071</td><!--td>PasswordFormatInvalid</td--><td>400</td><td>비밀번호 형식이 올바르지 않음</td></tr>
        <tr><td>0x1072</td><!--td>DecodingFailed</td--><td>400</td><td>base64 형식의 문자열 디코딩 실패</td></tr>
        <tr><td>0x1073</td><!--td>ImageSaveFailed</td--><td>400</td><td>이미지 파일 저장이 실패함</td></tr>
        <tr><td>0x1074</td><!--td>SNSUserNotPermit</td--><td>400</td><td>소셜 계정 회원은 접근이 불가함</td></tr>
        <tr><td>0x1075</td><!--td>NotToYourself</td--><td>400</td><td>본인에게 사용/적용이 불가함</td></tr>
        <tr><td>0x1076</td><!--td>VIPLevelExceeded</td--><td>400</td><td>VIP레벨이 요구 범위를 초과함</td></tr>
        <tr><td>0x1077</td><!--td>SNSUserEmailNotExists</td--><td>400</td><td>SNS계정의 이메일 정보가 없음</td></tr>
        <tr><td>0x1078</td><!--td>SNSAPIConnError</td--><td>400</td><td>SNS API 접속 중 오류 발생</td></tr>
        <tr><td>0x1079</td><!--td>SNSInvalidValue</td--><td>400</td><td>SNS API로부터 잘못된 요청에 의한 오류 반환됨</td></tr>
        <tr><td>0x1080</td><!--td>IsCaster</td--><td>400</td><td>방송자임</td></tr>
        <tr><td>0x1081</td><!--td>IsNotCaster</td--><td>400</td><td>방송자 아님</td></tr>
        <tr><td>0x1082</td><!--td>LoginError</td--><td>400</td><td>로그인 오류</td></tr>
        <tr><td>0x1083</td><!--td>LoginErrorLimitReached</td--><td>400</td><td>로그인 시도 제한에 도달함</td></tr>
        <tr><td>0x1084</td><!--td>SMSCertifySendLimitReached</td--><td>400</td><td>SMS인증 발송 제한에 도달함</td></tr>
        <tr><td>0x1085</td><!--td>SMSCertifyCodeNotExists</td--><td>400</td><td>SMS인증 발송 정보 없음</td></tr>
        <tr><td>0x1086</td><!--td>FileRetrieveError</td--><td>400</td><td>파일 처리 오류(복사/삭제 등)</td></tr>
        <tr><td>0x1087</td><!--td>UnsupportedLocaleOrLanguage</td--><td>400</td><td>지원하지 않는 지역/언어</td></tr>
        <tr><td>0x1088</td><!--td>FFMpegError</td--><td>400</td><td>영상 파일 처리 오류</td></tr>
        <tr><td>0x1089</td><!--td>FFMpegThumbnailError</td--><td>400</td><td>영상 파일 처리 오류(썸네일 추출)</td></tr>
        <tr><td>0x1090</td><!--td>CoinInsufficient</td--><td>400</td><td>남은 코인 부족</td></tr>
        <tr><td>0x1091</td><!--td>CubicInsufficient</td--><td>400</td><td>남은 큐빅 부족</td></tr>
        <tr><td>0x1092</td><!--td>AppendLimitReached</td--><td>400</td><td>추가 제한 도달</td></tr>
        <tr><td>0x1093</td><!--td>AppendLimitExceeded</td--><td>400</td><td>추가 제한 초과</td></tr>
        <tr><td>0x1094</td><!--td>AppendDailyLimitReached</td--><td>400</td><td>일일 추가 제한 도달</td></tr>
        <tr><td>0x1095</td><!--td>AppendDailyLimitExceeded</td--><td>400</td><td>일일 추가 제한 초과</td></tr>
        <tr><td>0x1096</td><!--td>CellCertifyDailyLimitReached</td--><td>400</td><td>본인인증 일일 제한 초과</td></tr>
        <tr><td>0x1097</td><!--td>InAppReceiptValidationFailed</td--><td>400</td><td>인앱결제 영수증 검증 실패</td></tr>
        <tr><td>0x1098</td><!--td>InAppReceiptValidationRemoteError</td--><td>400</td><td>인앱결제 영수증 검증 실패(원격서버)</td></tr>
        <tr><td>0x1099</td><!--td>InAppReceiptDuplicated</td--><td>400</td><td>인앱결제 영수증 중복 처리 요청</td></tr>
        <tr><td>0x1100</td><!--td>CellCertifyTempNotExists</td--><td>400</td><td>가입용 본인인증 정보 없음</td></tr>

        <tr><td>0x2001</td><!--td>ParamInsufficient</td--><td>400</td><td>요청값 - 갯수가 올바르지 않음</td></tr>
        <tr><td>0x2002</td><!--td>ParamFormatInvalid</td--><td>400</td><td>요청값 - 형식이 올바르지 않음</td></tr>
        <tr><td>0x2003</td><!--td>ParamRequiredKeyNotExists</td--><td>400</td><td>요청값 - 필수 키값 중 일부/전체가 존재하지 않음</td></tr>
        <tr><td>0x2004</td><!--td>ParamRequiredValueIsNullOrEmpty</td--><td>400</td><td>요청값 - 필수 키에 대한 Value값이 비어있거나 null임</td></tr>
        <tr><td>0x2011</td><!--td>ParamValueOutOfRange</td--><td>400</td><td>요청값 - Value값 중 일부/전체가 제한 범위를 벗어남</td></tr>
        <tr><td>0x2012</td><!--td>ParamValueInvalidLength</td--><td>400</td><td>요청값 - Value값 중 일부/전체가 (문자열) 제한 길이를 벗어남</td></tr>
        <tr><td>0x2013</td><!--td>ParamValueMaxLengthExceeded</td--><td>400</td><td>요청값 - Value값 중 일부/전체가 (문자열) 제한 길이를 초과함</td></tr>
        <tr><td>0x2014</td><!--td>ParamValueMinLengthDeceeded</td--><td>400</td><td>요청값 - Value값 중 일부/전체가 (문자열) 제한 길이에 미달됨</td></tr>
        <tr><td>0x2021</td><!--td>ParamUnsupportedSearchType</td--><td>400</td><td>요청값 - 검색 구분값에 지원하지 않는 값이 입력됨</td></tr>
        <tr><td>0x2022</td><!--td>ParamSearchQueryMaxLengthExceeded</td--><td>400</td><td>요청값 - 검색문자열 제한 길이를 초과함</td></tr>
        <tr><td>0x2023</td><!--td>ParamSearchQueryMinLengthDeceeded</td--><td>400</td><td>요청값 - 검색문자열 제한 길이에 미달됨</td></tr>
        <tr><td>0x2031</td><!--td>ParamUnsupportedOrderType</td--><td>400</td><td>요청값 - 정렬 구분값에 지원하지 않는 값이 입력됨</td></tr>
        <tr><td>0x2041</td><!--td>ParamPageLengthMaxLengthExceeded</td--><td>400</td><td>요청값 - 페이지별 출력 갯수 제한값을 초과함</td></tr>
        <tr><td>0x2042</td><!--td>ParamPageLengthMinLengthDeceeded</td--><td>400</td><td>요청값 - 페이지별 출력 갯수 제한값에 미달됨</td></tr>
        <tr><td>0x2051</td><!--td>ParamUnsupportedExeCode</td--><td>400</td><td>요청값 - 지원하지 않는 exeCode값이 입력됨</td></tr>
        <tr><td>0x2052</td><!--td>ParamUnsupportedAccLoc</td--><td>400</td><td>요청값 - 지원하지 않는 accLoc값이 입력됨</td></tr>
        <tr><td>0x2053</td><!--td>ParamUnsupportedCastTargetType</td--><td>400</td><td>요청값 - 지원하지 않는 방송에 대한 targetType값이 입력됨</td></tr>
        <!--tr><td>0x2054</td><td>ParamUnsupportedDvsCode</td><td>400</td><td>지원하지 않는</td></tr>
        <tr><td>0x2055</td><td>ParamUnsupportedPayCode</td><td>400</td><td>지원하지 않는</td></tr>
        <tr><td>0x2056</td><td>ParamUnsupportedCoinUseType</td><td>400</td><td>지원하지 않는</td></tr>
        <tr><td>0x2057</td><td>ParamUnsupportedSaleLoc</td><td>400</td><td>지원하지 않는</td></tr-->
        <tr><td>0x2058</td><!--td>ParamNickNameFormatInvalid</td--><td>400</td><td>요청값 - 형식이 올바르지 않음(nickName 한정)</td></tr>
        <tr><td>0x2059</td><!--td>ParamSvcIDFormatInvalid,</td--><td>400</td><td>요청값 - 형식이 올바르지 않음(svcID 한정)</td></tr>
        <tr><td>0x2060</td><!--td>ParamTargetNotExists</td--><td>400</td><td>요청값 - 지정된 대상 자료가 존재하지 않음</td></tr>
        <tr><td>0x2061</td><!--td>ParamSourceNotExists</td--><td>400</td><td>요청값 - 지정된 대상에 대해 요청을 원하는 쪽의 자료가 존재하지 않음</td></tr>
        <tr><td>0x2062</td><!--td>ParamUnsupportedItemType</td--><td>400</td><td>요청값 - 지원하지 않는 값이 입력됨(itemType 한정)</td></tr>
        <tr><td>0x2063</td><!--td>ParamUnsupportedCoinType</td--><td>400</td><td>요청값 - 지원하지 않는 값이 입력됨(coinType 한정)</td></tr>
        <tr><td>0x2064</td><!--td>ParamUnsupportedSearchQuery</td--><td>400</td><td>요청값 - 지원하지 않는 값이 입력됨(검색문자열 한정)</td></tr>
        <tr><td>0x2065</td><!--td>ParamUnsupportedLanguage</td--><td>400</td><td>요청값 - 지원하지 않는 언어</td></tr>
        <tr><td>0x2066</td><!--td>ParamHasVulgarWord</td--><td>400</td><td>요청값 - 요청값에 비속어 포함됨</td></tr>
        <tr><td>0x2067</td><!--td>ParamUnsupportedSearchCategory</td--><td>400</td><td>요청값 - 지원하지 않는 searchCategory값이 입력됨</td></tr>
        <tr><td>0x2068</td><!--td>ParamFileMaxCountExceeded</td--><td>400</td><td>요청값 - 파일 전달 갯수 초과</td></tr>
        <tr><td>0x2069</td><!--td>ParamFileMaxLengthExceeded</td--><td>400</td><td>요청값 - 파일 용량 초과</td></tr>
        <tr><td>0x2070</td><!--td>ParamUnsupportedVideoLink</td--><td>400</td><td>지원하지 않는 영상 링크</td></tr>
        <tr><td>0x2071</td><!--td>ParamRequiredAttachNotExists</td--><td>400</td><td>요청값 - 필수 첨부파일 없음</td></tr>
        <tr><td>0x2072</td><!--td>ParamAttachCountNotMatched</td--><td>400</td><td>요청값 - 첨부파일 갯수 일치하지 않음</td></tr>
        <tr><td>0x2073</td><!--td>ParamAttachSizeLimitExceeded</td--><td>400</td><td>요청값 - 첨부파일 용량 초과</td></tr>
        <tr><td>0x2074</td><!--td>ContentsIsEmpty</td--><td>400</td><td>요청값 - 컨텐츠(BODY) 없음</td></tr>
        <tr><td>0x2075</td><!--td>ContentsDecryptFailed</td--><td>400</td><td>요청값 - 컨텐츠(BODY) 복호화 실패</td></tr>
        <tr><td>0x2076</td><!--td>ParamUnsupportedSupportMonth</td--><td>400</td><td>요청값 - 미지원 월</td></tr>
        <tr><td>0x2077</td><!--td>ParamUnsupportedTranslateLanguage</td--><td>400</td><td>요청값 - 미지원 번역 언어</td></tr>
        <tr><td>0x2078</td><!--td>ParamTranslateLanguageMustDiff</td--><td>400</td><td>요청값 - 번역언어와 요청언어가 같음</td></tr>
        <tr><td>0x2079</td><!--td>ParamTimePassed</td--><td>400</td><td>요청값 - 시간종료</td></tr>
        <tr><td>0x2080</td><!--td>ParamUnsupportedPlatform</td--><td>400</td><td>요청값 - 미지원 플랫폼</td></tr>
        <tr><td>0x2081</td><!--td>ParamSvcIDHasVulgarWord</td--><td>400</td><td>요청값 - 고유아이디에 비속어 포함됨</td></tr>
        <tr><td>0x2082</td><!--td>ParamNickNameHasVulgarWord</td--><td>400</td><td>요청값 - 닉네임에 비속어 포함됨</td></tr>

        <tr><td>0x3001</td><!--td>ReqSvcKeyNotMatched</td--><td>400</td><td>요청자 정보가 올바르지 않음(svcKey 한정)</td></tr>
        <tr><td>0x3002</td><!--td>ReqSvcIDNotMatched</td--><td>400</td><td>요청자 정보가 올바르지 않음(svcID 한정)</td></tr>
        <tr><td>0x3003</td><!--td>ReqMemKeyNotMatched</td--><td>400</td><td>요청자 정보가 올바르지 않음(memKey 한정)</td></tr>
        <tr><td>0x3004</td><!--td>NotContentOwner</td--><td>400</td><td>지정 자료의 소유자가 아님</td></tr>
        <tr><td>0x3005</td><!--td>NotContentTarget</td--><td>400</td><td>지정 자료의 대상자가 아님</td></tr>
        <tr><td>0x3006</td><!--td>NotContentOwnerOrTarget</td--><td>400</td><td>지정 자료의 소유자/대상자가 아님</td></tr>
        <tr><td>0x3007</td><!--td>ReqTargetMemKeyNotMatched</td--><td>400</td><td>요청값과 처리대상의 memKey값이 일치하지 않음</td></tr>

        <tr><td>0x5001</td><!--td>CastNotExists</td--><td>404</td><td>지정된 대상이 현재 방송중이 아님</td></tr>
        <tr><td>0x5002</td><!--td>CastBlocked</td--><td>403</td><td>지정된 대상의 방송에서 차단되어 입장할 수 없음</td></tr>
        <tr><td>0x5003</td><!--td>CastViewCntInvalid</td--><td>403</td><td>방송 설정의 시청인원이 잘못됨</td></tr>
        <tr><td>0x5004</td><!--td>CastManagerCntInvalid</td--><td>403</td><td>방송 설정의 매니저인원이 잘못됨</td></tr>
        <tr><td>0x5021</td><!--td>WatchViewCntLimitExceeded</td--><td>403</td><td>방송 입장가능 인원을 초과하여 입장이 불가함</td></tr>
        <tr><td>0x5022</td><!--td>StreamKeyIsNotMatched</td--><td>403</td><td>방송 streamKey값이 일치하지 않아 방송이 불가함</td></tr>
        <tr><td>0x5023</td><!--td>CastAlreadyOpened</td--><td>403</td><td>지정된 대상의 이미 진행중인 방송이 존재함</td></tr>
        <tr><td>0x5024</td><!--td>WatchBlockAlreadyExists</td--><td>403</td><td>지정된 대상이 시청 차단 목록에 이미 존재함</td></tr>
        <tr><td>0x5025</td><!--td>CasterNotAllowed</td--><td>403</td><td>방송자는 접근이 불가함</td></tr>
        <tr><td>0x5026</td><!--td>CastMemLevelLimitedByCastMinute</td--><td>403</td><td>총 방송시간 부족으로 회원레벨 제한 방송 시작 불가</td></tr>
        <tr><td>0x5027</td><!--td>CastFanLevelLimitedByFanCount</td--><td>403</td><td>총 팬수 부족으로 팬레벨 제한 반송 시작 불가</td></tr>
        <tr><td>0x5028</td><!--td>ActionPermissionDenied</td--><td>403</td><td>방송 중 특정 기능에 대한 권한 없음(cast > action 권한 참고)</td></tr>
        <tr><td>0x5029</td><!--td>CastEnterDeniedByNotLogin</td--><td>403</td><td>비로그인 사용자 입장 불가</td></tr>
        <tr><td>0x5030</td><!--td>CastMemLevelLimited</td--><td>403</td><td>회원레벨 제한 사용 불가</td></tr>
        <tr><td>0x5031</td><!--td>CastFanLevelLimited</td--><td>403</td><td>팬레벨 제한 사용 불가</td></tr>
        <tr><td>0x5032</td><!--td>CastMemLevelLimitExceeded</td--><td>403</td><td>회원레벨 제한값 범위 초과</td></tr>
        <tr><td>0x5033</td><!--td>CastFanLevelLimitExceeded</td--><td>403</td><td>팬레벨 제한값 범위 초과</td></tr>
        <tr><td>0x5034</td><!--td>CastTitleHasVulgarWord</td--><td>403</td><td>방송 제목에 비속어 포함됨</td></tr>
        <tr><td>0x5035</td><!--td>CastTagHasVulgarWord</td--><td>403</td><td>방송 태그에 비속어 포함됨</td></tr>
        <tr><td>0x5036</td><!--td>CastTagCountDeceeded</td--><td>403</td><td>방송 태그 갯수 미달</td></tr>
        <tr><td>0x5037</td><!--td>CastBlockedByWarn</td--><td>403</td><td>방송중 경고 누적으로 인한 입장 제한</td></tr>

        <tr><td>0x6001</td><!--td>AccountPermissionDeniedByPaySetType</td--><td>400</td><td>정산 - 권한없음(paySetType 설정)</td></tr>
        <tr><td>0x6002</td><!--td>AccountPermissionDeniedRequestByDvsCode</td--><td>400</td><td>정산 - 권한없음(계약된 계정)</td></tr>
        <tr><td>0x6003</td><!--td>AccountPayConfirmNotExists</td--><td>400</td><td>정산 - 미승인(요청자료 없음)</td></tr>
        <tr><td>0x6004</td><!--td>AccountPayConfirmNotConfirmed</td--><td>400</td><td>정산 - 미승인</td></tr>
        <tr><td>0x6005</td><!--td>AccountPrevRequestIsStandBy</td--><td>400</td><td>정산 - 이전 요청건이 진행중</td></tr>
        <tr><td>0x6006</td><!--td>AccountPrevRequestIsNotStandBy</td--><td>400</td><td>정산 - 이전 요청건이 진행중이지 않음</td></tr>
        <tr><td>0x6007</td><!--td>AccountPrevRequestIsSuspended</td--><td>400</td><td>정산 - 이전 요청건이 보류된</td></tr>
        <tr><td>0x6008</td><!--td>AccountCoinAmountNotExists</td--><td>400</td><td>정산 - 코인 자료 없음</tr>
        <tr><td>0x6009</td><!--td>AccountPayRequestAmountDeceeded</td--><td>400</td><td>정산 - 요청가능한 금액 미달</td></tr>
        <tr><td>0x6010</td><!--td>AccountPayRequestTempNotExists</td--><td>400</td><td>정산 - 요청 임시 자료 없음</td></tr>
        <tr><td>0x6011</td><!--td>AccountPayRequestNotExists</td--><td>400</td><td>정산 - 요청 자료 없음</td></tr>

        <tr><td>Dx1001</td><!--td>DBMemberCellNumberAlreadyInUse</td--><td>400</td><td>해당 전화번호가 이미 사용중임</td></tr>
        <tr><td>Dx1002</td><!--td>DBMemberCellNumberNotExists</td--><td>400</td><td>해당 전화번호가 존재하지 않음</td></tr>
        <tr><td>Dx1003</td><!--td>DBMemberNickNameAlreadyInUse</td--><td>400</td><td>해당 닉네임이 이미 사용중임</td></tr>
        <tr><td>Dx1004</td><!--td>DBMemberNickNameNotExists</td--><td>400</td><td>해당 닉네임이 존재하지 않음</td></tr>
        <tr><td>Dx1005</td><!--td>DBMemberSvcIDAlreadyInUse</td--><td>400</td><td>해당 svcID가 이미 사용중</td></tr>
        <tr><td>Dx1006</td><!--td>DBMemberSvcIDNotExists</td--><td>400</td><td>해당 svcID가 존재하지 않음</td></tr>
        <tr><td>Dx1007</td><!--td>DBMemKeyDuplicated</td--><td>400</td><td>memKey값 중복 발생</td></tr>
        <tr><td>Dx1008</td><!--td>DBMemKeyCreateError</td--><td>400</td><td>memKey 생성 오류</td></tr>
        <tr><td>Dx1009</td><!--td>DBMemKeyNotExists</td--><td>400</td><td>memKey 없음</td></tr>
        <!--tr><td>Dx1010</td><td>DBMemberSchemaNotExists</td><td>400</td><td></td></tr-->
        <tr><td>Dx1011</td><!--td>DBSignDataNotFound</td--><td>400</td><td>대상의 계정 정보가 존재하지 않음</td></tr>
        <!--tr><td>Dx1012</td><td>DBMemberRegist</td><td>400</td><td></td></tr-->
        <tr><td>Dx1013</td><!--td>DBMemberLevelDataRead</td--><td>400</td><td>DB 조회 오류(회원 레벨 자료)</td></tr>
        <tr><td>Dx1014</td><!--td>DBMemberLevelDataWrite</td--><td>400</td><td>DB 입력 오류(회원 레벨 자료)</td></tr>
        <tr><td>Dx1015</td><!--td>DBMemberVIPLevelDataRead</td--><td>400</td><td>DB 조회 오류(VIP 레벨 자료)</td></tr>
        <tr><td>Dx1016</td><!--td>DBMemberVIPLevelDataWrite</td--><td>400</td><td>DB 입력 오류(VIP 레벨 자료)</td></tr>
        <tr><td>Dx1017</td><!--td>DBMemberProfileImgNotExists</td--><td>400</td><td>DB 조회 오류(프로필 이미지 자료)</td></tr>
        <tr><td>Dx1018</td><!--td>DBMemberCellNumberRead</td--><td>400</td><td>DB 조회 오류(전화번호 자료)</td></tr>
        <tr><td>Dx1019</td><!--td>DBMemberCellNumberWrite</td--><td>400</td><td>DB 입력 오류(전화번호 자료)</td></tr>
        <tr><td>Dx1020</td><!--td>DBMemberSignDataRead</td--><td>400</td><td>DB 조회 오류(회원R 자료)</td></tr>
        <tr><td>Dx1021</td><!--td>DBMemberSignDataWrite</td--><td>400</td><td>DB 입력 오류(회원R 자료)</td></tr>
        <tr><td>Dx1022</td><!--td>DBMemberJoinDataRead</td--><td>400</td><td>DB 조회 오류(회원W 자료)</td></tr>
        <tr><td>Dx1023</td><!--td>DBMemberJoinDataWrite</td--><td>400</td><td>DB 입력 오류(회원W 자료)</td></tr>
        <tr><td>Dx1024</td><!--td>DBMemberBlockDataRead</td--><td>400</td><td>DB 조회 오류(시청차단 자료)</td></tr>
        <tr><td>Dx1025</td><!--td>DBMemberBlockDataWrite</td--><td>400</td><td>DB 입력 오류(시청차단 자료)</td></tr>
        <tr><td>Dx1026</td><!--td>DBMemberDelDataRead</td--><td>400</td><td>DB 조회 오류(탈퇴 자료)</td></tr>
        <tr><td>Dx1027</td><!--td>DBMemberDelDataWrite</td--><td>400</td><td>DB 입력 오류(탈퇴 자료)</td></tr>
        <tr><td>Dx1028</td><!--td>DBMemberSvcIDDataNotExists</td--><td>400</td><td>DB 조회 오류(svcID 자료)</td></tr>
        <tr><td>Dx1029</td><!--td>DBMemberNickNameDataNotExists</td--><td>400</td><td>DB 조회 오류(nickName 자료)</td></tr>
        <tr><td>Dx1030</td><!--td>DBMemberSNSIDAlreadyInUse</td--><td>400</td><td>해당 SNSID값이 이미 존재함</td></tr>
        <tr><td>Dx1031</td><!--td>DBTargetMemKeyNotExists</td--><td>400</td><td>memKey로 특정된 대상이 존재하지 않음</td></tr>
        <tr><td>Dx1032</td><!--td>DBMemberFanLevelDataReadError</td--><td>400</td><td>팬레벨 조회 오류</td></tr>
        <tr><td>Dx1033</td><!--td>DBMemberFanLevelDataWriteError</td--><td>400</td><td>팬레벨 입력 오류</td></tr>
        <tr><td>Dx1034</td><!--td>DBMemberAlreadyJoined</td--><td>400</td><td>이미 가입된 회원</td></tr>
        <tr><td>Dx1035</td><!--td>DBMemberCellNumberNotMatched</td--><td>400</td><td>전화번호 미일치</td></tr>
        <tr><td>Dx1036</td><!--td>DBMemberSNSIDNotExists</td--><td>400</td><td>가입된 소셜계정 없음</td></tr>

        <tr><td>Dx2001</td><!--td>DBCastPresetNotExists</td--><td>400</td><td>방송 설정자료가 존재하지 않음</td></tr>
        <tr><td>Dx2002</td><!--td>DBCastPresetRead</td--><td>400</td><td>DB 조회 오류(방송 설정 자료)</td></tr>
        <tr><td>Dx2003</td><!--td>DBCastPresetWrite</td--><td>400</td><td>DB 입력 오류(방송 설정 자료)</td></tr>
        <tr><td>Dx2004</td><!--td>DBCastDataByMemKeyIsNotExists</td--><td>400</td><td>memKey로 방송 정보를 확인할 수 없음</td></tr>
        <tr><td>Dx2005</td><!--td>DBCastListRead</td--><td>400</td><td>DB 조회 오류(방송 자료)</td></tr>
        <tr><td>Dx2006</td><!--td>DBCastListWrite</td--><td>400</td><td>DB 입력 오류(방송 자료)</td></tr>
        <tr><td>Dx2007</td><!--td>DBCastWatchBlockDataRead</td--><td>400</td><td>DB 조회 오류(시청 차단 자료)</td></tr>
        <tr><td>Dx2008</td><!--td>DBCastWatchBlockDataWrite</td--><td>400</td><td>DB 입력 오류(시청 차단 자료)</td></tr>
        <tr><td>Dx2009</td><!--td>DBCastWatchDataRead</td--><td>400</td><td>DB 조회 오류(시청 기록 자료)</td></tr>
        <tr><td>Dx2010</td><!--td>DBCastWatchDataWrite</td--><td>400</td><td>DB 입력 오류(시청 기록 자료)</td></tr>
        <tr><td>Dx2011</td><!--td>DBCastServerNotExists</td--><td>400</td><td>방송 서버 자료 미존재</td></tr>

        <tr><td>Dx3001</td><!--td>DBSMSCertifyRead</td--><td>400</td><td>DB 조회 오류(SMS인증 자료)</td></tr>
        <tr><td>Dx3002</td><!--td>DBSMSCertifyWrite</td--><td>400</td><td>DB 입력 오류(SMS인증 자료)</td></tr>

        <tr><td>Dx4001</td><!--td>DBSupportNoticeDataNotExists</td--><td>400</td><td>지정된 공지 자료가 존재하지 않음</td></tr>
        <tr><td>Dx4002</td><!--td>DBSupportNoticeRead</td--><td>400</td><td>DB 조회 오류(공지 자료)</td></tr>
        <tr><td>Dx4003</td><!--td>DBSupportNoticeWrite</td--><td>400</td><td>DB 입력 오류(공지 자료)</td></tr>
        <tr><td>Dx4004</td><!--td>DBSupportQNADataNot</td--><td>400</td><td>지정된 문의 자료가 존재하지 않음</td></tr>
        <tr><td>Dx4005</td><!--td>DBSupportQNADataInsertDailyLimitExceeded</td--><td>400</td><td>일일 문의자료 등록 제한 횟수를 초과함</td></tr>
        <tr><td>Dx4006</td><!--td>DBSupportQNADataDeleteUnable</td--><td>400</td><td>지정된 문의 자료 삭제가 불가함</td></tr>
        <tr><td>Dx4007</td><!--td>DBSupportQNARead</td--><td>400</td><td>DB 조회 오류(문의 자료)</td></tr>
        <tr><td>Dx4008</td><!--td>DBSupportQNAWrite</td--><td>400</td><td>DB 입력 오류(문의 자료)</td></tr>

        <tr><td>Dx5001</td><!--td>DBFollowAlreadyFollowing</td--><td>400</td><td>지정된 대상에 대해 이미 팔로잉 중임</td></tr>
        <tr><td>Dx5002</td><!--td>DBNotiDataNotExists</td--><td>400</td><td>지정된 대상에 대해 푸시알림 자료가 존재하지 않음</td></tr>

        <tr><td>Dx6001</td><!--td>DBManagerNotExists</td--><td>400</td><td>지정된 대상이 매니저 목록에 존재하지 않음</td></tr>
        <tr><td>Dx6002</td><!--td>DBManagerAlreadyExists</td--><td>400</td><td>지정된 대상이 이미 매니저 목록에 존재함</td></tr>
        <tr><td>Dx6003</td><!--td>DBManagerSetTooMany</td--><td>400</td><td>매니저 지정 가능 인원을 초과함</td></tr>

        <tr><td>Dx7001</td><!--td>DBItemNotExists</td--><td>400</td><td>지정된 아이템 정보가 존재하지 않음</td></tr>
        <tr><td>Dx7002</td><!--td>DBItemAlreadyUsed</td--><td>400</td><td>지정된 아이템을 이미 사용됨</td></tr>
        <tr><td>Dx7003</td><!--td>DBMemberItemNotExists</td--><td>400</td><td>지정된 아이템을 소유하고 있지 않음</td></tr>
        <tr><td>Dx7004</td><!--td>DBUsableMemberItemNotExists</td--><td>400</td><td>지정된 구분의 아이템을 소유하고 있지 않음</td></tr>
        <tr><td>Dx7005</td><!--td>DBMemberItemOwnerNotMatched</td--><td>400</td><td>지정된 아이템의 소유자 정보가 일치하지 않음</td></tr>
        <tr><td>Dx7006</td><!--td>DBMemberItemAlreadyInUse</td--><td>400</td><td>해당 아이템이 이미 사용됨</td></tr>
        <tr><td>Dx7007</td><!--td>DBMemberItemUseUpdateError</td--><td>400</td><td>해당 아이템을 사용 처리 중에 오류 발생</td></tr>
        <tr><td>Dx7008</td><!--td>DBCoinGiftValueMustPositive</td--><td>400</td><td>선물하는 코인값이 잘못됨(범위, 1이상)</td></tr>
        <tr><td>Dx7009</td><!--td>DBCoinNotEnough</td--><td>400</td><td>소유하고 있는 코인이 부족함</td></tr>
        <tr><td>Dx7010</td><!--td>DBItemInvalid</td--><td>400</td><td>처리가 불가능한 아이템 구분값(닉네임 변경건은 일반적으로 사용 불가)</td></tr>
        <tr><td>Dx7011</td><!--td>DBItemDuplicateNotAvailable</td--><td>400</td><td>중복 사용이 불가능한 아이템임</td></tr>

        <!--tr><td>Dx8001</td><td>DBAchieveExists</td><td>400</td><td>업적 존재함</td></tr>
        <tr><td>Dx8002</td><td>DBAchieveNotExists</td><td>400</td><td>업적 - 자료가 존재하지 않음</td></tr-->
        <tr><td>Dx8003</td><!--td>DBAchieveNotCompleted</td--><td>400</td><td>업적 - 아직 완료되지 않음</td></tr>
        <tr><td>Dx8004</td><!--td>DBAchieveAlreadyCompleted</td--><td>400</td><td>업적 - 이미 완료됨</td></tr>
        <!--tr><td>Dx8005</td><td>DBAchieveRewardReceived</td><td>400</td><td>업적 - 완료에 의한 보상을</td></tr-->
        <tr><td>Dx8006</td><!--td>DBAchieveRewardAlreadyReceived</td--><td>400</td><td>업적 - 완료에 의한 보상을 이미 받음</td></tr>
        <tr><td>Dx8007</td><!--td>DBAchieveMissionNotExists</td--><td>400</td><td>업적 - 미션 자료가 존재하지 않음</td></tr>

        <tr><td>Dx9001</td><!--td>DBLikeAlreadyDoneToday</td--><td>400</td><td>좋아요 - 당일에 이미 좋아요 사용함</td></tr>

        <tr><td>DxA001</td><!--td>DBCommentDataNotExists</td--><td>400</td><td>지정된 댓글 자료가 존재하지 않음</td></tr>
        <tr><td>DxA002</td><!--td>DBCommentReportDataAlreadyExists</td--><td>400</td><td>지정된 댓글에 대한 신고 자료를 이미 등록함</td></tr>

        <tr><td>DxB001</td><!--td>DBClipNotExists</td--><td>400</td><td>클립 자료 없음</td></tr>
        <tr><td>DxB002</td><!--td>DBClipLikeAlreadyDone</td--><td>400</td><td>클립에 대한 좋아요 이미 처리됨</td></tr>
        <tr><td>DxB003</td><!--td>DBClipLikeNotExists</td--><td>400</td><td>클립에 대한 좋아요 처리 내역 없음</td></tr>
        <tr><td>DxB004</td><!--td>DBClipNotOpended</td--><td>400</td><td>클립이 공개된 상태가 아님</td></tr>
        <tr><td>DxB005</td><!--td>DBClipBlocked</td--><td>400</td><td>클립이 블럭 처리됨</td></tr>

        <tr><td>DxC001</td><!--td>DBScheduleAlreadyExists</td--><td>400</td><td>동일 시간대 등록된 스케줄 있음</td></tr>
        <tr><td>DxC002</td><!--td>DBScheduleAlreadyGone</td--><td>400</td><td>지난 시간 스케줄임</td></tr>
        <tr><td>DxC003</td><!--td>DBScheduleNotExists</td--><td>400</td><td>스케줄 존재하지 않음</td></tr>

        <tr><td>Dx0001</td><!--td>DBResultListIsEmpty</td--><td>400</td><td>DB내부 오류 - 목록 자료가 반환되지 않음</td></tr>
        <tr><td>Dx0002</td><!--td>DBResultDataIsEmpty</td--><td>400</td><td>DB내부 오류 - 단일 자료가 반환되지 않음</td></tr>

        <tr><td>DxZ001</td><!--td>DBCacheIsNotReady</td--><td>400</td><td>DB캐시 오류 - 캐싱 자료 생성되지 않음</td></tr>

        <tr><td>Dx0101</td><!--td>DB</td--><td>500</td><td>DB 내부 오류 - 통상적인 DB 오류</td></tr>
        <tr><td>Dx0102</td><!--td>DBS01</td--><td>500</td><td>DB 오류 - 오류 발생 위치 확인용</td></tr>
        <tr><td>Dx0103</td><!--td>DBS02</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0104</td><!--td>DBS03</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0105</td><!--td>DBS04</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0106</td><!--td>DBS05</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0107</td><!--td>DBS06</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0108</td><!--td>DBS07</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0109</td><!--td>DBS08</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0110</td><!--td>DBS09</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0201</td><!--td>DBWrite</td--><td>500</td><td>DB 쓰기 오류</td></tr>
        <tr><td>Dx0202</td><!--td>DBWriteS01</td--><td>500</td><td>DB 쓰기 오류 - 오류 발생 위치 확인용</td></tr>
        <tr><td>Dx0203</td><!--td>DBWriteS02</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0204</td><!--td>DBWriteS03</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0205</td><!--td>DBWriteS04</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0206</td><!--td>DBWriteS05</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0207</td><!--td>DBWriteS06</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0208</td><!--td>DBWriteS07</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0209</td><!--td>DBWriteS08</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0210</td><!--td>DBWriteS09</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0301</td><!--td>DBRead</td--><td>500</td><td>DB 읽기 오류</td></tr>
        <tr><td>Dx0302</td><!--td>DBReadS01</td--><td>500</td><td>DB 읽기 오류 - 오류 발생 위치 확인용</td></tr>
        <tr><td>Dx0303</td><!--td>DBReadS02</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0304</td><!--td>DBReadS03</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0305</td><!--td>DBReadS04</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0306</td><!--td>DBReadS05</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0307</td><!--td>DBReadS06</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0308</td><!--td>DBReadS07</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0309</td><!--td>DBReadS08</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0310</td><!--td>DBReadS09</td--><td>500</td><td>상동</td></tr>
        <tr><td>Dx0901</td><!--td>DBTran</td--><td>500</td><td>DB 트랜잭션 오류</td></tr>

        <tr><td>Sx0001</td><!--td>ChatError</td--><td>400</td><td>채팅서버 오류 - 모든 채팅서버 오류 발생시 동일 코드 반환</td></tr>

        <tr><td>Wx0001</td><!--td>WowzaError</td--><td>400</td><td>Wowza서버 오류 - 모든 Wowza서버 오류 발생시 동일 코드 반환</td></tr>
      </table>
  - name: code > chat
    description: |
      채팅 오류코드표<br />
      <table>
        <tr><td>코드</td><td>코드명</td><td>비고</td></tr>

        <tr><td>0x0000</td><td>OK</td><td>성공</td></tr>

        <tr><td>1x0001</td><td>UNKNOWN</td><td>불명</td></tr>
        <tr><td>1x0002</td><td>UNKNOWN_INTERNAL</td><td>내부오류/불명</td></tr>
        <tr><td>1x0003</td><td>EMPTY</td><td></td></tr>

        <tr><td>Ax0001</td><td>NOT_AUTHORIZED</td><td>인증실패</td></tr>
        <tr><td>Ax0002</td><td>ALREADY_INITIATED</td><td></td></tr>
        <tr><td>Ax0011</td><td>INSPECTOR_CONNECT_ERROR</td><td>감시자 접속 오류</td></tr>
        <tr><td>Ax0091</td><td>HAVE_NO_PERMISSION</td><td>권한 없음</td></tr>

        <tr><td>Fx0001</td><td>INVALID_FORMAT</td><td>잘못된 형식의 요청</td></tr>
        <tr><td>Fx0002</td><td>INVALID_ARGUMENT</td><td>잘못된 인수값</td></tr>
        <tr><td>Fx0003</td><td>NO_REQUIRED_VALUE</td><td>필수값 없음</td></tr>
        <tr><td>Fx0004</td><td>INVALID_CHARACTER</td><td>문자열 오류</td></tr>
        <tr><td>Fx0011</td><td>TARGET_NOT_MATCHED</td><td>요청 대상 불일치</td></tr>
        <tr><td>Fx0012</td><td>SERVICE_NOT_MATCHED</td><td>요청 서비스 불일치</td></tr>
        <tr><td>Fx0013</td><td>CHANNEL_NOT_MATCHED</td><td>요청 채널 불일치</td></tr>
        <tr><td>Fx0014</td><td>USER_NOT_MATCHED</td><td>사용자 불일치</td></tr>
        <tr><td>Fx0021</td><td>REQUEST_PARSING_FAIL</td><td>요청값 파싱 오류</td></tr>
        <tr><td>Fx0022</td><td>RESULT_PARSING_FAIL</td><td>결과값 파싱 오류</td></tr>
        <tr><td>Fx0031</td><td>NO_TOKEN</td><td>토큰값 없음</td></tr>
        <tr><td>Fx0032</td><td>INVALID_TOKEN_FORMAT</td><td>잘못된 토큰 형식</td></tr>
        <tr><td>Fx0033</td><td>INVALID_TOKEN</td><td>잘못된 토큰값</td></tr>
        <tr><td>Fx0034</td><td>INVALID_ACCESS_CODE</td><td>연결요청값 오류</td></tr>

        <tr><td>Dx0011</td><td>SERVICE_NOT_EXISTS</td><td>대상 서비스가 없음</td></tr>
        <tr><td>Dx0012</td><td>SERVICE_ALREADY_EXISTS</td>대상 서비스가 이미 존재함<td></td></tr>

        <tr><td>Dx0021</td><td>CHANNEL_NOT_EXISTS</td><td>대상 채널이 없음</td></tr>
        <tr><td>Dx0022</td><td>CHANNEL_ALREADY_EXISTS</td><td>대상 채널이 이미 존재함</td></tr>

        <tr><td>Dx0031</td><td>USER_NOT_EXISTS</td><td>대상 사용자 없음</td></tr>
        <tr><td>Dx0032</td><td>USER_ALREADY_EXISTS</td><td>대상 사용자가 이미 존재함</td></tr>
        <tr><td>Dx0033</td><td>USER_NOT_IN_CHANNEL</td><td>대상 채널에 사용자 없음</td></tr>
        <tr><td>Dx0034</td><td>USER_ALREADY_IN_CHANNEL</td><td>대상 채널이 사용자 이미 존재함</td></tr>
        <tr><td>Dx0035</td><td>USER_NORMAL_LEAVE</td><td>정상적인 채널 퇴장</td></tr>

        <tr><td>Dx0041</td><td>PROPERTY_IS_EMPTY</td><td></td></tr>
        <tr><td>Dx0042</td><td>PROPERTY_NOT_EXISTS</td><td></td></tr>
        <tr><td>Dx0045</td><td>INVALID_PROPERTY</td><td></td></tr>

        <tr><td>Dx1001</td><td>LOCAL_DATA_NOT_ACCESSIBLE</td><td>프로세스 로컬 자료 오류</td></tr>
        <tr><td>Dx1002</td><td>LOCAL_DATA_NOT_READ</td><td>상동</td></tr>
        <tr><td>Dx1003</td><td>LOCAL_DATA_NOT_WRITE</td><td>상동</td></tr>
        <tr><td>Dx1004</td><td>LOCAL_DATA_NOT_MODIFY</td><td>상동</td></tr>
        <tr><td>Dx1005</td><td>LOCAL_DATA_NOT_DELETE</td><td>상동</td></tr>
        <tr><td>Dx2001</td><td>REMOTE_DATA_NOT_ACCESSIBLE</td><td>외부 NoSql 자료 오류</td></tr>
        <tr><td>Dx2002</td><td>REMOTE_DATA_NOT_READ</td><td>상동</td></tr>
        <tr><td>Dx2003</td><td>REMOTE_DATA_NOT_WRITE</td><td>상동</td></tr>
        <tr><td>Dx2004</td><td>REMOTE_DATA_NOT_MODIFY</td><td>상동</td></tr>
        <tr><td>Dx2005</td><td>REMOTE_DATA_NOT_DELETE</td><td>상동</td></tr>

        <tr><td>SxC001</td><td>MESSAGE_SEND_ERROR</td><td>메시지 전달 처리 오류</td></tr>
        <tr><td>SxC002</td><td>MESSAGE_REQUEST_TOO_SHORTLY</td><td>너무 잦은 메시지 요청</td></tr>
        <tr><td>SxC003</td><td>MESSAGE_REQUEST_TOO_MANY</td><td>너무 많은 메시지 요청</td></tr>
        <tr><td>SxC004</td><td>MESSAGE_REQUEST_IS_INSPECTOR</td><td>관전자 채팅 입력 불가</td></tr>
        <tr><td>SxC005</td><td>MESSAGE_REQUEST_LENGTH_EXCEEDED</td><td>채팅 글자수 초과, 코드 뒤에 제한 글자수 반환</td></tr>
        <tr><td>SxC006</td><td>MESSAGE_REQUEST_IS_GUEST</td><td>손님 채팅 입력 불가</td></tr>
        <tr><td>SxC007</td><td>MESSAGE_REQUEST_IS_EMPTY</td><td>공백 또는 빈문자열 입력됨</td></tr>
        <tr><td>SxC011</td><td>CHANNEL_FROZEN</td><td>채널 얼림 상태</td></tr>
        <tr><td>SxC012</td><td>CHANNEL_ALREADY_FROZEN</td><td>채널이 이미 얼린 상태임</td></tr>
        <tr><td>SxC013</td><td>CHANNEL_BLOCKED</td><td>채널 블럭 상태</td></tr>
        <tr><td>SxC014</td><td>CHANNEL_ALREADY_BLOCKED</td><td>채널이 이미 블럭된 상태임</td></tr>
        <!--tr><td>SxC015</td><td>USER_MUTED</td><td></td></tr>
        <tr><td>SxC016</td><td>USER_ALREADY_MUTED</td><td></td></tr-->

        <tr><td>ExRQ01</td><td>WRONG_REQUEST</td><td>잘못된 요청</td></tr>
        <tr><td>ExRS01</td><td>WRONG_RESPONSE</td><td>잘못된 응답</td></tr>

        <tr><td>Dx3001</td><td>PUBLISH_ERROR</td><td>구독시 발행 오류</td></tr>
        <tr><td>Dx4001</td><td>SUBSCRIBE_ERROR</td><td>구독시 구독 오류</td></tr>
      </table>
paths:
  /{locale}/{svcKey}/complex/summary/live:
    get:
      tags:
        - complex
      operationId: GetSummaryLive
      summary: 요약정보
      description: |
        <b><font color="blue">#GetSummaryLive</font></b>
        <br />라이브용 요약 정보 자료 반환
        1. 반환하는 자료는 아래와 같습니다.
          - casts - 일반 방송 목록, 시청자순 상위 10건, 제외(성인/비번/등급제한/세로화면)
          - hotCasts - HotList 방송 목록, 최신순 상위 3건, 제외(비번/팬등급제한)
          - fanCasts - 팬 방송 목록, 최신순 상위 3건
          - recentCasts - 최신 방송 목록, 시청자순 상위 5건, 팬방송 제외
          - rankings - 랭킹 정보, 전체 9건
            - monthly - 월간, 상위 3건
            - weekly - 주간, 상위 3건
            - daily - 일간, 상위 3건
          - schedules - 방송 스케줄 목록, 현재 기준 예약시간순 10건
          - newCasters - 신입 방송자 목록, 최근 3개월 이내 방송 시작한 인원 중 최근 순 상위 10건

        2. "r_c"값을 통해 원하는 항목만 반환 받을 수 있습니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - name: r_c
          in: query
          description: |
            <font color="blue">(r)equest (c)ategory</font><br />
            반환 요청 대상 목록 지정
            <br />미지정인 경우 전체 목록 반환
          example:
            r_c[]=casts&r_c[]=hotCasts&r_c[]=fanCasts&r_c[]=recentCasts&r_c[]=rankings&r_c[]=schedules&r_c[]=newCasters
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: 성공 - 메인 자료 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  casts:
                    type: array
                    description: 일반 방송 목록
                    items:
                      $ref: '#/components/schemas/responses/schemas/ComplexCastDataWithPicture'
                  hotCasts:
                    type: array
                    description: HotList 방송 목록
                    items:
                      $ref: '#/components/schemas/responses/schemas/ComplexCastData'
                  fanCasts:
                    type: array
                    description: 팬 방송 목록
                    items:
                      $ref: '#/components/schemas/responses/schemas/ComplexCastData'
                  recentCasts:
                    type: array
                    description: 최신 방송 목록
                    items:
                      $ref: '#/components/schemas/responses/schemas/ComplexCastData'
                  rankings:
                    type: object
                    description: 랭킹 목록
                    properties:
                      monthly:
                        type: array
                        description: 월간 랭킹 목록
                        items:
                          $ref: '#/components/schemas/responses/schemas/ComplexRangkingData'
                      weekly:
                        type: array
                        description: 주간 랭킹 목록
                        items:
                          $ref: '#/components/schemas/responses/schemas/ComplexRangkingData'
                      daily:
                        type: array
                        description: 일간 랭킹 목록
                        items:
                          $ref: '#/components/schemas/responses/schemas/ComplexRangkingData'
                  schedules:
                    type: array
                    description: 방송 스케줄 목록
                    items:
                      $ref: '#/components/schemas/responses/schemas/ComplexScheduleData'
                  newCasters:
                    type: array
                    description: 신입 방송자 목록
                    items:
                      $ref: '#/components/schemas/responses/schemas/ComplexNewCasterData'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
        404:
          $ref: '#/components/schemas/responses/codeOnly/NotFound'
  /{locale}/{svcKey}/complex/summary/tag:
    get:
      tags:
        - complex
      operationId: GetSummaryTag
      summary: 태그 요약정보
      description: |
        <b><font color="blue">#GetSummaryTag</font></b>
        <br />태그용 요약 정보 자료 반환(PC웹 전용)
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/queries/pl'
        - name: r_lt
          in: query
          description: |
            <font color="blue">(r)equest (l)ive (t)ags</font>
            <br />방송중 태그 목록 요청
            - 0: 방송중 태그 요청 안함
            - 1: 방송중 태그 요청, tag.live 항목에 등록
          schema:
            type: number
            enum: [0, 1]
            default: 0
        - name: r_rt
          in: query
          description: |
            <font color="blue">(r)equest (r)ecommended (t)ags</font>
            <br />추천 태그 목록 요청
            - 0: 추천 태그 요청 안함
            - 1: 추천 태그 요청, tag.recommend 항목에 등록
          schema:
            type: number
            enum: [0, 1]
            default: 0
        - name: s_tags
          in: query
          description: |
            <font color="blue">(s)earch (tags)</font><br />
            <br />태그에 대해 or 검색을 합니다.
            <br />전달갯수가 10건이 넘는 경우, 10건까지만 사용되고 나머지는 무시됩니다.
            <br />전달값이 지정되지 않은 경우, 실시간 최다 사용 태그값을 사용하게 됩니다.
          example:
            s_tags[]=tag1&s_tags[]=tag2&s_tags[]=tag3
          schema:
            type: array
            items:
              type: string
              minLength: 1
              maxLength: 10
      responses:
        200:
          description: 성공 - 메인 자료 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  rTags:
                    type: array
                    description: 요청에 사용된 태그 목록
                    items:
                      type: string
                  tag:
                    type: object
                    properties:
                      live:
                        type: array
                        description: 실시간 태그 top 10
                        items:
                          type: string
                      recommend:
                        type: array
                        description: 추천 태그 top 10
                        items:
                          type: string
                  casts:
                    type: array
                    description: 일반 방송 목록
                    items:
                      $ref: '#/components/schemas/responses/schemas/ComplexCastData'
                  clips:
                    type: array
                    description: 클립 영상 목록
                    items:
                      $ref: '#/components/schemas/models/Clip'
                  channels:
                    type: array
                    description: 채널 목록
                    items:
                      $ref: '#/components/schemas/models/MemberBasicWCastLevel'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
        404:
          $ref: '#/components/schemas/responses/codeOnly/NotFound'
  /{locale}/{svcKey}/app/run:
    post:
      tags:
        - program
      description: |
        프로그램 실행 기록 처리 & 버전 확인 및 업데이트 링크 동시 제공
      operationId: AddAppCount
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 실행 기록 저장 자료
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/AddAppCount'
      responses:
        200:
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  verName:
                    type: string
                    description: 정보 코드
                  ver:
                    type: string
                    description: 서비스 버전
                  appStatusCode:
                    type: string
                    enum: [S, P, C, R, E]
                    description: |
                      서비스 상태 코드
                      - S: Start, 진행
                      - P: Pause, 중지
                      - C: Check, 점검
                      - R: Review, 심의
                      - E: End, 종료
                  URL:
                    type: string
                    description: 다운로드(업데이트) 경로
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
        404:
          $ref: '#/components/schemas/responses/codeOnly/NotFound'
        500:
          description: 점검
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    default: "0xZZZZ"
                    description: 점검코드
                  startDTCode:
                    type: string
                    description: 점검 시작 시간, yyyymmddHHMMSS 형식
                  endDTCode:
                    type: string
                    description: 점검 종료 시간, yyyymmddHHMMSS 형식
  /{locale}/{svcKey}/search:
    get:
      tags:
        - 검색
      operationId: GetSearch
      summary: 검색 결과
      description: |
        <b><font color="blue">#GetSearch</font></b>
        <br />검색 결과 반환 요청

        - "s_t"의 경우 다중 사용 가능하나 이 경우 아래와 같이 제약이 발생합니다.
          - request의 "p"값은 "1"로 고정됩니다.
          - response의 "metadata.hasMore"의 값은 항상 "false"입니다.
          - response의 "metadata.totalCnt"의 값은 항상 "0"입니다.
          - response의 "lives", "tags", nicknames"의 반환 갯수는 "pl"값의 +1로 반환합니다.
            <br />(이를 통해 각 항목의 hasMore를 판단하면 됩니다.)

        - 사용된 "s_q"값은 <a href="#operation/GetSearchKeywords">[GetSearchKeywords]</a> 항목에 반영이 됩니다.

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0305 </td><td> DBReadS04 </td><td> DB 처리 오류 </td></tr>
        <tr><td> 0x2066 </td><td> ParamHasVulgarWord </td><td> 사용할 수 없는 검색어 입니다 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
        - name: s_t
          in: query
          description: |
            <font color="blue">(s)earch (t)ype</font><br />
            검색 방식 구분값, 배열로 입력
            - live: 라이브 방송
              - 라이브 발송 정보 내 title, nickname, tag 통합 검색 처리
            - nickname: 닉네임
            - tag: 태그
          schema:
            type: array
            items:
              type: string
              enum: [live, nickname, tag]
          example: s_t[]=live&s_t[]=nickname&s_t[]=tag
        - name: s_q
          in: query
          description: |
            <font color="blue">(s)earch (q)uery</font><br />
            검색 문자열
          schema:
            type: string
            minLength: 1
            maxLength: 15
        #- $ref: '#/components/parameters/queries/r_l'
      responses:
        200:
          description: 성공, 검색 결과 목록 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/Search'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/search/keyword:
    get:
      tags:
        - 검색
      operationId: GetSearchKeywords
      summary: 검색 키워드 목록
      description: |
        <b><font color="blue">#GetSearchKeywords</font></b>
        <br />검색 키워드 목록 반환 요청
        - <a href="#operation/GetSearch">[GetSearch]</a> 사용시 전달된 "s_q"값이 추천 검색어에 영향을 주게 됩니다.

        - "q"값에 따라 그에 맞는 목록을 반환하며, 현재 지원하는 값은 아래와 같습니다.
          - recommed - 추천 검색어 목록

        - <font color="#f00">#메모리캐싱 처리 대상 입니다.</font>
          - <font color="#f00">API내부에서 최소 10분 간격으로 자료 갱신 처리합니다.</font>
          - <font color="#f00">클라이언트에서 일정한 간격으로 내부 캐싱 처리를 권고합니다.</font>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2064 </td><td> ParamUnsupportedSearchQuery </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        #- $ref: '#/components/parameters/queries/r_l'
        - $ref: '#/components/parameters/queries/search_q'
      responses:
        200:
          description: 성공, 키워드 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  lang:
                    $ref: '#/components/schemas/properties/lang'
                  keywords:
                    type: array
                    description: 키워드 목록
                    items:
                      type: string
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/login/local:
    put:
      tags:
        - 회원
      operationId: LoginLocalAccount
      summary: 로컬계정 로그인
      description: |
        <b><font color="blue">#LoginLocalAccount</font></b>
        <br />로컬 계정으로 로그인 요청을 합니다.
        <br />동일한 전화번호로 10회 이상 로그인 실패한 경우 일정시간(30분)동안 해당 전화번호로의 로그인이 제한 됩니다.
        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x1071 </td><td> PasswordFormatInvalid </td><td> 형식에 맞지 않는 비밀번호입니다 </td></tr>
        <tr><td> 0x1082 </td><td> LoginError </td><td> 로그인 정보를 다시 확인하세요.<br />가입하지 않은 정보이거나, 휴대폰번호 또는 비밀번호를 잘못 입력하셨습니다.  </td></tr>
        <tr><td> 0x1083 </td><td> LoginErrorLimitReached </td><td> 로그인 실패횟수(최대10회) 초과로 30분간 인증을 할 수 없습니다. </td></tr>
        <tr><td> 0x1012 </td><td> AccountBlockedPermanent </td><td> 영구정지된 계정 입니다 </td></tr>
        <tr><td> 0x1013 </td><td> AccountBlockedTemporary </td><td> 일시정지된 계정 입니다 </td></tr>
        <tr><td> Dx0301 </td><td> DBRead </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0305 </td><td> DBReadS04 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0306 </td><td> DBReadS05 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0204 </td><td> DBWriteS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Ax0001 </td><td> CAuthUnavailable </td><td> 인증서버 오류 </td></tr>
        <tr><td> Ax0002 </td><td> CAuthDBError </td><td> 인증서버 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 로컬계정 로그인을 위한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/LoginLocal'
      responses:
        200:
          description: 성공, 전달값 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/LocalLoginResult'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/login/social:
      put:
        tags:
          - 회원
        operationId: LoginSocialAccount
        summary: 구)소셜계정 로그인
        description: |
          <b><font color="blue">#LoginSocialAccount</font></b>
          <br />소셜 계정으로 로그인 요청을 합니다.
          <br />가입 되지 않은 소셜 계정의 경우 자동으로 가입 처리를 하게 되며, 이때 아래의 3개의 값을 필수로 전달해야 합니다.
          - ptnKey - 파트너키
          - mktKey - 마케팅키
          - agreeMarketing - 마케팅 동의 여부
  
          소셜 계정의 가입 여부는 <a href="#operation/IsSocialRegistered"><font color="blue">[#IsSocialRegistered]</font></a>을 통해 확인 가능 합니다.
          <br /><font color="red">*현재 kakao, facebook, google 계정만 지원합니다.</font>
  
          <table>
          <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
          <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
          <tr><td> 0x1101 </td><td> ServiceOudated </td><td> 종료 </td></tr>
          <!--tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
          <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
          <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
          <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
          <tr><td> 0x2052 </td><td> ParamUnsupportedAccLoc </td><td> 지원하지 않는 소셜계정입니다 </td></tr>
          <tr><td> 0x1012 </td><td> AccountBlockedPermanent </td><td> 영구정지된 계정 입니다 </td></tr>
          <tr><td> 0x1013 </td><td> AccountBlockedTemporary </td><td> 일시정지된 계정 입니다 </td></tr>
          <tr><td> Dx1001 </td><td> DBMemberCellNumberAlreadyInUse </td><td> 회원 가입된 전화번호 입니다 </td></tr>
          <tr><td> Dx1030 </td><td> DBMemberSNSIDAlreadyInUse </td><td> 회원 가입된 소셜계정 입니다 </td></tr>
          <tr><td> Dx1003 </td><td> DBMemberNickNameAlreadyInUse </td><td> 이미 사용중인 닉네임 입니다 </td></tr>
          <tr><td> Dx1005 </td><td> DBMemberSvcIDAlreadyInUse </td><td> 이미 사용중인 고유번호 입니다 </td></tr>
          <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
          <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
          <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
          <tr><td> Dx0305 </td><td> DBReadS04 </td><td> DB 처리 오류 </td></tr>
          <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
          <tr><td> Dx0204 </td><td> DBWriteS03 </td><td> DB 처리 오류 </td></tr>
          <tr><td> Dx0201 </td><td> DBWrite </td><td> DB 처리 오류 </td></tr>
          <tr><td> Dx0901 </td><td> DBTran </td><td> DB 처리 오류 </td></tr>
          <tr><td> Ax0001 </td><td> CAuthUnavailable </td><td> 인증서버 오류 </td></tr>
          <tr><td> Ax0002 </td><td> CAuthDBError </td><td> 인증서버 오류 </td></tr>
          <tr><td> 0x1078 </td><td> SNSAPIConnError </td><td> 소셜API 연결 오류 </td></tr>
          <tr><td> 0x1079 </td><td> SNSInvalidValue </td><td> 소셜API 반환값 오류 </td></tr>
          <tr><td> Dx1036 </td><td> DBMemberSNSIDNotExists </td><td> 가입된 소셜 계정 없음 </td></tr-->
          </table>
        parameters:
          - $ref: '#/components/parameters/cookies/keyEmpty'
          - $ref: '#/components/parameters/paths/locale'
          - $ref: '#/components/parameters/paths/svcKey'
        requestBody:
          description: 로컬계정 로그인을 위한 정보
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/requests/LoginSocial'
        responses:
          200:
            description: 성공, 전달값 반환
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/responses/schemas/LocalSocialResult'
          400:
            $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
          401:
            $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/login/social/new:
    put:
      tags:
        - 회원
      operationId: LoginSocialAccountNew
      summary: 소셜계정 로그인
      description: |
        <b><font color="blue">#LoginSocialAccountNew</font></b>
        <br />소셜 계정으로 로그인 요청을 합니다.

        소셜 계정의 가입 여부는 <a href="#operation/IsSocialRegistered"><font color="blue">[#IsSocialRegistered]</font></a>을 통해 확인 가능 합니다.
        <br /><font color="red">*현재 kakao, facebook, google 계정만 지원합니다.</font>

        <font color="red">*오류 코드 중 "Dx1036"을 반환 받은 경우 -> [회원가입]단계로 넘어가면 됩니다.</font>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2052 </td><td> ParamUnsupportedAccLoc </td><td> 지원하지 않는 소셜계정입니다 </td></tr>
        <tr><td> 0x1012 </td><td> AccountBlockedPermanent </td><td> 영구정지된 계정 입니다 </td></tr>
        <tr><td> 0x1013 </td><td> AccountBlockedTemporary </td><td> 일시정지된 계정 입니다 </td></tr>
        <tr><td> Dx1001 </td><td> DBMemberCellNumberAlreadyInUse </td><td> 회원 가입된 전화번호 입니다 </td></tr>
        <tr><td> Dx1030 </td><td> DBMemberSNSIDAlreadyInUse </td><td> 회원 가입된 소셜계정 입니다 </td></tr>
        <tr><td> Dx1003 </td><td> DBMemberNickNameAlreadyInUse </td><td> 이미 사용중인 닉네임 입니다 </td></tr>
        <tr><td> Dx1005 </td><td> DBMemberSvcIDAlreadyInUse </td><td> 이미 사용중인 고유번호 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0305 </td><td> DBReadS04 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0204 </td><td> DBWriteS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0201 </td><td> DBWrite </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0901 </td><td> DBTran </td><td> DB 처리 오류 </td></tr>
        <tr><td> Ax0001 </td><td> CAuthUnavailable </td><td> 인증서버 오류 </td></tr>
        <tr><td> Ax0002 </td><td> CAuthDBError </td><td> 인증서버 오류 </td></tr>
        <tr><td> 0x1078 </td><td> SNSAPIConnError </td><td> 소셜API 연결 오류 </td></tr>
        <tr><td> 0x1079 </td><td> SNSInvalidValue </td><td> 소셜API 반환값 오류 </td></tr>
        <tr><td> Dx1036 </td><td> DBMemberSNSIDNotExists </td><td> 가입된 소셜 계정 없음 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 로컬계정 로그인을 위한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/LoginSocialNew'
      responses:
        200:
          description: 성공, 전달값 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/LocalSocialNewResult'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/reset/password/cell-number:
    put:
      tags:
        - 회원 재설정
      operationId: ResetLocalPasswordStepCellNumber
      summary: 비번재설정 인증번호 발송
      description: |
        <b><font color="blue">#ResetLocalPasswordStepCellNumber</font></b>
        <br />입력받은 전화번호로 인증번호를 발송 합니다.
        <br />이 단계에서 "가입 여부"는 확인하지 않습니다.
        <br /><font color="red">참고사항</font>
        <br /><font color="red">- 인증번호는 "11111" 입니다.</font>
        <br /><font color="red">- 실제 SMS 발송은 SMS 서비스 도입 후 진행됩니다.</font>
        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0204 </td><td> DBWriteS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> 0x1084 </td><td> SMSCertifySendLimitReached </td><td> 인증 요청 횟수가 초과되었습니다 </td></tr>
        </table>
      externalDocs:
        description: => [오류코드 안내 바로가기]
        url: http://localhost
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 로컬계정 등록 단계 중 전화번호 인증 번호 발송을 위한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/RegistLocalStepCellNumber'
      responses:
        200:
          description: 성공, 최대 발송 가능 횟수, 현재 발송 횟수 반환 (SMS 발송 처리는 후에 진행)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/RegistLocalStepCellNumberResult'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/reset/password/cell-number-certify :
    put:
      tags:
        - 회원 재설정
      operationId: ResetLocalPasswordStepCellNumberCertify
      summary: 비번재설정 인증번호 확인
      description: |
        <b><font color="blue">#ResetLocalPasswordStepCellNumberCertify</font></b>
        <br />전화번호와 인증번호를 받아 성공 여부를 확인 합니다.
        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> 0x1085 </td><td> SMSCertifyCodeNotExists </td><td> 인증 요청 정보가 없습니다 </td></tr>
        <tr><td> 0x1044 </td><td> SMSCertifyCodeNotMatched </td><td> 인증번호가 일치하지 않습니다 </td></tr>
        <tr><td> 0x1045 </td><td> SMSCertifyCodeExpired </td><td> 인증시간이 만료되었습니다 </td></tr>
        <tr><td> Dx1002 </td><td> DBMemberCellNumberNotExists </td><td> 가입되지 않은 전화번호 입니다 </td></tr>
        </table>
      externalDocs:
        description: => [오류코드 안내 바로가기]
        url: http://localhost
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 로컬계정 등록 단계 중 전화번호와 인증 번호 확인을 위한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/RegistLocalStepCellNumberCertify'
      responses:
        200:
          description: 성공, memKey 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/RegistLocalStepCellNumberCertifyResult'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/reset/password/complete:
    put:
      tags:
        - 회원 재설정
      operationId: ResetLocalPasswordComplete
      summary: 비번재설정 요청
      description: |
        <b><font color="blue">#ResetLocalPasswordComplete</font></b>
        <br />비밀번호 재설정을 요청합니다.
        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0201 </td><td> DBWrite </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx1002 </td><td> DBMemberCellNumberNotExists </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> Dx1011 </td><td> DBSignDataNotFound </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x1085 </td><td> SMSCertifyCodeNotExists </td><td> 인증 요청 정보가 없습니다 </td></tr>
        <tr><td> 0x1044 </td><td> SMSCertifyCodeNotMatched </td><td> 인증번호가 일치하지 않습니다 </td></tr>
        <tr><td> 0x3002 </td><td> ReqSvcIDNotMatched </td><td> 확인되지 않는 정보이거나, 고유 ID를 잘못 입력하셨습니다 </td></tr>
        <tr><td> 0x1071 </td><td> PasswordFormatInvalid </td><td> 형식에 맞지 않는 비밀번호입니다 </td></tr>
        </table>
      externalDocs:
        description: => [오류코드 안내 바로가기]
        url: http://localhost
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 로컬계정 등록 단계 중 비밀번호 등록 가능 여부 확인을 위한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/ResetLocalPasswordComplete'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/regist/cell-certify:
    post:
      tags:
        - 회원 가입
      operationId: RegistCellCertify
      summary: 본인인증(외부사용X)
      description: |
        <b><font color="blue">#RegistCellCertify</font></b>
        <br />웹<->API 서버 내부처리용으로만 사용 됩니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 로컬/소셜계정 등록 단계 중 본인인증 정보 입력 처리
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/RegistCellCertify'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/regist/complete/local:
    post:
      tags:
        - 회원 가입
      operationId: RegistCompleteLocal
      summary: 가입요청 - 로컬계정
      description: |
        <b><font color="blue">#RegistCompleteLocal</font></b>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2058 </td><td> ParamNickNameFormatInvalid </td><td> 사용할 수 없는 닉네임 입니다 </td></tr>
        <tr><td> 0x2082 </td><td> ParamNickNameHasVulgarWord </td><td> 사용할 수 없는 닉네임 입니다 </td></tr>
        <tr><td> 0x2059 </td><td> ParamSvcIDFormatInvalid </td><td> 사용할 수 없는 고유번호 입니다 </td></tr>
        <tr><td> 0x2081 </td><td> ParamSvcIDHasVulgarWord </td><td> 사용할 수 없는 고유번호 입니다 </td></tr>
        <tr><td> 0x1071 </td><td> PasswordFormatInvalid </td><td> 형식에 맞지 않는 비밀번호입니다 </td></tr>
        <tr><td> 0x1100 </td><td> CellCertifyTempNotExists </td><td> 본인인증 정보가 없습니다 </td></tr>
        <tr><td> Dx1001 </td><td> DBMemberCellNumberAlreadyInUse </td><td> 회원 가입된 전화번호 입니다 </td></tr>
        <tr><td> Dx1030 </td><td> DBMemberSNSIDAlreadyInUse </td><td> 회원 가입된 소셜계정 입니다 </td></tr>
        <tr><td> Dx1003 </td><td> DBMemberNickNameAlreadyInUse </td><td> 이미 사용중인 닉네임 입니다 </td></tr>
        <tr><td> Dx1005 </td><td> DBMemberSvcIDAlreadyInUse </td><td> 이미 사용중인 고유번호 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0305 </td><td> DBReadS04 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0306 </td><td> DBReadS05 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0204 </td><td> DBWriteS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0201 </td><td> DBWrite </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0901 </td><td> DBTran </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 로컬계정 회원 가입 요청
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TX_SEQ_NO
                - countryCode
                - cellNumber
                - cellNumber
                - svcID
                - nickName
                - mktKey
                - exeCode
                - agreeMarketing
              properties:
                TX_SEQ_NO:
                  type: string
                  description: <a href="#operation/RegistCellCertify">RegistCellCertify</a>에 사용된 TX_SEQ_NO값
                countryCode:
                  $ref: '#/components/schemas/properties/countryCode'
                cellNumber:
                  $ref: '#/components/schemas/properties/cellNumber'
                password:
                  $ref: '#/components/schemas/properties/password'
                svcID:
                  $ref: '#/components/schemas/properties/svcID'
                nickName:
                  $ref: '#/components/schemas/properties/nickName'
                mktKey:
                  $ref: '#/components/schemas/properties/mktKey'
                exeCode:
                  $ref: '#/components/schemas/properties/exeCode'
                agreeMarketing:
                  $ref: '#/components/schemas/properties/agreeMarketing'
      responses:
        200:
          description: 성공, 기본 회원 가입 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/RegistLocalCompleteResult'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/regist/complete/social:
    post:
      tags:
        - 회원 가입
      operationId: RegistCompleteSocial
      summary: 가입요청 - 소셜계정
      description: |
        <b><font color="blue">#RegistCompleteSocial</font></b>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2058 </td><td> ParamNickNameFormatInvalid </td><td> 사용할 수 없는 닉네임 입니다 </td></tr>
        <tr><td> 0x2082 </td><td> ParamNickNameHasVulgarWord </td><td> 사용할 수 없는 닉네임 입니다 </td></tr>
        <tr><td> 0x2059 </td><td> ParamSvcIDFormatInvalid </td><td> 사용할 수 없는 고유번호 입니다 </td></tr>
        <tr><td> 0x2081 </td><td> ParamSvcIDHasVulgarWord </td><td> 사용할 수 없는 고유번호 입니다 </td></tr>
        <tr><td> 0x2052 </td><td> ParamUnsupportedAccLoc </td><td> 지원하지 않는 소셜계정입니다 </td></tr>
        <tr><td> 0x1100 </td><td> CellCertifyTempNotExists </td><td> 본인인증 정보가 없습니다 </td></tr>
        <tr><td> Dx1001 </td><td> DBMemberCellNumberAlreadyInUse </td><td> 회원 가입된 전화번호 입니다 </td></tr>
        <tr><td> Dx1030 </td><td> DBMemberSNSIDAlreadyInUse </td><td> 회원 가입된 소셜계정 입니다 </td></tr>
        <tr><td> Dx1003 </td><td> DBMemberNickNameAlreadyInUse </td><td> 이미 사용중인 닉네임 입니다 </td></tr>
        <tr><td> Dx1005 </td><td> DBMemberSvcIDAlreadyInUse </td><td> 이미 사용중인 고유번호 입니다 </td></tr>
        <tr><td> 0x1078 </td><td> SNSAPIConnError </td><td> 소셜API 연결 오류 </td></tr>
        <tr><td> 0x1079 </td><td> SNSInvalidValue </td><td> 소셜API 반환값 오류 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0305 </td><td> DBReadS04 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0306 </td><td> DBReadS05 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0204 </td><td> DBWriteS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0201 </td><td> DBWrite </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0901 </td><td> DBTran </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 소셜계정 회원 가입 요청
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TX_SEQ_NO
                - countryCode
                - cellNumber
                - svcID
                - nickName
                - mktKey
                - exeCode
                - agreeMarketing
                - accLoc
                - accessToken
              properties:
                TX_SEQ_NO:
                  type: string
                  description: <a href="#operation/RegistCellCertify">RegistCellCertify</a>에 사용된 TX_SEQ_NO값
                countryCode:
                  $ref: '#/components/schemas/properties/countryCode'
                cellNumber:
                  $ref: '#/components/schemas/properties/cellNumber'
                svcID:
                  $ref: '#/components/schemas/properties/svcID'
                nickName:
                  $ref: '#/components/schemas/properties/nickName'
                mktKey:
                  $ref: '#/components/schemas/properties/mktKey'
                exeCode:
                  $ref: '#/components/schemas/properties/exeCode'
                agreeMarketing:
                  $ref: '#/components/schemas/properties/agreeMarketing'
                accLoc:
                  $ref: '#/components/schemas/properties/accLoc'
                accessToken:
                  $ref: '#/components/schemas/properties/accessToken'
      responses:
        200:
          description: 성공, 기본 회원 가입 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/RegistLocalCompleteResult'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'

  /{locale}/{svcKey}/regist/cell-number:
    put:
      tags:
        - 회원 가입
      operationId: RegistLocalStepCellNumber
      summary: 구)인증번호 발송
      description: |
        <b><font color="blue">#RegistLocalStepCellNumber</font></b>
        <br />입력받은 전화번호로 인증번호를 발송 합니다.
        <br />이 단계에서 "가입된 전화 번호"여부는 확인하지 않습니다.
        <!--br /><font color="red">참고사항</font>
        <br /><font color="red">- 인증번호는 "11111" 입니다.</font>
        <br /><font color="red">- 실제 SMS 발송은 SMS 서비스 도입 후 진행됩니다.</font-->
        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1101 </td><td> ServiceOudated </td><td> 종료 </td></tr>
        <!--tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0204 </td><td> DBWriteS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> 0x1084 </td><td> SMSCertifySendLimitReached </td><td> 인증 요청 횟수가 초과되었습니다 </td></tr-->
        </table>
      externalDocs:
        description: => [오류코드 안내 바로가기]
        url: http://localhost
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 로컬계정 등록 단계 중 전화번호 인증 번호 발송을 위한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/RegistLocalStepCellNumber'
      responses:
        200:
          description: 성공, 최대 발송 가능 횟수, 현재 발송 횟수 반환 (SMS 발송 처리는 후에 진행)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/RegistLocalStepCellNumberResult'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/regist/cell-number-certify :
    put:
      tags:
        - 회원 가입
      operationId: RegistLocalStepCellNumberCertify
      summary: 구)인증번호 확인
      description: |
        <b><font color="blue">#RegistLocalStepCellNumberCertify</font></b>
        <br />전화번호와 인증번호를 받아 성공 여부를 확인 합니다.
        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1101 </td><td> ServiceOudated </td><td> 종료 </td></tr>
        <!--tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx1002 </td><td> DBMemberCellNumberNotExists </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x1085 </td><td> SMSCertifyCodeNotExists </td><td> 인증 요청 정보가 없습니다 </td></tr>
        <tr><td> 0x1044 </td><td> SMSCertifyCodeNotMatched </td><td> 인증번호가 일치하지 않습니다 </td></tr>
        <tr><td> 0x1045 </td><td> SMSCertifyCodeExpired </td><td> 인증시간이 초과 되었습니다 </td></tr>
        <tr><td> Dx1001 </td><td> DBMemberCellNumberAlreadyInUse </td><td> 회원 가입된 전화번호 입니다 </td></tr-->
        </table>
      externalDocs:
        description: => [오류코드 안내 바로가기]
        url: http://localhost
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 로컬계정 등록 단계 중 전화번호와 인증 번호 확인을 위한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/RegistLocalStepCellNumberCertify'
      responses:
        200:
          description: 성공, memKey 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/RegistLocalStepCellNumberCertifyResult'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/regist/password:
    put:
      tags:
        - 회원 가입
      operationId: RegistLocalStepPassword
      summary: 구)비밀번호 확인
      description: |
        <b><font color="blue">#RegistLocalStepPassword</font></b>
        <br />비밀번호 사용 가능 여부를 확인 합니다.
        <br />이 단계에서는 실제로 자료를 생성하지 않으며, <a href="#operation/RegistLocalComplete"><font color="blue">[#RegistLocalComplete]</font></a>
        단계에서 입력한 비밀번호로 자료를 생성합니다.
        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1101 </td><td> ServiceOudated </td><td> 종료 </td></tr>
        <!--tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx1002 </td><td> DBMemberCellNumberNotExists </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x1085 </td><td> SMSCertifyCodeNotExists </td><td> 인증 요청 정보가 없습니다 </td></tr>
        <tr><td> 0x1044 </td><td> SMSCertifyCodeNotMatched </td><td> 인증번호가 일치하지 않습니다 </td></tr>
        <tr><td> Dx1001 </td><td> DBMemberCellNumberAlreadyInUse </td><td> 회원 가입된 전화번호 입니다 </td></tr>
        <tr><td> 0x1071 </td><td> PasswordFormatInvalid </td><td> 형식에 맞지 않는 비밀번호입니다 </td></tr-->
        </table>
      externalDocs:
        description: => [오류코드 안내 바로가기]
        url: http://localhost
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 로컬계정 등록 단계 중 비밀번호 등록 가능 여부 확인을 위한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/RegistLocalStepPassword'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'

  /{locale}/{svcKey}/regist/make-svcid:
    put:
      tags:
        - 회원 가입
      operationId: RegistLocalStepMakeSvcID
      summary: 구)고유번호 시스템 생성
      description: |
        <b><font color="blue">#RegistLocalStepMakeSvcID</font></b>
        <br />시스템 기본 svcID를 생성 후 생성된 닉네임을 반환 합니다.
        <br />임의의 svcID를 보여줄 필요가 있을 시 사용합니다.
        <br />생성 형식은 "I"+일자(년월일)+시간(시분초) 입니다. (예, I20190405121101)
        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1101 </td><td> ServiceOudated </td><td> 종료 </td></tr>
        <!--tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx1002 </td><td> DBMemberCellNumberNotExists </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x1085 </td><td> SMSCertifyCodeNotExists </td><td> 인증 요청 정보가 없습니다 </td></tr>
        <tr><td> 0x1044 </td><td> SMSCertifyCodeNotMatched </td><td> 인증번호가 일치하지 않습니다 </td></tr>
        <tr><td> Dx1001 </td><td> DBMemberCellNumberAlreadyInUse </td><td> 회원 가입된 전화번호 입니다 </td></tr>
        <tr><td> Dx1005 </td><td> DBMemberSvcIDAlreadyInUse </td><td> 사용할 수 없는 고유번호 입니다 </td></tr-->
        </table>
      externalDocs:
        description: => [오류코드 안내 바로가기]
        url: http://localhost
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 로컬계정 등록 단계 중 svcID 임시 저장 처리를 위한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/RegistLocalStepMakeNickName'
      responses:
        200:
          description: 성공, 생성된 svcID 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  nickName:
                    $ref: '#/components/schemas/properties/svcID'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/regist/svcid:
    put:
      tags:
        - 회원 가입
      operationId: RegistLocalStepSvcID
      summary: 구)고유번호 설정
      description: |
        <b><font color="blue">#RegistLocalStepSvcID</font></b>
        <br />사용할 svcID를 입력 받아 임시 저장 처리 합니다.
        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1101 </td><td> ServiceOudated </td><td> 종료 </td></tr>
        <!--tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0204 </td><td> DBWriteS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0205 </td><td> DBWriteS04 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx1002 </td><td> DBMemberCellNumberNotExists </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x1085 </td><td> SMSCertifyCodeNotExists </td><td> 인증 요청 정보가 없습니다 </td></tr>
        <tr><td> 0x1044 </td><td> SMSCertifyCodeNotMatched </td><td> 인증번호가 일치하지 않습니다 </td></tr>
        <tr><td> Dx1001 </td><td> DBMemberCellNumberAlreadyInUse </td><td> 회원 가입된 전화번호 입니다 </td></tr>
        <tr><td> 0x2059 </td><td> ParamSvcIDFormatInvalid </td><td> 사용할 수 없는 고유번호 입니다 </td></tr>
        <tr><td> Dx1005 </td><td> DBMemberSvcIDAlreadyInUse </td><td> 사용할 수 없는 고유번호 입니다 </td></tr>
        <tr><td> 0x2066 </td><td> ParamHasVulgarWord </td><td> 사용할 수 없는 고유번호 입니다 </td></tr-->
        </table>
      externalDocs:
        description: => [오류코드 안내 바로가기]
        url: http://localhost
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 로컬계정 등록 단계 중 svcID 임시 저장 처리를 위한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/RegistLocalStepSvcID'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/regist/make-nickname:
    put:
      tags:
        - 회원 가입
      operationId: RegistLocalStepMakeNickName
      summary: 구)닉네임 시스템 생성
      description: |
        <b><font color="blue">#RegistLocalStepMakeNickName</font></b>
        <br />시스템 기본 닉네임을 생성 후 생성된 닉네임을 반환 합니다.
        <br />임의의 닉네임을 보여줄 필요가 있을 시 사용합니다.
        <br />생성 형식은 "U"+일자(년월일)+시간(시분초) 입니다. (예, U20190405121101)
        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1101 </td><td> ServiceOudated </td><td> 종료 </td></tr>
        <!--tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx1002 </td><td> DBMemberCellNumberNotExists </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x1085 </td><td> SMSCertifyCodeNotExists </td><td> 인증 요청 정보가 없습니다 </td></tr>
        <tr><td> 0x1044 </td><td> SMSCertifyCodeNotMatched </td><td> 인증번호가 일치하지 않습니다 </td></tr>
        <tr><td> Dx1001 </td><td> DBMemberCellNumberAlreadyInUse </td><td> 회원 가입된 전화번호 입니다 </td></tr>
        <tr><td> Dx1003 </td><td> DBMemberNickNameAlreadyInUse </td><td> 사용할 수 없는 닉네임 입니다 </td></tr-->
        </table>
      externalDocs:
        description: => [오류코드 안내 바로가기]
        url: http://localhost
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 로컬계정 등록 단계 중 닉네임 임시 저장 처리를 위한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/RegistLocalStepMakeNickName'
      responses:
        200:
          description: 성공, 생성된 닉네임 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  nickName:
                    $ref: '#/components/schemas/properties/nickName'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/regist/nickname:
    put:
      tags:
        - 회원 가입
      operationId: RegistLocalStepNickName
      summary: 구)닉네임 설정
      description: |
        <b><font color="blue">#RegistLocalStepNickName</font></b>
        <br />사용할 닉네임을 입력 받아 임시 저장 처리 합니다.
        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1101 </td><td> ServiceOudated </td><td> 종료 </td></tr>
        <!--tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0204 </td><td> DBWriteS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0205 </td><td> DBWriteS04 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx1002 </td><td> DBMemberCellNumberNotExists </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x1085 </td><td> SMSCertifyCodeNotExists </td><td> 인증 요청 정보가 없습니다 </td></tr>
        <tr><td> 0x1044 </td><td> SMSCertifyCodeNotMatched </td><td> 인증번호가 일치하지 않습니다 </td></tr>
        <tr><td> Dx1001 </td><td> DBMemberCellNumberAlreadyInUse </td><td> 회원 가입된 전화번호 입니다 </td></tr>
        <tr><td> 0x2058 </td><td> ParamNickNameFormatInvalid </td><td> 사용할 수 없는 닉네임 입니다 </td></tr>
        <tr><td> Dx1003 </td><td> DBMemberNickNameAlreadyInUse </td><td> 사용할 수 없는 닉네임 입니다 </td></tr>
        <tr><td> 0x2066 </td><td> ParamHasVulgarWord </td><td> 사용할 수 없는 닉네임 입니다 </td></tr-->
        </table>
      externalDocs:
        description: => [오류코드 안내 바로가기]
        url: http://localhost
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 로컬계정 등록 단계 중 닉네임 임시 저장 처리를 위한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/RegistLocalStepNickName'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/regist/profile-random-init:
    put:
      tags:
        - 회원 가입
      operationId: RegistLocalStepProfileRandomInit
      summary: 구)프로필 시스템 생성
      description: |
        <b><font color="blue">#RegistLocalStepProfileRandomInit</font></b>
        <br />시스템 설정된 프로필 이미지 중에서 랜덤하게 1개를 선정하여 임시 저장 후 해당 프로필 이미지 정보를 반환합니다.
        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1101 </td><td> ServiceOudated </td><td> 종료 </td></tr>
        <!--tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx1002 </td><td> DBMemberCellNumberNotExists </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x1085 </td><td> SMSCertifyCodeNotExists </td><td> 인증 요청 정보가 없습니다 </td></tr>
        <tr><td> 0x1044 </td><td> SMSCertifyCodeNotMatched </td><td> 인증번호가 일치하지 않습니다 </td></tr>
        <tr><td> Dx1001 </td><td> DBMemberCellNumberAlreadyInUse </td><td> 회원 가입된 전화번호 입니다 </td></tr-->
        </table>
      externalDocs:
        description: => [오류코드 안내 바로가기]
        url: http://localhost
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 로컬계정 등록 단계 중 프로필 이미지 임의 선택 후 임시 저장 처리를 위한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/RegistLocalStepProfileRandomInit'
      responses:
        200:
          description: 성공, 프로필 이미지 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  ixCode:
                    $ref: '#/components/schemas/properties/ixCode'
                  profileImg:
                    $ref: '#/components/schemas/properties/profileImg'
                  themaCode:
                    $ref: '#/components/schemas/properties/themaCode'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/regist/profile:
    put:
      tags:
        - 회원 가입
      operationId: RegistLocalStepProfile
      summary: 구)프로필 설정
      description: |
        <b><font color="blue">#RegistLocalStepProfile</font></b>
        <br />프로필 이미지를 설정 합니다.
        <br />아래의 두가지 방식으로 사용 합니다.
        <br />1. ixCode값을 통해 시스템 설정된 프로필 이미지를 선택
        <br />&nbsp;&nbsp;&nbsp;&nbsp;&gt; <a href="#operation/GetSystemProfiles"><font color="blue">[#GetSystemProfiles]</font></a>를 통해 ixCode값을 얻을 수 있습니다.
        <br />2. encodedTxt값을 통해 사용할 이미지 업로드하여 사용
        <br />&nbsp;&nbsp;&nbsp;&nbsp;&gt; base64 인코딩된 텍스트를 사용합니다.
        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1101 </td><td> ServiceOudated </td><td> 종료 </td></tr>
        <!--tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0204 </td><td> DBWriteS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx1002 </td><td> DBMemberCellNumberNotExists </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x1085 </td><td> SMSCertifyCodeNotExists </td><td> 인증 요청 정보가 없습니다 </td></tr>
        <tr><td> 0x1044 </td><td> SMSCertifyCodeNotMatched </td><td> 인증번호가 일치하지 않습니다 </td></tr>
        <tr><td> Dx1001 </td><td> DBMemberCellNumberAlreadyInUse </td><td> 회원 가입된 전화번호 입니다 </td></tr>
        <tr><td> 0x1072 </td><td> DecodingFailed </td><td> 이미지 디코딩 오류 </td></tr-->
        </table>
      externalDocs:
        description: => [오류코드 안내 바로가기]
        url: http://localhost
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 로컬계정 등록 단계 중 프로필 이미지 임시 저장 처리를 위한 정보
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/requests/RegistLocalStepProfileIxCode'
                - $ref: '#/components/schemas/requests/RegistLocalStepProfileTxt'
      responses:
        200:
          description: 성공, 프로필 이미지 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  profileImg:
                    $ref: '#/components/schemas/properties/profileImg'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/regist/complete:
    post:
      tags:
        - 회원 가입
      operationId: RegistLocalComplete
      summary: 구)가입완료 요청
      description: |
        <b><font color="blue">#RegistLocalComplete</font></b>
        <br />로컬 계정 회원 가입 요청을 요청합니다.
        <br />이 단계에서 실제 로그인 가능한 회원 정보가 생성됩니다.
        <br />이 단계를 거치지 않은 경우, 임시 저장된 자료들은 일정 시간이 지난 후에 자동으로 삭제 처리 됩니다.
        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1101 </td><td> ServiceOudated </td><td> 종료 </td></tr>
        <!--tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0305 </td><td> DBReadS04 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0306 </td><td> DBReadS05 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0307 </td><td> DBReadS06 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0204 </td><td> DBWriteS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0201 </td><td> DBWrite </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0901 </td><td> DBTran </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx1002 </td><td> DBMemberCellNumberNotExists </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> Dx1009 </td><td> DBMemKeyNotExists </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> Dx1004 </td><td> DBMemberNickNameNotExists </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> Dx1017 </td><td> DBMemberProfileImgNotExists </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> Dx1006 </td><td> DBMemberSvcIDNotExists </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x1085 </td><td> SMSCertifyCodeNotExists </td><td> 인증 요청 정보가 없습니다 </td></tr>
        <tr><td> 0x1044 </td><td> SMSCertifyCodeNotMatched </td><td> 인증번호가 일치하지 않습니다 </td></tr>
        <tr><td> Dx1001 </td><td> DBMemberCellNumberAlreadyInUse </td><td> 회원 가입된 전화번호 입니다 </td></tr>
        <tr><td> 0x1071 </td><td> PasswordFormatInvalid </td><td> 형식에 맞지 않는 비밀번호입니다 </td></tr-->
        </table>
      externalDocs:
        description: => [오류코드 안내 바로가기]
        url: http://localhost
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 로컬계정 등록을 위한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/RegistLocalComplete'
      responses:
        200:
          description: 성공, 기본 회원 가입 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/RegistLocalCompleteResult'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/regist/social/svcid-nickname:
    put:
      tags:
      - 회원 가입
      operationId: RegistSocialStepSvcIDNickName
      summary: 구)소셜 고유번호/닉네임 설정
      description: |
        <b><font color="blue">#RegistSocialStepSvcIDNickName</font></b>
        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1101 </td><td> ServiceOudated </td><td> 종료 </td></tr>
        </table>
      parameters:
      - $ref: '#/components/parameters/cookies/key'
      - $ref: '#/components/parameters/paths/locale'
      - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 소셜계정 가입 확인을 위한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/RegistSocialStepSvcIDNickName'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/regist/is-social-registered:
    put:
      tags:
        - 회원 가입
      operationId: IsSocialRegistered
      summary: 소셜가입 확인
      description: |
        <b><font color="blue">#IsSocialRegistered</font></b>
        <br />소셜계정의 가입 유무를 반환합니다.
        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2052 </td><td> ParamUnsupportedAccLoc </td><td> 지원하지 않는 소셜계정입니다 </td></tr>
        <tr><td> 0x1078 </td><td> SNSAPIConnError </td><td> 소셜API 연결 오류 </td></tr>
        <tr><td> 0x1079 </td><td> SNSInvalidValue </td><td> 소셜API 반환값 오류 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        </table>
      externalDocs:
        description: => [오류코드 안내 바로가기]
        url: http://localhost
      parameters:
        - $ref: '#/components/parameters/cookies/keyEmpty'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 소셜계정 가입 확인을 위한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/IsSocialRegistered'
      responses:
        200:
          description: 성공, 소셜 회원 가입 유무 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/IsSocialRegisteredResult'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members:
    get:
      tags:
        - 회원
      operationId: GetMembers
      summary: 회원목록
      description: |
        <b><font color="blue">#GetMembers</font></b>
        <br />회원 목록을 조회 합니다.

        1. 기본적으로 아래의 정보를 반환합니다.
          - memKey
          - nickName
          - profileImg
          - Tag

        2. r_i의 입력값에 따라 반환값이 변경됩니다.
          - r_i[]=lv 의 경우 아래의 값이 추가 됩니다.
            - level
              - mem : 회원 레벨
              - vip : VIP 레벨
              - cast : 방송자 등급
          - r_i[]=cnt 의 경우 아래의 값이 추가 됩니다.
            - count
              - follower : 팔로워 수
              - fan : 팬 수
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
        - name: r_i
          in: query
          description: |
            <font color="blue">(r)equest (i)nfo</font><br />
            반환 요청값
            - lv: 레벨 정보
              <br />반환값은 level: {mem:0, vip:0, cast:0}
            - cnt: 팔로워/팔로잉/보유팬 수
              <br />반환값은 count: {follower: 0, following: 0, fan: 0}
          example:
            r_i[]=lv&r_i[]=cnt
          schema:
            type: array
            items:
              type: string
              enum: [lv, cnt]
        - name: s_tags
          in: query
          description: |
            <font color="blue">(s)earch (tags)</font><br />
            <br />태그에 대해 or 검색을 합니다.
            <br />전달갯수가 10건이 넘는 경우, 10건까지만 사용되고 나머지는 무시됩니다.
          example:
            s_tags[]=tag1&s_tags[]=tag2&s_tags[]=tag3
          schema:
            type: array
            items:
              type: string
              minLength: 1
              maxLength: 10
        - name: s_t
          in: query
          description: |
            <font color="blue">(s)earch (t)ype</font><br />
            <br />검색 구분값
          example:
            s_t=nickname
          schema:
            type: string
            enum: [nickname]
        - $ref: '#/components/parameters/queries/s_q'
        - name: o_t
          in: query
          description: |
            <font color="blue">(o)rder (t)ype</font><br />
            출력 순서 구분값
            - newest - 최근순
            - oldest - 최근역순
          schema:
            type: string
            enum: ['newest', 'oldest']
            default: 'newest'
      responses:
        200:
          description: 성공, 회원 목록 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/Members'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
        404:
          $ref: '#/components/schemas/responses/codeOnly/NotFound'
  /{locale}/{svcKey}/members/{memKey}:
    get:
      tags:
        - 회원
      operationId: GetMember
      summary: 회원정보
      description: |
        <b><font color="blue">#GetMember</font></b>
        <br />해당 계정의 회원 정보를 반환 합니다.

        1. 기본적으로 아래의 정보를 반환합니다.
          - memKey
          - svcID
          - nickName
          - profileImg
          - memLevel: 회원레벨
          - vipLevel: VIP레벨
          - castLevel: 방송등급
          - isAccountBlock: 계정 차단 여부

        2. "r_i"값을 통해 아래의 추가 정보를 요청 할 수 있습니다.
          - coin : 로그인 필요, 본인만 가능
            - coin: 코인 갯수
            - cubic: 큐빅 갯수
          - tag: 방송 설정상의 태그 정보
          - count:
            - follower: 팔로워수
            - following: 팔로잉수
            - fan: 팬수
          - cel: 로그인 필요, 본인만 가능
            - countryCode: 국가번호
            - cellNumber: 전화번호
          - cert: 로그인 필요, 본인인증 여부
          - adult: 로그인 필요, 성인 여부
          - accLoc: 가입경로 정보, 로그인 필요, 본인만 가능
          - fan: 요청자에 대한 대상자의 팬정보, 로그인 필요
          - cast: 현재 진행중인 방송 정보 반환(캐시 자료 반환)
            - exists: 방송 존재 유무
            - info: 방송 정보, exists값이 false인 경우 null을 가집니다.
              - Title: 방송 제목
              - Tag : 방송 태그
              - castTargetType: 레벨 제한 구분
              - castTargetLevel: 레벨 제한 사용시 지정 레벨값
              - isAdult: 성인방송 여부
              - isLock: 비밀방송 여부
              - viewType: 영상 비율
              - castDateTime: 방송 시작일
          - joindt: 가입일 정보 반환

        3. "i_f"값을 통해 요청자의 대상자에 대한 팔로잉 여부를 반환 받을 수 있습니다.
          - isFollowing: 요청자의 대상자에 대한 팔로잉 여부

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx1011 </td><td> DBSignDataNotFound </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0305 </td><td> DBReadS04 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0306 </td><td> DBReadS05 </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - name: r_i
          in: query
          description: |
            <font color="blue">(r)equest (i)nfo</font><br />
            반환 요청값
            - coin: 코인값 정보(로그인 필수, 본인 자료만 요청 가능)
              <br />반환값은 coin: {coin:0, cubic:0}
            - tag: 태그 정보
              <br />반환값은 tag: ''
            - cnt: 팔로워/팔로잉/보유팬 수
              <br />반환값은 count: {follower: 0, following: 0, fan: 0}
            - cel: 전화번호(로그인 필수, 본인 자료만 요청 가능)
              <br />반환값은 cel: {countryCode:'', cellNumber:''}
            - loc: 가입 경로 정보
              <br />반환값은 accLoc: ''
            - cert: 본인인증 여부
              <br />반환값은 isCellCertify
            - adult: 성인인증 여부
              <br />반환값은 isAdult
            - fan: 요청자에 대한 대상자의 팬정보
              <br />반환값은 fan: {level:0, rank:0}
            - cast: 대상자의 현재 진행중인 방송 정보 반환(캐시자료 반환)
              <br />반환값은 cast: {exists: false, info: {}}
          example:
            r_i[]=coin&r_i[]=tag&r_i[]=cnt&r_i[]=cel&r_i[]=loc&r_i[]=cert&r_i[]=adult&r_i[]=fan&r_i[]=cast
          schema:
            type: array
            items:
              type: string
              enum: [coin, tag, cnt, cel, loc, cert, adult, fan, cast]
        - name: i_f
          in: query
          description: |
            <font color="blue">(i)s (f)ollowing</font><br />
            조회 대상에 대한 팔로잉 여부 반환(로그인 필수)
            - 0: 미요청, 반환값에 isFollowing 미포함
            - 1: 요청, 반환값에 isFollowing 포함
          schema:
            type: number
            enum: [0, 1]
            default: 0
      responses:
        200:
          description: 성공, 회원 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/Member'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
        404:
          $ref: '#/components/schemas/responses/codeOnly/NotFound'
    delete:
      tags:
      - 회원
      operationId: RequestLeave
      summary: 탈퇴요청
      description: |
        <b><font color="blue">#RequestLeave</font></b>
        <br />계정 탈퇴 요청 처리를 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1011 </td><td> LoginRequired </td><td> 로그인이 필요합니다 </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx1011 </td><td> DBSignDataNotFound </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x1064 </td><td> RequestLeaveAlreadyExists </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0204 </td><td> DBWriteS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0205 </td><td> DBWriteS04 </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/requestLeave'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/coin:
    get:
      tags:
        - 회원
      operationId: GetMemberCoin
      summary: 회원 코인 정보
      description: |
        <b><font color="blue">#GetMemberCoin</font></b>
        <br />해당 계정의 회원 코인 정보를 반환 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
      - $ref: '#/components/parameters/cookies/key'
      - $ref: '#/components/parameters/paths/locale'
      - $ref: '#/components/parameters/paths/svcKey'
      - $ref: '#/components/parameters/paths/memKey'
      responses:
        200:
          description: 성공, 회원 코인 정보 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  coin:
                    $ref: '#/components/schemas/properties/coin'
                  cubic:
                    $ref: '#/components/schemas/properties/cubic'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
        404:
          $ref: '#/components/schemas/responses/codeOnly/NotFound'
  /{locale}/{svcKey}/members/{memKey}/profile-preset:
    put:
      tags:
      - 회원 수정
      operationId: UpdateProfilePreset
      summary: 프로필 수정(프리셋)
      description: |
        <b><font color="blue">#UpdateProfilePreset</font></b>
        <br />해당 계정의 프로필 이미지를 지정된 프리셋에서 하나 선택하여 변경합니다.
        <br />프리셋은 <a href="#operation/GetSystemProfiles">[시스템 프로필 목록]</a>을 사용하여 확인 가능합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1011 </td><td> LoginRequired </td><td> 로그인이 필요합니다 </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx1017 </td><td> DBMemberProfileImgNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx0201 </td><td> DBWrite </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 계정 프로필 이미지 변경 자료
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ixCode:
                  $ref: '#/components/schemas/properties/ixCode'
      responses:
        200:
          description: 성공, 변경된 profileImg URL 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  profileImg:
                    $ref: '#/components/schemas/properties/profileImg'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/profile:
    put:
      tags:
      - 회원 수정
      operationId: UpdateProfile
      summary: 프로필 수정(업로드)
      description: |
        <b><font color="blue">#UpdateProfile</font></b>
        <br />해당 계정의 프로필 이미지를 변경 처리 합니다.
        <br /><font color="red">*API에서 사이즈 조정(640x360)을 하나, 요청시에도 사이즈 조정을 권합니다.</font>
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1011 </td><td> LoginRequired </td><td> 로그인이 필요합니다 </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x1072 </td><td> DecodingFailed </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx0201 </td><td> DBWrite </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 계정 프로필 이미지 변경 자료
        required: true
        content:
          text/plain:
            schema:
              type: string
              description: |
                {base64 인코딩 문자열}
      responses:
        200:
          description: 성공, 변경된 profileImg URL 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  profileImg:
                    $ref: '#/components/schemas/properties/profileImg'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/svcid:
    put:
      tags:
      - 회원 수정
      operationId: UpdateSvcID
      summary: 고유번호 수정
      description: |
        <b><font color="blue">#UpdateSvcID</font></b>
        <br />해당 계정의 svcID 변경 처리 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1011 </td><td> LoginRequired </td><td> 로그인이 필요합니다 </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 사용할 수 없는 고유번호 입니다 </td></tr>
        <tr><td> 0x2059 </td><td> ParamSvcIDFormatInvalid </td><td> 사용할 수 없는 고유번호 입니다 </td></tr>
        <tr><td> 0x2066 </td><td> ParamHasVulgarWord </td><td> 사용할 수 없는 고유번호 입니다 </td></tr>
        <tr><td> 0x1031 </td><td> ChangeValueIsSameAsBefore </td><td> 이전값과 동일한 고유번호 입니다 </td></tr>
        <tr><td> 0x1034 </td><td> ChangeLimitReachedSvcID </td><td> 고유번호 변경 제한 횟수를 초과하였습니다 </td></tr>
        <tr><td> Dx1005 </td><td> DBMemberSvcIDAlreadyInUse </td><td> 사용할 수 없는 고유번호 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0002 </td><td> DBResultDataIsEmpty </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0201 </td><td> DBWrite </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0204 </td><td> DBWriteS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0205 </td><td> DBWriteS04 </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 계정 svcID 변경 자료
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/UpdateSvcID'
      responses:
        200:
          description: 성공, svcID 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  svcID:
                    $ref: '#/components/schemas/properties/svcID'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/nickname:
    get:
      tags:
        - 회원 수정
      operationId: GetMemberNickName
      summary: 닉네임 정보
      description: |
        <b><font color="blue">#GetMemberNickName</font></b>
        <br />해당 계정의 닉네임 정보와 변경에 필요한 아이템/큐빅 정보를 반환 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      responses:
        200:
          description: 성공, 닉네임 정보와 변경에 필요한 아이템/큐빅 정보를 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  nickName:
                    $ref: '#/components/schemas/properties/nickName'
                  changeable:
                    type: boolean
                    default: false
                    description: 닉네임 무료 변경 가능 여부
                  coin:
                    type: object
                    properties:
                      coin:
                        $ref: '#/components/schemas/properties/coin'
                      cubic:
                        $ref: '#/components/schemas/properties/cubic'
                  item:
                    type: object
                    properties:
                      goodCode:
                        $ref: '#/components/schemas/properties/goodCode'
                      buyAmount:
                        type: number
                        description: 원 큐빅 소요 갯수
                      discount:
                        type: number
                        description: 할인률
                      payAmount:
                        type: number
                        description: 할인율 적용된 큐빅 소요 갯수
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    put:
      tags:
        - 회원 수정
      operationId: UpdateNickName
      summary: 닉네임 수정
      description: |
        <b><font color="blue">#UpdateNickName</font></b>
        <br />해당 계정의 닉네임 변경 처리 합니다.
        - 닉네임 변경은 두가지의 경우로 진행됩니다.
          1. 변경가능 횟수가 남아 있는 경우
            - <a href="#operation/GetMemberNickName">[GetMemberNickName]</a>의 결과값 중 changeable 이 true인경우
          2. 변경가능 횟수가 남아있지 않은 경우
            - 닉네임 변경은 아래의 순서로 진행 됩니다.
              1. 닉네임 변경 1회 아이템 구매(큐빅)
              2. 닉네임 변경
              3. 위 1의 아이템 사용 처리
            - 아이템 구매에 필요한 큐빅의 갯수는 <a href="#operation/GetMemberNickName">[GetMemberNickName]</a> 통해서 조회 가능 합니다.

        <font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 계정 닉네임 변경 자료
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/UpdateNickName'
      responses:
        200:
          description: 성공, 닉네임 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  nickName:
                    $ref: '#/components/schemas/properties/nickName'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/nickname/free:
    put:
      tags:
      - 회원 수정
      operationId: UpdateNickNameFree
      summary: 닉네임 수정(무료)
      description: |
        <b><font color="blue">#UpdateNickNameFree</font></b>
        <br />해당 계정의 닉네임 변경 처리 합니다.
        - 변경가능 횟수가 남아 있는 경우(<a href="#operation/GetMemberNickName">[GetMemberNickName]</a>의 결과값 중 changeable 이 true인경우)에 한하여 닉네임 변경을 처리합니다.

        <font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
      - $ref: '#/components/parameters/cookies/key'
      - $ref: '#/components/parameters/paths/svcKey'
      - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 계정 닉네임 변경 자료
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/UpdateNickName'
      responses:
        200:
          description: 성공, 닉네임 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  nickName:
                    $ref: '#/components/schemas/properties/nickName'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/cell-number-certify:
    put:
      tags:
      - 회원 수정
      operationId: UpdateCellNumberCertify
      summary: 전화번호 수정 인증번호 발송
      description: |
        <b><font color="blue">#UpdateCellNumberCertify</font></b>
        <br />입력받은 전화번호로 인증번호를 발송 합니다.
        <br />이 단계에서 "가입된 전화 번호"여부는 확인하지 않습니다.
        <br /><font color="red">참고사항</font>
        <br /><font color="red">- 인증번호는 "11111" 입니다.</font>
        <br /><font color="red">- 실제 SMS 발송은 SMS 서비스 도입 후 진행됩니다.</font>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1011 </td><td> LoginRequired </td><td> 로그인이 필요합니다 </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 사용할 수 없는 전화번호 입니다 </td></tr>
        <tr><td> Dx1011 </td><td> DBSignDataNotFound </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x1084 </td><td> SMSCertifySendLimitReached </td><td> 인증 요청 횟수가 초과되었습니다 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        description: 로컬계정 등록 단계 중 전화번호 인증 번호 발송을 위한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/CertifyCodeSend'
      responses:
        200:
          description: 성공, 최대 발송 가능 횟수, 현재 발송 횟수 반환 (SMS 발송 처리는 후에 진행)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/RegistLocalStepCellNumberResult'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/cell-number:
    put:
      tags:
      - 회원 수정
      operationId: UpdateCellNumber
      summary: 전화번호 수정
      description: |
        <b><font color="blue">#UpdateCellNumber</font></b>
        <br />해당 계정의 전화번호 변경 처리 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1011 </td><td> LoginRequired </td><td> 로그인이 필요합니다 </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 사용할 수 없는 전화번호 입니다 </td></tr>
        <tr><td> 0x1085 </td><td> SMSCertifyCodeNotExists </td><td> 인증 요청 정보가 없습니다 </td></tr>
        <tr><td> 0x1045 </td><td> SMSCertifyCodeExpired </td><td> 인증시간이 만료되었습니다 </td></tr>
        <tr><td> 0x1044 </td><td> SMSCertifyCodeNotMatched </td><td> 인증번호가 일치하지 않습니다 </td></tr>
        <tr><td> 0x1031 </td><td> ChangeValueIsSameAsBefore </td><td> 이전값과 동일한 전화번호 입니다 </td></tr>
        <tr><td> 0x1032 </td><td> ChangeLimitReached </td><td> 전화번호 변경 제한 횟수를 초과하였습니다 </td></tr>
        <tr><td> Dx1001 </td><td> DBMemberCellNumberAlreadyInUse </td><td> 사용할 수 없는 전화번호 입니다 </td></tr>
        <tr><td> Dx1011 </td><td> DBSignDataNotFound </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0201 </td><td> DBWrite </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0204 </td><td> DBWriteS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0205 </td><td> DBWriteS04 </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 계정 전화번호 변경 자료
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/UpdateCell'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/password:
    put:
      tags:
        - 회원 수정
      operationId: UpdatePassword
      summary: 비밀번호 수정
      description: |
        <b><font color="blue">#UpdatePassword</font></b>
        <br />해당 계정의 비밀번호를 변경 처리 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1011 </td><td> LoginRequired </td><td> 로그인이 필요합니다 </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 사용할 수 없는 비밀번호 입니다 </td></tr>
        <tr><td> 0x1070 </td><td> PasswordFormatInvalid </td><td> 사용할 수 없는 비밀번호 입니다 </td></tr>
        <tr><td> 0x1071 </td><td> PasswordChkValueNotMatched </td><td> 사용할 수 없는 비밀번호 입니다 </td></tr>
        <tr><td> 0x1001 </td><td> PasswordNotMatched </td><td> 현재 비밀번호와 일치하지 않습니다 </td></tr>
        <tr><td> Dx1011 </td><td> DBSignDataNotFound </td><td> 잘못된 처리 대상 입니다 </td></tr>
        <tr><td> 0x1074 </td><td> SNSUserNotPermit </td><td> 잘못된 처리 대상 입니다 </td></tr>
        <tr><td> Dx0201 </td><td> DBWrite </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 계정 비밀번호 변경 자료
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/UpdatePassword'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/certify:
    put:
      tags:
      - 회원 수정
      operationId: UpdateCertify
      summary: 본인인증 처리
      description: |
        <b><font color="blue">#UpdateCertify</font></b>
        <br />해당 계정의 본인인증 처리를 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
        <br /><font color="red">*테스트용입니다. 본인인증 & 성인 처리가 됩니다.</font>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1011 </td><td> LoginRequired </td><td> 로그인이 필요합니다 </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx1011 </td><td> DBSignDataNotFound </td><td> 잘못된 처리 대상 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 계정 비밀번호 변경 자료
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/UpdateCertify'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/tags:
    get:
      tags:
        - 회원 태그
      operationId: GetMemberTags
      summary: 태그 정보
      description: |
        <b><font color="blue">#GetMemberTags</font></b>
        <br />해당 계정의 Tag 정보를 반환합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      responses:
        200:
          description: 성공, 태그 정보 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  Tags:
                    $ref: '#/components/schemas/properties/Tag'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    put:
      tags:
        - 회원 태그
      operationId: SetMemberTags
      summary: 태그 수정
      description: |
        <b><font color="blue">#SetMemberTags</font></b>
        <br />해당 계정의 Tag 정보를 수정합니다.
        1. 최대 10개의 태그만 입력 가능 합니다.
        2. 태그당 최대 10자 까지 사용가능 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 업데이트할 태그 정보
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  type: string
                  description: |
                    태그 정보
                    <br />'|'를 구분 문자로 사용하는 문자열
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/questions:
    post:
      tags:
        - 회원 문의
      operationId: AddQuestion
      summary: 문의 등록
      description: |
        <b><font color="blue">#AddQuestion</font></b>
        <br />해당 계정으로 1:1 질문을 등록 합니다.

        1. multipart/form-data 형식으로 요청해야 합니다.

        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 1:1 질문 제목/내용
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/requests/QuestionAdd'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    get:
      tags:
        - 회원 문의
      operationId: GetQuestions
      summary: 문의 목록
      description: |
        <b><font color="blue">#GetQuestions</font></b>
        <br />해당 계정의 1:1 질문 목록을 반환 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
      responses:
        200:
          description: 성공, 질문 목록 전달
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/Questions'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/questions/{ixCode}:
    get:
      tags:
        - 회원 문의
      operationId: GetQuestion
      summary: 문의 정보
      description: |
        <b><font color="blue">#GetQuestion</font></b>
        <br />해당 계정의 1:1 질문 중 ixCode로 특정되는 질문 정보를 반환 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/paths/ixCode'
      responses:
        200:
          description: 성공, 1:1 질문 자료
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models/Question'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    delete:
      tags:
      - 회원 문의
      operationId: RemoveQuestion
      summary: 문의 삭제
      description: |
        <b><font color="blue">#RemoveQuestion</font></b>
        <br />해당 계정의 1:1 질문 중 ixCode로 특정되는 질문을 삭제합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/paths/ixCode'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/comments:
    get:
      tags:
        - 회원 댓글
      operationId: GetComments
      summary: 댓글 목록
      description: |
        <b><font color="blue">#GetComments</font></b>
        <br />해당 계정의 댓글 목록을 반환 합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
        - name: o_t
          in: query
          description: |
            <font color="blue">(o)rder (t)ype</font><br />
            출력 순서 구분값
            - newest - 최근순
            - oldest - 최근역순
          schema:
            type: string
            enum: ['newest', 'oldest']
            default: 'newest'
      responses:
        200:
          description: 성공, 댓글 목록 전달
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/Comments'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    post:
      tags:
        - 회원 댓글
      operationId: AddComment
      summary: 댓글 등록
      description: |
        <b><font color="blue">#AddComment</font></b>
        <br />해당 계정에 대해 댓글을 등록 합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 계정 댓글 등록 자료
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/AddComment'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/comments/{ixCode}:
    delete:
      tags:
        - 회원 댓글
      operationId: RemoveComment
      summary: 댓글 삭제
      description: |
        <b><font color="blue">#RemoveComment</font></b>
        <br />해당 계정의 댓글 중 ixCode로 특정되는 댓글 정보를 삭제 합니다.
        1. 댓글 작성자 또는 계정 소유자만 삭제가 가능합니다.
        2. 삭제시 아래와 같이 처리 됩니다.
          - 작성자 삭제시 목록에서 제외됩니다.
          - 계정 소유자 삭제시 목록에는 표시되나, 댓글 내용은 공백으로 반환합니다.
            <br />이때 isGradeDelete값은 true가 됩니다.
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/paths/ixCode'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/comments/{ixCode}/report:
    post:
      tags:
        - 회원 댓글
      operationId: ReportComment
      summary: 댓글 신고
      description: |
        <b><font color="blue">#ReportComment</font></b>
        <br />해당 계정의 댓글 중 ixCode로 특정되는 댓글을 신고처리 합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/paths/ixCode'
      requestBody:
        description: 신고 내용
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                #txtStr:
                #  type: string
                #  description: 신고 내용
                #  minLength: 1
                #  maxLength: 300
                reportType:
                  $ref: '#/components/schemas/properties/reportType'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/schedules/cases:
    post:
      tags:
        - 회원 스케줄
      operationId: AddMemberSchedule
      summary: 스케줄 등록
      description: |
        <b><font color="blue">#AddMemberSchedule</font></b>
        <br />회원의 방송 스케줄을 등록 합니다.
        1. 반복 설정 사용시 시작일 기준으로 3개월 기간동안 반복하게 됩니다.
        2. monthly 사용시 3개월 이내 기간 중 해당하는 일자가 없는 경우는 해당 월은 스케줄이 등록 되지 않습니다.
          <br />(29, 30, 31일의 경우 해당)

        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 스케줄 정보
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dtCode:
                  type: string
                  description: |
                    방송 일시(반복설정 사용시 방송 시작일)
                    <br />YYYYMMDDhhmm의 12자리 형식
                  minLength: 12
                  maxLength: 12
                content:
                  type: string
                  description: 방송 설명
                  maxLength: 300
                recurrence:
                  type: string
                  enum: ['none', 'daily', 'weekly', 'monthly']
                  default: 'none'
                  description: |
                    반복 설정 코드
                    - none: 미사용
                    - daily: 매일 반복
                    - weekly: 매주 반복
                    - monthly: 매월 반복
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    delete:
      tags:
        - 회원 스케줄
      operationId: RemoveMemberSchedules
      summary: 스케줄 목록 삭제
      description: |
        <b><font color="blue">#RemoveMemberSchedules</font></b>
        <br />ixCodes로 특정되는 회원의 방송 스케줄을 삭제 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ixCodes:
                  type: array
                  description: 삭제 대상 ixCode 배열
                  items:
                    type: number
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/schedules/cases/{ixCode}:
    get:
      tags:
        - 회원 스케줄
      operationId: GetMemberSchedule
      summary: 스케줄 정보
      description: |
        <b><font color="blue">#GetMemberSchedule</font></b>
        <br />ixCode로 특정되는 회원의 방송 스케줄 정보를 반환 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/paths/ixCode'
      responses:
        200:
          description: 성공, 방송 스케줄 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/MemberScheduleData'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    put:
      tags:
        - 회원 스케줄
      operationId: UpdateMemberSchedule
      summary: 스케줄 수정
      description: |
        <b><font color="blue">#UpdateMemberSchedule</font></b>
        <br />ixCode로 특정되는 회원의 방송 스케줄을 수정 합니다.
        <br />ixCode로 특정되는 스케줄이 현재 시점에서 지난 시간의 경우 "DxC002"오류를 반환 합니다.
        <br />ixCode로 특정되는 스케줄 포함, 이후 자료만 수정이 반영 됩니다.(includeRecurrence=true 인 경우)
        <br />hmCode값이 없는 경우, 시간 정보는 업데이트 하지 않습니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              required:
              - content
              properties:
                hmCode:
                  $ref: '#/components/schemas/properties/hmCode'
                content:
                  type: string
                  description: 방송 설명
                  maxLength: 300
                includeRecurrence:
                  type: boolean
                  default: false
                  description: |
                    묶음 스케줄 자료 전체 수정 처리(현재일시 이후 자료 한정)
      responses:
        200:
          description: 성공, 방송 스케줄 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/MemberScheduleSimpleData'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    delete:
      tags:
        - 회원 스케줄
      operationId: RemoveMemberSchedule
      summary: 스케줄 삭제
      description: |
        <b><font color="blue">#RemoveMemberSchedule</font></b>
        <br />ixCode로 특정되는 회원의 방송 스케줄을 삭제 합니다.
        <br />ixCode로 특정되는 스케줄이 현재 시점에서 지난 시간의 경우 "DxC002"오류를 반환 합니다.
        <br />ixCode로 특정되는 스케줄 포함, 이후 자료만 삭제 됩니다.(includeRecurrence=true 인 경우)
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/paths/ixCode'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                includeRecurrence:
                  type: boolean
                  default: false
                  description: |
                    묶음 스케줄 자료 전체 삭제 처리(현재일시 이후 자료 한정)
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/schedules/exists:
    get:
      tags:
        - 회원 스케줄
      operationId: GetMemberSchedulesExists
      summary: 스케줄 일자 목록
      description: |
        <b><font color="blue">#GetMemberSchedulesExists</font></b>
        <br />특정된 기간 동안의 회원의 방송 스케줄 존재 유무를 반홥 합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/s_sd'
        - $ref: '#/components/parameters/queries/s_ed'
#        - name: r_cl
#          in: query
#          description: |
#            <font color="blue">(r)equest (c)aster (l)ist</font><br />
#            r_cl 값이 1로 설정된 경우에만 casters 항목이 생성됩니다.
#            <br />이때, 지정된 기간 중 스케줄 등록한 방송자 정보 목록을 반환합니다.
#          schema:
#            type: number
#            enum: [0, 1]
#            default: 0
      responses:
        200:
          description: 성공, 방송 스케줄이 있는 일자 목록
          content:
            application/json:
              schema:
                type: object
                properties:
                  dates:
                    type: array
                    description: 스케줄 존재하는 일자, YYYYMMDD 형식
                    items:
                      type: string
#                  casters:
#                    type: array
#                    description: |
#                      기간동안 스케줄 등록한 방송자 목록
#                      <br /><font color="red">r_cl 값이 1인 경우에만 생성됩니다.</font>
#                    items:
#                      $ref: '#/components/schemas/responses/schemas/ScheduleCaster'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/schedules/exists-with-count:
    get:
      tags:
      - 회원 스케줄
      operationId: GetMemberSchedulesExistsWithCount
      summary: 스케줄 일자 목록(카운팅)
      description: |
        <b><font color="blue">#GetMemberSchedulesExists</font></b>
        <br />특정된 기간 동안의 회원의 방송 스케줄 존재 유무 및 해당 일자의 총 카운트값를 반홥 합니다.
      parameters:
      - $ref: '#/components/parameters/cookies/keyAny'
      - $ref: '#/components/parameters/paths/locale'
      - $ref: '#/components/parameters/paths/svcKey'
      - $ref: '#/components/parameters/paths/memKey'
      - $ref: '#/components/parameters/queries/s_sd'
      - $ref: '#/components/parameters/queries/s_ed'
      responses:
        200:
          description: 성공, 방송 스케줄이 있는 일자 및 갯수 목록
          content:
            application/json:
              schema:
                type: object
                properties:
                  dates:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          description: 스케줄 존재하는 일자, YYYYMMDD 형식
                        cnt:
                          type: number
                          description: 해당 일자의 총 스케줄 갯수
                          default: 0
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/schedules/daily/{year}/{month}/{day}:
    get:
      tags:
        - 회원 스케줄
      operationId: GetMemberSchedulesDaily
      summary: 스케줄 내역
      description: |
        <b><font color="blue">#GetMemberSchedulesDaily</font></b>
        <br />특정된 일자의 방송 스케줄 내역을 반환 합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/paths/year'
        - $ref: '#/components/parameters/paths/month'
        - $ref: '#/components/parameters/paths/day'
      responses:
        200:
          description: 성공, 방송 스케줄 목록
          content:
            application/json:
              schema:
                type: object
                properties:
                  schedules:
                    type: array
                    description: 방송 스케줄 목록
                    items:
                      $ref: '#/components/schemas/responses/schemas/MemberScheduleData'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/achieves:
    get:
      tags:
        - 회원 업적
      operationId: GetAchieveSummary
      summary: 업적 요약
      description: |
        <b><font color="blue">#GetAchieveSummary</font></b>
        <br />회원의 현재 업적 진행 요약 정보를 반환 합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      responses:
        200:
          description: 성공, 업적 요약 정보 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  achieves:
                    type: array
                    items:
                      type: object
                      properties:
                        missionCode:
                          $ref: '#/components/schemas/properties/missionCode'
                        groupCode:
                          $ref: '#/components/schemas/properties/groupCode'
                        missionStep:
                          $ref: '#/components/schemas/properties/missionStep'
                        goal:
                          type: number
                          description: 달성 목표치
                        current:
                          type: number
                          description: 현재 달성치
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/achieves/{groupCode}:
    get:
      tags:
        - 회원 업적
      operationId: GetAchieveMissions
      summary: 업적 그룹별 요약
      description: |
        <b><font color="blue">#GetAchieveMissions</font></b>
        <br />업적 카테고리 목록을 반환 합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/paths/groupCode'
      responses:
        200:
          description: 성공, 업적 카테고리 목록 전달
          content:
            application/json:
              schema:
                type: object
                properties:
                  current:
                    type: string
                    description: |
                      해당 그룹에 대한 현재 진행값

                      1. groupCode에 따라 아래와 같이 결과값을 반환합니다.
                        - groupCode=0: 본인인증
                          - 0: 미인증
                          - 1: 인증
                        - groupCode=1: 좋아요 전송 갯수
                        - groupCode=3: 후원갯수
                        - groupCode=4: 팬레벨 달성 숫자
                        - groupCode=5: 회원레벨 달성 숫자
                        - groupCode=6: 접속일 숫자
                        - groupCode=7: 방송시간(시간 단위) 숫자
                        - groupCode=8: 좋아요 수신 갯수
                        - groupCode=9: 팬수
                        - groupCode=10: 동시 시청자수
                  achieves:
                    type: array
                    items:
                      type: object
                      properties:
                        missionCode:
                          $ref: '#/components/schemas/properties/missionCode'
                        groupCode:
                          $ref: '#/components/schemas/properties/groupCode'
                        missionStep:
                          $ref: '#/components/schemas/properties/missionStep'
                        goal:
                          type: number
                          description: missionStep별 달성 목표치
                        isComplete:
                          $ref: '#/components/schemas/properties/isComplete'
                        isReward:
                          $ref: '#/components/schemas/properties/isReward'
                        #current:
                        #  type: number
                        #  description: 현재 달성치
                        rewards:
                          type: array
                          items:
                            type: object
                            properties:
                              rwdType:
                                type: number
                                enum: [0, 1, 2, 3]
                                description: |
                                  보상 형태
                                  - 0: 시스템 설정 보상
                                  - 1: 아이템 지급 보상
                                  - 2: 코인(루비) 지급 보상
                                  - 3: 코인(큐빅) 지급 보상
                              rwdValue:
                                type: string
                                description: |
                                  보상 종류
                              rwdCnt:
                                type: number
                                description: 보상 형태/종류에 대한 지급 갯수
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/achieves/{groupCode}/{missionStep}:
    post:
      tags:
        - 회원 업적
      operationId: AddAchieveRewards
      summary: 업적 미션 보상 요청
      description: |
        <b><font color="blue">#AddAchieveRewards</font></b>
        <br />groupCode와 missionStep으로 특정되는 업적 미션에 대한 완료 보상 지급 요청을 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/paths/groupCode'
        - $ref: '#/components/parameters/paths/missionStep'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/followers:
    get:
      tags:
        - 회원 팔로우
      operationId: GetFollowers
      summary: 팔로워 목록
      description: |
        <b><font color="blue">#GetFollowers</font></b>
        <br />해당 계정의 팔로워 목록을 반환 합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
        - $ref: '#/components/parameters/queries/s_t_nickonly'
        - $ref: '#/components/parameters/queries/s_q'
      responses:
        200:
          description: 성공, 팔로워 목록 전달
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/Followers'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/clips:
    get:
      tags:
        - 회원 클립
      operationId: GetMemberClips
      summary: 클립 목록
      description: |
        <b><font color="blue">#GetMemberClips</font></b>
        <br />클립 영상 목록 반환
        <br />요청자가 로그인 상태 & 자기 클립 목록을 요청하는 경우 다음의 정보를 추가로 전달합니다.
          - isOpen: 클립영상 표시여부
          - isBlock: 운영자에 의한 블럭 처리 여부
          - blockMemo: 운영자에 의한 블럭 처리 사유
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
        - $ref: '#/components/parameters/queries/o_t'
      responses:
        200:
          description: 성공, 클립영상 목록
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/responses/schemas/Clips'
                  - $ref: '#/components/schemas/responses/schemas/ClipsOwner'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    post:
      tags:
        - 회원 클립
      operationId: AddMemberClip
      summary: 클립 등록
      description: |
        <b><font color="blue">#AddMemberClip</font></b>
        <br />클립 영상 등록 요청
        1. multipart/form-data 형식으로 요청해야 합니다.
        2. attach 항목이 없는 경우, 링크 입력을 받는 걸로 간주 합니다.
          - 이때, clipFilePath에 링크 주소를 입력합니다.
          - 링크 주소는 현재 아래의 경로만 사용가능 합니다.
            - https://youtu.be/{id}
            - https://www.youtube.com/watch?v={id}
          - 썸네일은 해당 서비스업체가 제공하는 썸네일을 사용합니다.
        3. attach 항목이 있는 경우 clipFilePath값은 불필요 합니다.
          - mp4 확장자만 사용가능 합니다.
          - 이때, 허용 용량은 100MByte입니다.
          - 업로드된 영상의 1초후 첫 프레임이 썸네일로 사용됩니다.
        4. 등록된 클립은 바로 확인이 가능합니다.
        5. 후에 관리자에 의해 블럭 처리가 될 수 있습니다.
          - 블럭된 영상 여부는 본인 채널에서 확인 가능 합니다.

        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: string
                  description: |
                    - 아래의 형식의 json 문자열을 암호화 처리한 문자열
                      - 링크 주소 사용하는 경우(첨부파일 사용X)
                        <br />{
                        <br />&nbsp;&nbsp;&nbsp;&nbsp;"clipTitle": "",
                        <br />&nbsp;&nbsp;&nbsp;&nbsp;"clipFilePath": ""
                        <br />&nbsp;&nbsp;&nbsp;&nbsp;"Tag": ""
                        <br />&nbsp;&nbsp;&nbsp;&nbsp;"isAdult": 0|1
                        <br />}
                      - 첨부파일 사용하는 경우
                        <br />{
                        <br />&nbsp;&nbsp;&nbsp;&nbsp;"clipTitle": "",
                        <br />&nbsp;&nbsp;&nbsp;&nbsp;"Tag": ""
                        <br />&nbsp;&nbsp;&nbsp;&nbsp;"isAdult": 0|1
                        <br />}
                    - 각 항목별 설명
                      - clipTitle: 클립 제목, 문자형, 100글자 이내 제한
                      - clipFilePath: 클립 영상 주소, 문자형, 500자 이내
                      - Tag: 태그, 문자형, '|'문자를 구분자로 하는 문자열로 3000자 이내
                        <br />아래의 제한이 있습니다.
                        1. 태그당 10글자 까지만 허용
                        2. 총 10개의 태그만 허용
                      - isAdult: 19세 미만 시청 제한 여부, 숫자형
                        - 0: 제한 없음
                        - 1: 19세 미만 시청 제한 있음
                attach:
                  type: string
                  format: binary
                  description: 첨부파일, 용량 100MByte 이하만 허용
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    delete:
      tags:
      - 회원 클립
      operationId: RemoveMemberClips
      summary: 클립 삭제(복수)
      description: |
        <b><font color="blue">#RemoveMemberClips</font></b>
        <br />request body에 지정된 ixCodes에 대한 클립 영상 삭제 요청
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
      - $ref: '#/components/parameters/cookies/key'
      - $ref: '#/components/parameters/paths/locale'
      - $ref: '#/components/parameters/paths/svcKey'
      - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ixCodes:
                  type: array
                  description: 해제 대상 ixCode 배열
                  items:
                    type: number
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/clips/{ixCode}:
    delete:
      tags:
        - 회원 클립
      operationId: RemoveMemberClip
      summary: 클립 삭제
      description: |
        <b><font color="blue">#RemoveMemberClip</font></b>
        <br />클립 영상 삭제 요청
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
      - $ref: '#/components/parameters/cookies/key'
      - $ref: '#/components/parameters/paths/locale'
      - $ref: '#/components/parameters/paths/svcKey'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/followings:
    get:
      tags:
        - 회원 팔로우
      operationId: GetFollowings
      summary: 팔로잉 목록
      description: |
        <b><font color="blue">#GetFollowings</font></b>
        <br />해당 계정의 팔로잉 목록을 반환 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
        - name: r_onair
          in: query
          description: |
            <font color="blue">(r)equest (onair)</font><br />
            r_onair 값이 1로 설정된 경우, 현재 방송중인 방송자 목록에 한정하여 조회합니다.
            <br />(since v0.6.46)
          schema:
            type: number
            enum: [0, 1]
            default: 0
        - $ref: '#/components/parameters/queries/s_t_nickonly'
        - $ref: '#/components/parameters/queries/s_q'
        - name: r_i
          in: query
          description: |
            <font color="blue">(r)equest (i)nfo</font><br />
            반환 요청값
            - tag: Tag 반환값 요청
            - castlv: castLevel 반환값 요청
          example:
            r_i[]=tag&r_i[]=castlv
          schema:
            type: array
            items:
              type: string
              enum: [tag, castlv]
      responses:
        200:
          description: 성공, 팔로잉 목록 전달
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/Followings'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    post:
      tags:
        - 회원 팔로우
      operationId: AddFollowing
      summary: 팔로잉 등록
      description: |
        <b><font color="blue">#AddFollowing</font></b>
        <br />request body에 지정된 memKey 회원을 팔로잉 하도록 처리합니다.
        - castDTCode 값의 유무에 따라 아래와 같이 동작 합니다.
          - castDTCode 있는 경우:
            <br />방송 화면에서 팔로잉 처리. 채팅에 메시지 전달
          - castDTCode 없는 경우:
            <br />일반 팔로잉 처리. 채팅에 메시지 전달 안함

        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
        <br />-------------------------------------
        <br />castDTCode 지정시, 방송중 팔로잉 처리로 간주하며 아래와 같이 클라이언트에게 이벤트가 발생합니다.
        <br />-------------------------------------
        - CHANNEL_EVENT.SERVICE_MESSAGE_RECEIVED 이벤트 발생
        <br />Message 객체 반환 하며,
        <br />getData():String 을 통해 "G|{nickName}" 형식으로 수신됩니다.
        - CHANNEL_EVENT.COUNT_UPDATED 이벤트 발생
        <br />ChannelCounter 객체 반환 하며,
        <br />getvalue("G"):int 로 변경된 전체 follow 갯수 확인 합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    memKey:
                      $ref: '#/components/schemas/properties/followingMemKey'
                - $ref: '#/components/schemas/requests/castDTCode'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    delete:
      tags:
        - 회원 팔로우
      operationId: RemoveFollowings
      summary: 팔로잉 해제(복수)
      description: |
        <b><font color="blue">#RemoveFollowings</font></b>
        <br />request body에 지정된 targetMemKeys 회원들에 대한 팔로잉을 취소합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetMemKeys:
                  type: array
                  description: 해제 대상 memKey 배열
                  items:
                    type: number
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/followings/{targetMemKey}:
    delete:
      tags:
        - 회원 팔로우
      operationId: RemoveFollowing
      summary: 팔로잉 해제
      description: |
        <b><font color="blue">#RemoveFollowing</font></b>
        <br />targetMemKey에 지정된 memKey 회원에 대한 팔로잉을 취소합니다.
        <br />body에 castDTCode 값을 포함 하는 경우 채팅서버를 통해 following 갯수를 -1 처리 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/paths/targetMemKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                castDTCode:
                  $ref: '#/components/schemas/properties/castDTCode'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/followings/{followingMemKey}/push/{state}:
    put:
      tags:
        - 회원 팔로우
      operationId: UpdateFollowingsPush
      summary: 팔로잉 푸시 수신 설정
      description: |
        <b><font color="blue">#UpdateFollowingsPush</font></b>
        <br />해당 팔로잉 대상에 대한 푸시 수신 여부 설정
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1011 </td><td> LoginRequired </td><td> 로그인이 필요합니다 </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2060 </td><td> ParamTargetNotExists </td><td> 잘못된 처리 대상 입니다 </td></tr>
        <tr><td> Dx1031 </td><td> DBTargetMemKeyNotExists </td><td> 잘못된 처리 대상 입니다 </td></tr>
        <tr><td> Dx0201 </td><td> DBWrite </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/paths/followingMemKey'
        - $ref: '#/components/parameters/paths/stateBool'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/fans:
    get:
      tags:
        - 회원 팬
      operationId: GetFans
      summary: 팬 목록(일반/검색)
      description: |
        <b><font color="blue">#GetFans</font></b>
        <br />해당 계정의 팬목록을 반환 합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
        - $ref: '#/components/parameters/queries/s_t_nickonly'
        - $ref: '#/components/parameters/queries/s_q'
        - name: r_i
          in: query
          description: |
            <font color="blue">(r)equest (i)nfo</font><br />
            반환 요청값
            - tag: Tag 반환값 요청
            - memlv: memLevel 반환값 요청
            - viplv: vipLevel 반환값 요청
            - castlv: castLevel 반환값 요청
          example:
            r_i[]=tag&r_i[]=memlv&r_i[]=viplv&r_i[]=castlv
          schema:
            type: array
            items:
              type: string
              enum: [tag, memlv, viplv, castlv]
        - o_t:
          name: o_t
          in: query
          description: |
            <font color="blue">(o)rder (t)ype</font><br />
            출력 순서 구분값
              - highest : 순위 높은순
              - lowest : 순위 낮은순
          schema:
            type: string
            enum: ['highest', 'lowest']
            default: 'highest'
      responses:
        200:
          description: 성공, 팬목록 전달
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/Fans'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/fans/joined:
    get:
      tags:
        - 회원 팬
      operationId: GetJoinedFans
      summary: 가입된 팬 목록(일반/검색)
      description: |
        <b><font color="blue">#GetJoinedFans</font></b>
        <br />해당 계정이 가입된 팬목록을 반환 합니다.
      parameters:
      - $ref: '#/components/parameters/cookies/keyAny'
      - $ref: '#/components/parameters/paths/locale'
      - $ref: '#/components/parameters/paths/svcKey'
      - $ref: '#/components/parameters/paths/memKey'
      - $ref: '#/components/parameters/queries/p'
      - $ref: '#/components/parameters/queries/pl'
      - $ref: '#/components/parameters/queries/r_tc'
      - $ref: '#/components/parameters/queries/s_t_nickonly'
      - $ref: '#/components/parameters/queries/s_q'
      - name: r_i
        in: query
        description: |
          <font color="blue">(r)equest (i)nfo</font><br />
          반환 요청값
          - tag: Tag 반환값 요청
          - memlv: memLevel 반환값 요청
          - viplv: vipLevel 반환값 요청
          - castlv: castLevel 반환값 요청
        example:
          r_i[]=tag&r_i[]=memlv&r_i[]=viplv&r_i[]=castlv
        schema:
          type: array
          items:
            type: string
            enum: [tag, memlv, viplv, castlv]
      - o_t:
        name: o_t
        in: query
        description: |
          <font color="blue">(o)rder (t)ype</font><br />
          출력 순서 구분값
            - highest : 순위 높은순
            - lowest : 순위 낮은순
        schema:
          type: string
          enum: ['highest', 'lowest']
          default: 'highest'
      responses:
        200:
          description: 성공, 가입된 팬목록 전달
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/Fans'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/fans/tops/{count}:
    get:
      tags:
        - 회원 팬
      operationId: GetTopFans
      summary: 팬 목록(TOP)
      description: |
        <b><font color="blue">#GetTopFans</font></b>
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
        - $ref: '#/components/parameters/queries/s_t_nickonly'
        - $ref: '#/components/parameters/queries/s_q'
        - name: count
          in: path
          description: |
            fan ranking 기준 반환을 요청하는 갯수 지정
          schema:
            type: number
            default: 100
            minimum: 1
            maximum: 100
        - name: r_i
          in: query
          description: |
            <font color="blue">(r)equest (i)nfo</font><br />
            반환 요청값
            - tag: Tag 반환값 요청
            - memlv: memLevel 반환값 요청
            - viplv: vipLevel 반환값 요청
            - castlv: castLevel 반환값 요청
          example:
            r_i[]=tag&r_i[]=memlv&r_i[]=viplv&r_i[]=castlv
          schema:
            type: array
            items:
              type: string
              enum: [tag, memlv, viplv, castlv]
      responses:
        200:
          description: 성공, 팬목록 전달
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/Fans'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/fans/levels/{fanLevel}:
    get:
      tags:
        - 회원 팬
      operationId: GetLevelFans
      summary: 팬 목록(팬레벨 별)
      description: |
        <b><font color="blue">#GetLevelFans</font></b>
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
        - $ref: '#/components/parameters/queries/s_t_nickonly'
        - $ref: '#/components/parameters/queries/s_q'
        - name: fanLevel
          in: path
          description: |
            반환을 원하는 팬 레벨 지정
          schema:
            type: number
            enum: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        - name: r_i
          in: query
          description: |
            <font color="blue">(r)equest (i)nfo</font><br />
            반환 요청값
            - tag: Tag 반환값 요청
            - memlv: memLevel 반환값 요청
            - viplv: vipLevel 반환값 요청
            - castlv: castLevel 반환값 요청
          example:
            r_i[]=tag&r_i[]=memlv&r_i[]=viplv&r_i[]=castlv
          schema:
            type: array
            items:
              type: string
              enum: [tag, memlv, viplv, castlv]
      responses:
        200:
          description: 성공, 팬목록 전달
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/Fans'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/supporters:
    get:
      tags:
        - 회원 서포터
      operationId: GetSupporters
      summary: 서포터 목록
      description: |
        <b><font color="blue">#GetSupporters</font></b>
        <br />해당 계정의 서포터 목록을 반환 합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
        - o_t:
          name: o_t
          in: query
          description: |
            <font color="blue">(o)rder (t)ype</font><br />
            출력 순서 구분값
              - newest : 서포터 가입일 최신순
              - oldest : 서포터 가입일 최신역순
          schema:
            type: string
            enum: ['newest', 'oldest']
            default: 'newest'
      responses:
        200:
          description: 성공, 서포터 목록 전달
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/Supporters'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    post:
      tags:
        - 회원 서포터
      operationId: JoinSupporter
      summary: 서포터 가입
      description: |
        <b><font color="blue">#JoinSupporter</font></b>
        <br />해당 계정에 대해 서포터로 가입합니다.

        <br />-------------------------------------
        <br />castDTCode 지정시, 방송중 서포터 가입 처리로 간주하며 아래와 같이 클라이언트에게 이벤트가 발생합니다.
        <br />-------------------------------------
        - CHANNEL_EVENT.SERVICE_MESSAGE_RECEIVED 이벤트 발생
        <br />Message 객체 반환 하며,
        <br />getData():String 을 통해 "H|{가입개월수}|{nickName}" 형식으로 수신됩니다.
        - CHANNEL_EVENT.COUNT_UPDATED 이벤트 발생
        <br />ChannelCounter 객체 반환 하며,
        <br />getvalue("E"):int 로 변경된 전체 코인 선물 갯수 확인 합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - month
                - exeCode
              properties:
                month:
                  type: number
                  enum: [1, 3, 6]
                  description: 서포터 가입 기간(월단위)
                exeCode:
                  $ref: '#/components/schemas/properties/exeCode'
                castDTCode:
                  type: string
                  description: 방송코드, 방송중 서포터 가입시 사용
      responses:
        200:
          description: 성공, 서포터 가입 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      memKey:
                        $ref: '#/components/schemas/properties/memKey'
                      nickName:
                        $ref: '#/components/schemas/properties/nickName'
                      profileImg:
                        $ref: '#/components/schemas/properties/profileImg'
                      #castLevel:
                      #  $ref: '#/components/schemas/properties/castLevel'
                  support:
                    type: object
                    properties:
                      month:
                        type: number
                        enum: [1, 3, 6]
                        description: 서포터 가입 기간(월단위)
                      startDate:
                        type: string
                        description: 서포터 가입일시, YYYY-MM-DD hh:mm:ss.zzz
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/supporters/{targetMemKey}:
    get:
      tags:
        - 회원 서포터
      operationId: GetSupporter
      summary: 서포터 가입 정보
      description: |
        <b><font color="blue">#GetSupporter</font></b>
        <br />해당 계정에 대한 targetMemKey로 특정된 계정의 서포터 가입 정보를 반환합니다.
        <br /><font color="red">*targetMemKey로 특정되는 계정이 회원 본인의 계정인 경우만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/paths/targetMemKey'
      responses:
        200:
          description: 성공, 서포터 가입 정보 전달
          content:
            application/json:
              schema:
                type: object
                properties:
                  support:
                    type: object
                    properties:
                      exists:
                        type: boolean
                        default: false
                        description: 가입여부
                      month:
                        type: number|null
                        default: null
                        description: 가입 기간(월단위)
                      startDate:
                        type: string|null
                        default: null
                        description: 시작일, YYYY-MM-DD hh:mm:ss.zzz
                  user:
                    type: object
                    properties:
                      coin:
                        type: number
                        description: 현재 소유중인 코인(루비) 갯수
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        month:
                          type: number
                          enum: [3, 6, 9]
                          description: 서포터 가입기간(월단위)
                        coin:
                          type: number
                          enum: [300, 600, 900]
                          description: 가입시 필요한 코인(루비) 갯수
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/managers:
    get:
      tags:
        - 회원 매니저
      operationId: GetManagers
      summary: 매니저 목록
      description: |
        <b><font color="blue">#GetManagers</font></b>
        <br />해당 계정의 매니저 목록을 반환 합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
      responses:
        200:
          description: 성공, 매니저 목록 전달
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/Managers'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    post:
      tags:
        - 회원 매니저
      operationId: AddManager
      summary: 매니저 등록
      description: |
        <b><font color="blue">#AddManager</font></b>
        <br />해당 계정의 매니저 목록을 추가 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 추가 대상 memKey값
        required: true
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  memKey:
                    $ref: '#/components/schemas/properties/targetMemKey'
              - $ref: '#/components/schemas/requests/memKey'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    delete:
      tags:
      - 회원 매니저
      operationId: RemoveManagers
      summary: 매니저 해제(복수)
      description: |
        <b><font color="blue">#RemoveManagers</font></b>
        <br />request body에 지정된 targetMemKeys 회원들에 대한 팔로잉을 취소합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
      - $ref: '#/components/parameters/cookies/key'
      - $ref: '#/components/parameters/paths/locale'
      - $ref: '#/components/parameters/paths/svcKey'
      - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetMemKeys:
                  type: array
                  description: 해제 대상 memKey 배열
                  items:
                    type: number
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/managers/{targetMemKey}:
    delete:
      tags:
        - 회원 매니저
      operationId: RemoveManager
      summary: 매니저 해제
      description: |
        <b><font color="blue">#RemoveManager</font></b>
        <br />해당 계정의 매니저 목록을 추가 합니다.
        <br />방송 화면에서 호출하는 경우에 한하여 castDTCode를 사용 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/paths/targetMemKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
              - type: object
              - $ref: '#/components/schemas/requests/castDTCodeOnly'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/blocks:
    get:
      tags:
        - 회원 차단
      operationId: GetBlocks
      summary: 차단 목록
      description: |
        <b><font color="blue">#GetBlocks</font></b>
        <br />해당 계정의 차단 목록을 반환 합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
      responses:
        200:
          description: 성공, 차단 목록 전달
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/Blocks'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    post:
      tags:
        - 회원 차단
      operationId: AddBlock
      summary: 차단 등록
      description: |
        <b><font color="blue">#AddBlock</font></b>
        <br />해당 계정의 차단 목록중 memKey로 특정되는 자료를 추가 합니다.
        1. 요청값에 castDTCode가 등록된 경우
          - 방송중 차단으로 간주하여, 채팅에서 강퇴 처리 되도록 합니다.
          - 동작 순서는 차단자로 등록 완료 후 강퇴 처리가 됩니다.

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1011 </td><td> LoginRequired </td><td> 로그인이 필요합니다 </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 사용할 수 없는 고유번호 입니다 </td></tr>
        <tr><td> 0x2060 </td><td> ParamTargetNotExists </td><td> 잘못된 처리 대상 입니다 </td></tr>
        <tr><td> 0x2061 </td><td> ParamSourceNotExists </td><td> 잘못된 처리 대상 입니다 </td></tr>
        <tr><td> Dx1009 </td><td> DBMemKeyNotExists </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x5024 </td><td> WatchBlockAlreadyExists </td><td> 이미 차단된 대상 입니다. </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 추가 대상 memKey값
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - memKey
              properties:
                memKey:
                  $ref: '#/components/schemas/properties/memKey'
                castDTCode:
                  $ref: '#/components/schemas/properties/castDTCode'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    delete:
      tags:
        - 회원 차단
      operationId: RemoveBlocks
      summary: 차단 해제(복수)
      description: |
        <b><font color="blue">#RemoveBlocks</font></b>
        <br />request body에 지정된 targetMemKeys 회원들에 대한 시청차단을 해제합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetMemKeys:
                  type: array
                  description: 해제 대상 memKey 배열
                  items:
                    type: number
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/blocks/{targetMemKey}:
    delete:
      tags:
        - 회원 차단
      operationId: RemoveBlock
      summary: 차단 해제
      description: |
        <b><font color="blue">#RemoveBlock</font></b>
        <br />해당 계정의 차단 목록중 memKey로 특정되는 자료는 삭제 합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/paths/targetMemKey'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/purchases/coins:
    get:
      tags:
        - 회원 코인
      operationId: GetPurchasedCoins
      summary: 루비 구매 내역
      description: |
        <b><font color="blue">#GetPurchasedCoins</font></b>
        <br />구매한 코인 목록을 반환 합니다.(최근 6개월 이내)
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
      responses:
        200:
          description: 성공, 루비 구매 목록 전달
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/purchasedCoins'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/coins:
    get:
      tags:
        - 회원 코인
      operationId: GetUsedCoins
      summary: 루비 후원 내역
      description: |
        <b><font color="blue">#GetUsedCoins</font></b>
        <br />루비로 후원한 목록을 반환 합니다.(최근 6개월 이내)
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
      responses:
        200:
          description: 성공, 루비 후원 목록 전달
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/usedCoins'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/coins/message:
    post:
      tags:
        - 회원 코인
      operationId: SendMessageCoin
      summary: 루비 후원(온/오프라인 메시지)
      description: |
        <b><font color="blue">#SendMessageCoin</font></b>
        <br />루비 후원 처리 - 오프라인/댓글 등록

        1. castDTCode 요청값이 있는 경우, 해당 방송에 후원 메시지를 전송합니다.

        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2051 </td><td> ParamUnsupportedExeCode </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> Dx1031 </td><td> DBTargetMemKeyNotExists </td><td> 잘못된 처리 대상 입니다 </td></tr>
        <tr><td> 0x1090 </td><td> CoinInsufficient </td><td> 남은 코인이 부족합니다 </td></tr>
        <tr><td> 0x2066 </td><td> ParamHasVulgarWord </td><td> 사용할 수 없는 메시지 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0305 </td><td> DBReadS04 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0201 </td><td> DBWrite </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0901 </td><td> DBTran </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - memKey
                - txtStr
                - coinValue
                - exeCode
              properties:
                memKey:
                  $ref: '#/components/schemas/properties/memKey'
                txtStr:
                  type: string
                  description: 전달할 메시지
                  minLength: 1
                  maxLength: 300
                coinSkin:
                  $ref: '#/components/schemas/properties/coinSkin'
                coinValue:
                  $ref: '#/components/schemas/properties/coinValueAdd'
                exeCode:
                  $ref: '#/components/schemas/properties/exeCode'
                castDTCode:
                  $ref: '#/components/schemas/properties/castDTCode'
      responses:
        200:
          description: 성공, 루비 후원 결과 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  memKey:
                    $ref: '#/components/schemas/properties/targetMemKey'
                  nickName:
                    $ref: '#/components/schemas/properties/nickName'
                  profileImg:
                    $ref: '#/components/schemas/properties/profileImg'
                  coinSkin:
                    $ref: '#/components/schemas/properties/coinSkin'
                  coinValue:
                    $ref: '#/components/schemas/properties/coinValueAdd'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/coins/mission:
    post:
      tags:
      - 회원 코인
      operationId: SendMissionCoin
      summary: 루비 후원(미션)
      description: |
        <b><font color="blue">#SendMissionCoin</font></b>
        <br />루비 후원 처리 - 미션 선택에 의한 후원

        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2051 </td><td> ParamUnsupportedExeCode </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> Dx1031 </td><td> DBTargetMemKeyNotExists </td><td> 잘못된 처리 대상 입니다 </td></tr>
        <tr><td> 0x1090 </td><td> CoinInsufficient </td><td> 남은 코인이 부족합니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0305 </td><td> DBReadS04 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0201 </td><td> DBWrite </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0901 </td><td> DBTran </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
      - $ref: '#/components/parameters/cookies/key'
      - $ref: '#/components/parameters/paths/locale'
      - $ref: '#/components/parameters/paths/svcKey'
      - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - memKey
              - ixCode
              - exeCode
              properties:
                memKey:
                  $ref: '#/components/schemas/properties/memKey'
                ixCode:
                  type: number
                  description: 해당 미션의 ixCode값
                exeCode:
                  $ref: '#/components/schemas/properties/exeCode'
      responses:
        200:
          description: 성공, 루비 후원 결과 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  memKey:
                    $ref: '#/components/schemas/properties/targetMemKey'
                  nickName:
                    $ref: '#/components/schemas/properties/nickName'
                  profileImg:
                    $ref: '#/components/schemas/properties/profileImg'
                  coinValue:
                    $ref: '#/components/schemas/properties/coinValueAdd'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/coins/cast:
    post:
      tags:
        - 회원 코인
      operationId: SendCastCoin
      summary: 루비 후원(온라인)
      description: |
        <b><font color="blue">#SendCastCoin</font></b>
        <br />루비 후원 처리 - 온라인
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2004 </td><td> ParamRequiredValueIsNullOrEmpty </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2051 </td><td> ParamUnsupportedExeCode </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> Dx1031 </td><td> DBTargetMemKeyNotExists </td><td> 잘못된 처리 대상 입니다 </td></tr>
        <tr><td> 0x1090 </td><td> CoinInsufficient </td><td> 남은 코인이 부족합니다 </td></tr>
        <tr><td> 0x2066 </td><td> ParamHasVulgarWord </td><td> 사용할 수 없는 메시지 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0305 </td><td> DBReadS04 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0201 </td><td> DBWrite </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0901 </td><td> DBTran </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
      - $ref: '#/components/parameters/cookies/key'
      - $ref: '#/components/parameters/paths/locale'
      - $ref: '#/components/parameters/paths/svcKey'
      - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - memKey
                - coinSkin
                - coinValue
                - exeCode
              properties:
                memKey:
                  $ref: '#/components/schemas/properties/memKey'
                coinSkin:
                  $ref: '#/components/schemas/properties/coinSkin'
                coinValue:
                  $ref: '#/components/schemas/properties/coinValueAdd'
                exeCode:
                  $ref: '#/components/schemas/properties/exeCode'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/receives/coins:
    get:
      tags:
      - 회원 코인
      operationId: GetReceivedCoins
      summary: 루비 후원받은 내역
      description: |
        <b><font color="blue">#GetReceivedCoins</font></b>
        <br />후원받은 루비 목록을 반환 합니다.(정산되지 않은 목록)
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>

        1. r_i의 입력값에 따라 반환값이 변경됩니다.
          - r_i[]=info 의 경우 아래의 값이 추가 됩니다.
            - info
              - exPer: 정산율
              - exAmount: 정산보유금액
              - exAmountSum: 총수익금액
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
        - $ref: '#/components/parameters/queries/s_sd'
        - $ref: '#/components/parameters/queries/s_ed'
        - name: r_i
          in: query
          description: |
            <font color="blue">(r)equest (i)nfo</font><br />
            반환 요청값
            - sum: 후원받은 루비 총 갯수 반환
              <br />반환값은 sum: 0
          example:
            r_i[]=sum
          schema:
            type: array
            items:
              type: string
              enum: [sum]
      responses:
        200:
          description: 성공, 루비 후원 목록 전달
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/receivedCoins'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/purchases/cubics:
    get:
      tags:
        - 회원 코인
      operationId: GetPurchasedCubics
      summary: 큐빅 구매 내역
      description: |
        <b><font color="blue">#GetPurchasedCubics</font></b>
        <br />구매한 큐빅 목록을 반환 합니다.(최근 6개월 이내)
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
      responses:
        200:
          description: 성공, 큐빅 구매 목록 전달
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/purchasedCubics'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/cubics:
    get:
      tags:
      - 회원 코인
      operationId: GetUsedCubics
      summary: 큐빅 사용 내역
      description: |
        <b><font color="blue">#GetUsedCubics</font></b>
        <br />사용한 큐빅 목록을 반환 합니다.(최근 6개월 이내)
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>

        1. coinUseType 값이 5(아이템 선물)가 아닌 경우, memKey, nickName 값은 null을 가집니다.
        2. memKey, nickName 값은 선물한 상대의 정보를 가집니다.
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
      responses:
        200:
          description: 성공, 큐빅 사용 목록 전달
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/usedCubics'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/items:
    get:
      tags:
        - 회원 아이템
      operationId: GetItems
      summary: 아이템 사용중 내역
      description: |
        <b><font color="blue">#GetItems</font></b>
        <br />사용중인 아이템 목록을 반환 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>

        1. 아래와 같이 itemType값에 따라 남은횟수/기간 처리가 필요합니다.
          - 0: 횟수형, useCnt - offsetCnt = 남은 횟수
          - 1: 기간형, endDateTime - 현재일자 - 남은 기간
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
      responses:
        200:
          description: 성공, 사용중인 아이템 목록 전달
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/inUseItems'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/items/{ixCode}:
    put:
      tags:
      - 회원 아이템
      operationId: UseItem
      summary: 아이템 사용 처리
      description: |
        <b><font color="blue">#UseItem</font></b>
        <br />소유한(선물받은) 아이템 중 ixCode로 특정되는 아이템을 사용 처리 합니다.

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1087 </td><td> UnsupportedLocaleOrLanguage </td><td> 지원하지 않는 지역/언어입니다 </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx7003 </td><td> DBMemberItemNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx7010 </td><td> DBItemInvalid </td><td> 사용할 수 없는 아이템 입니다 </td></tr>
        <tr><td> Dx7002 </td><td> DBItemAlreadyUsed </td><td> 사용이 완료된 아이템 입니다 </td></tr>
        <tr><td> Dx7011 </td><td> DBItemDuplicateNotAvailable </td><td> 동일한 아이템이 사용중 입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0204 </td><td> DBWriteS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0205 </td><td> DBWriteS04 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0206 </td><td> DBWriteS05 </td><td> DB 처리 오류 </td></tr>
        </table>

        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/receives/items:
    get:
      tags:
      - 회원 아이템
      operationId: GetReceivedItems
      summary: 아이템 선물받은 내역
      description: |
        <b><font color="blue">#GetReceivedItems</font></b>
        <br />사용중인 아이템 목록을 반환 합니다.
        <br />반환값 중 items 항목의 payCode값이 "결제"가 아닌 경우 다음의 값들에 대해 별도의 처리가 필요합니다.
        - giftMessage
        - memKey
        - nickName
        - profileImg

        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
      responses:
        200:
          description: 성공, 선물받은 아이템 목록 전달
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/receivedItems'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/notifications/pushkey:
    put:
      tags:
      - 회원 노티
      operationId: UpdatePushKey
      summary: 푸시키 수정
      description: |
        <b><font color="blue">#UpdatePushKey</font></b>
        <br />푸시 알림을 위한 기기 정보를 등록/수정 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 계정 닉네임 변경 자료
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/UpdatePushKey'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/notifications:
    get:
      tags:
        - 회원 노티
      operationId: GetNotifications
      summary: 수신 설정 정보
      description: |
        <b><font color="blue">#GetNotifications</font></b>
        <br />상위 카테고리(전체/이벤트)의 푸시알림 수신 상태값 반환을 요청합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      responses:
        200:
          description: 성공, 푸시알림 수신 상태값 설정 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  following:
                    type: boolean
                    enum: [true, false]
                    description: |
                      팔로잉 푸시알림 수신 상태
                      - false: 미수신
                      - true: 수신
                  event:
                    type: boolean
                    enum: [true, false]
                    description: |
                      소식(이벤트) 전체 푸시알림 수신 상태
                      - false: 미수신
                      - true: 수신
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/notifications/following/{state}:
    put:
      tags:
        - 회원 노티
      operationId: UpdateNotificationFollowing
      summary: 팔로잉 수신 설정
      description: |
        <b><font color="blue">#UpdateNotificationFollowing</font></b>
        <br />팔로잉 푸시알림 수신 상태값 변경을 요청합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/paths/stateBool'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/notifications/event/{state}:
    put:
      tags:
      - 회원 노티
      operationId: UpdateNotificationEvent
      summary: 소식 수신 설정
      description: |
        <b><font color="blue">#UpdateNotificationEvent</font></b>
        <br />소식 푸시알림 수신 상태값 변경을 요청합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/paths/stateBool'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/accounts/requests:
    get:
      tags:
        - 회원 정산
      operationId: GetPayRequests
      summary: 요청 목록
      description: |
        <b><font color="blue">#GetPayRequests</font></b>
        <br />정산 요청 목록 정보를 요청 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
        - $ref: '#/components/parameters/queries/s_sd'
        - $ref: '#/components/parameters/queries/s_ed'
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    properties:
                      page:
                        type: number
                        description: |
                          현재 출력되는 페이지 정보
                      hasMore:
                        type: boolean
                        default: false
                        description: |
                          다음 페이지의 존재 유무
                      totalCnt:
                        type: number
                        description: |
                          전체 페이지 갯수<br />
                          <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
                  requests:
                    type: array
                    items:
                      type: object
                      properties:
                        exPer:
                          type: number
                          description: 정산율(%)
                        payAmount:
                          type: number
                          description: 정산 요청금액
                        taxAmount:
                          type: number
                          description: 정산 요청금액에 대한 공제금액
                        sumAmount:
                          type: number
                          description: 정산 요청금액에 대한 공제금액을 제외한 실제 정산 금액
                        isRequestCancel:
                          type: number
                          enum: [0, 1]
                          description: |
                            요청 취소 여부
                              - 0: 정상
                              - 1: 취소
                        requestCancelDateTime:
                          type: string
                          description: 요청 취소시 취소 신청일, YYYY-MM-DD hh:mm:ss.zzz
                        isConfirm:
                          type: number
                          enum: [0, 1, 2, 3]
                          description: |
                            관리자 승인 지급 여부
                              - 0: 대기
                              - 1: 완료
                              - 2: 보류
                              - 3: 반려
                        Reason:
                          type: string
                          description: 관리자 승인 상태에 따른 코멘트
                        exeDateTime:
                          type: string
                          description: 관리자 승인 상태 변경 일시, YYYY-MM-DD hh:mm:ss.zzz
                        regDateTime:
                          type: string
                          description: 환전 요청 등록일시, YYYY-MM-DD hh:mm:ss.zzz
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    put:
      tags:
        - 회원 정산
      operationId: SetPayRequest
      summary: 요청 임시 저장
      description: |
        <b><font color="blue">#SetPayRequest</font></b>
        <br />정산 요청 확인 화면에서 사용할 자료를 요청 합니다.
        <br />이때 정산 신청시 사용될 임시 자료가 생성 됩니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  confirm:
                    type: object
                    properties:
                      bankName:
                        $ref: '#/components/schemas/properties/bankName'
                      bankLocCode:
                        $ref: '#/components/schemas/properties/bankLocCode'
                      bankAccNum:
                        $ref: '#/components/schemas/properties/bankAccNum'
                      accountName:
                        $ref: '#/components/schemas/properties/accountName'
                  user:
                    type: object
                    properties:
                      countryCode:
                        $ref: '#/components/schemas/properties/countryCode'
                      cellNumber:
                        $ref: '#/components/schemas/properties/cellNumber'
                  amount:
                    type: object
                    properties:
                      exPer:
                        type: number
                        description: 정산율(%)
                      payAmount:
                        type: number
                        description: 정산 요청금액
                      taxAmount:
                        type: number
                        description: 정산 공제금액
                      sumAmount:
                        type: number
                        description: 정산 실제 금액
                      payIncomeDateTime:
                        type: string
                        descriptio: 정산 요청 기준일자, YYYY-MM-DD hh:mm:ss.zzz
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    post:
      tags:
        - 회원 정산
      operationId: AddPayRequest
      summary: 요청 등록
      description: |
        <b><font color="blue">#AddPayRequest</font></b>
        <br />정산 요청 자료 등록을 요청합니다.
        <br /><a href="#operation/SetPayRequest">[SetPayRequest]</a>에서 생성된 자료를 사용하여 정산 자료를 등록 합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    delete:
      tags:
        - 회원 정산
      operationId: CancelPayRequest
      summary: 요청 취소
      description: |
        <b><font color="blue">#CancelPayRequest</font></b>
        <br />정산 요청된 자료에 대해 취소를 요청합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/members/{memKey}/accounts/confimrs:
    get:
      tags:
        - 회원 정산
      operationId: GetPayConfirm
      summary: 승인 자료
      description: |
        <b><font color="blue">#GetPayConfirm</font></b>
        <br />정산 승인 자료 반환 요청
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      dvsCode:
                        type: number
                        enum: [0, 1, 2]
                        description: |
                          계정 형태 구분
                            - 0: 일반
                            - 1: 계약
                            - 2: 소속(엔터테인먼트)
                      isAdult:
                        type: boolean
                        default: false
                        description: 성인 여부
                      isCellCertify:
                        type: boolean
                        default: false
                        description: 본인 인증 여부
                  confirm:
                    type: object
                    properties:
                      nickName:
                        $ref: '#/components/schemas/properties/nickName'
                      paySetType:
                        $ref: '#/components/schemas/properties/paySetType'
                      bankName:
                        $ref: '#/components/schemas/properties/bankName'
                      bankLocCode:
                        $ref: '#/components/schemas/properties/bankLocCode'
                      bankAccNum:
                        $ref: '#/components/schemas/properties/bankAccNum'
                      accountName:
                        $ref: '#/components/schemas/properties/accountName'
                      isConfirm:
                        type: number
                        enum: [0, 1, 2]
                        description: |
                          관리자 승인 여부
                            - 0: 미승인
                            - 1: 승인
                            - 2: 반려
                      Reason:
                        type: string
                        description: 관리자 승인 설정 사유
                      exeDateTime:
                        type: string
                        description: 관리자 승인 상태 변경 일시, YYYY-MM-DD hh:mm:ss.zzz

        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    put:
      tags:
        - 회원 정산
      operationId: UpdatePayConfirm
      summary: 승인 자료 업데이트
      description: |
        <b><font color="blue">#UpdatePayConfirm</font></b>
        <br />정산 승인 자료의 수정을 요청합니다.
        <br />이때 이전에 승인된 자료는 초기화 됩니다.

        1. multipart/form-data 형식으로 요청해야 합니다.

        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - data
                - attach
              properties:
                data:
                  type: string
                  description: |
                    - 아래의 형식의 json 문자열을 암호화 처리한 문자열
                      <br />{
                      <br />&nbsp;&nbsp;&nbsp;&nbsp;"bankName": "",
                      <br />&nbsp;&nbsp;&nbsp;&nbsp;"bankLocCode": ""
                      <br />&nbsp;&nbsp;&nbsp;&nbsp;"bankAccNum": ""
                      <br />&nbsp;&nbsp;&nbsp;&nbsp;"accountName": ""
                      <br />&nbsp;&nbsp;&nbsp;&nbsp;"paySetType": 0|1|2
                      <br />}
                    - 각 항목별 설명
                      - bankName: 은행명, 문자형, 50글자 이내 제한
                      - bankLocCode: 은행 코드, 문자형, 10글자 이내 제한
                      - bankAccNum: 은행 계좌 번호, 문자형, 50글자 이내 제한
                      - accountName: 은행 계좌 예금주명, 문자형, 50글자 이내 제한
                      - paySetType: 정산 유형, 숫자형
                        - 0: 수동형
                        - 1: 주간 자동
                        - 2: 월간 자동
                attach:
                  type: array
                  description: |
                    첨부파일
                    <br />2개의 파일 입력 필요
                    <br />첫번째는 신분증, 두번째는 통장
                    <br />용량 합이 20MByte 이하만 허용
                  items:
                    type: string
                    format: binary
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/schedules/daily/{year}/{month}/{day}:
    get:
      tags:
        - 스케줄
      operationId: GetSchedulesDaily
      summary: 방송 스케줄 목록
      description: |
        <b><font color="blue">#GetSchedulesDaily</font></b>
        <br />지정된 날짜의 스케줄 전체 목록 반환
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/year'
        - $ref: '#/components/parameters/paths/month'
        - $ref: '#/components/parameters/paths/day'
      responses:
        200:
          description: 성공, 방송 스케줄 목록
          content:
            application/json:
              schema:
                type: object
                properties:
                  schedules:
                    type: array
                    description: 방송 스케줄 목록
                    items:
                      $ref: '#/components/schemas/responses/schemas/ScheduleData'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/schedules/exists:
    get:
      tags:
        - 스케줄
      operationId: GetSchedulesExists
      summary: 방송 스케줄 유무 반환
      description: |
        <b><font color="blue">#GetSchedulesExists</font></b>
        <br />지정된 기간 중 스케줄이 존재하는 일자 목록 반환
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/queries/s_sd'
        - $ref: '#/components/parameters/queries/s_ed'
        - name: r_cl
          in: query
          description: |
            <font color="blue">(r)equest (c)aster (l)ist</font><br />
            r_cl 값이 1로 설정된 경우에만 casters 항목이 생성됩니다.
            <br />이때, 지정된 기간 중 스케줄 등록한 방송자 정보 목록을 반환합니다.
          schema:
            type: number
            enum: [0, 1]
            default: 0
      responses:
        200:
          description: 성공, 방송 스케줄이 있는 일자 목록
          content:
            application/json:
              schema:
                type: object
                properties:
                  dates:
                    type: array
                    description: 스케줄 존재하는 일자, YYYYMMDD 형식
                    items:
                      type: string
                  casters:
                    type: array
                    description: |
                      기간동안 스케줄 등록한 방송자 목록
                      <br /><font color="red">r_cl 값이 1인 경우에만 생성됩니다.</font>
                    items:
                      $ref: '#/components/schemas/responses/schemas/ScheduleCaster'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/schedules/exists-with-count:
    get:
      tags:
      - 스케줄
      operationId: GetSchedulesExistsWithCount
      summary: 방송 스케줄 유무 반환(카운팅)
      description: |
        <b><font color="blue">#GetSchedulesExistsWithCount</font></b>
        <br />특정된 기간 동안의 회원의 방송 스케줄 존재 유무 및 해당 일자의 총 카운트값를 반홥 합니다.
      parameters:
      - $ref: '#/components/parameters/cookies/keyAny'
      - $ref: '#/components/parameters/paths/locale'
      - $ref: '#/components/parameters/paths/svcKey'
      - $ref: '#/components/parameters/queries/s_sd'
      - $ref: '#/components/parameters/queries/s_ed'
      - name: r_cl
        in: query
        description: |
          <font color="blue">(r)equest (c)aster (l)ist</font><br />
          r_cl 값이 1로 설정된 경우에만 casters 항목이 생성됩니다.
          <br />이때, 지정된 기간 중 스케줄 등록한 방송자 정보 목록을 반환합니다.
        schema:
          type: number
          enum: [0, 1]
          default: 0
      responses:
        200:
          description: 성공, 방송 스케줄이 있는 일자 목록
          content:
            application/json:
              schema:
                type: object
                properties:
                  dates:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          description: 스케줄 존재하는 일자, YYYYMMDD 형식
                        cnt:
                          type: number
                          description: 해당 일자의 총 스케줄 갯수
                          default: 0
                  casters:
                    type: array
                    description: |
                      기간동안 스케줄 등록한 방송자 목록
                      <br /><font color="red">r_cl 값이 1인 경우에만 생성됩니다.</font>
                    items:
                      $ref: '#/components/schemas/responses/schemas/ScheduleCaster'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/clips:
    get:
      tags:
        - 클립
      operationId: GetClips
      summary: 클립 목록
      description: |
        <b><font color="blue">#GetClips</font></b>
        <br />클립 영상 목록 반환
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
        - name: r_rt
          in: query
          description: |
            <font color="blue">(r)equest (r)ecommended (t)ags</font>
            <br />추천 태그 목록 요청
            - 0: 추천 태그 요청 안함
            - 1: 추천 태그 요청, tags 항목에 등록
          schema:
            type: number
            enum: [0, 1]
            default: 0
        - name: r_rc
          in: query
          description: |
            <font color="blue">(r)equest (r)ecommended (c)lip</font>
            <br />추천 재생 클립 영상 정보
          schema:
            type: object
        - name: s_c
          in: query
          description: |
            <font color="blue">(s)earch (c)ategory</font>
            <br />검색 대상 카테고리
            - "" - 전체
            - hot - 인기클립, 최근 3개월내 좋아요 등록된 자료만 출력
          schema:
            type: string
            enum: ['', 'hot']
        - name: s_tags
          in: query
          description: |
            <font color="blue">(s)earch (tags)</font><br />
            <br />태그에 대해 or 검색을 합니다.
            <br />전달갯수가 20건이 넘는 경우, 20건까지만 사용되고 나머지는 무시됩니다.
          example:
            s_tags[]=tag1&s_tags[]=tag2&s_tags[]=tag3
          schema:
            type: array
            items:
              type: string
              minLength: 1
              maxLength: 10
        #- name: s_t
        #  in: query
        #  description: |
        #    <font color="blue">(s)earch (t)ype</font>
        #    <br />검색 구분값
        #    - tag - 태그, s_q에 지정된 값과 일치하는 tag값이 있는 자료 반환
        #  schema:
        #    type: string
        #    enum: ['tag']
        #- $ref: '#/components/parameters/queries/s_q'
        - $ref: '#/components/parameters/queries/o_t'
      responses:
        200:
          description: 성공, 클립영상 목록
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/ClipsWithRecommendedTag'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/clips/{ixCode}:
    get:
      tags:
        - 클립
      operationId: GetClip
      summary: 클립 정보
      description: |
        <b><font color="blue">#GetClip</font></b>
        <br />ixCode로 지정된 특정 클립 영상 정보 반환
        <br />API 호출 시 해당 클립 영상의 viewCnt에 대해 +1 처리 후 정보를 반환합니다.

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> DxB001 </td><td> DBClipNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x1011 </td><td> LoginRequired </td><td> 로그인이 필요합니다 </td></tr>
        <tr><td> 0x1022 </td><td> AuthorizationNotInUse </td><td> 본인 인증이 되지 않은 계정입니다 </td></tr>
        <tr><td> 0x1052 </td><td> IsNotAdult </td><td> 성인 인증이 되지 않은 계정입니다 </td></tr>
        <!--tr><td> 0x1066 </td><td> AccountBlocked </td><td> 정지된 계정 입니다 </td></tr-->
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/ixCode'
      responses:
        200:
          description: 성공, 클립영상 목록
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models/ClipWithFileNIsLiked'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/clips/{ixCode}/like:
    post:
      tags:
        - 클립
      operationId: AddClipLike
      summary: 클립 좋아요
      description: |
        <b><font color="blue">#AddClipLike</font></b>
        <br />ixCode로 지정된 특정 클립 영상에 대해 좋아요(likeCnt + 1) 처리.
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/ixCode'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    delete:
      tags:
        - 클립
      operationId: RemoveClipLike
      summary: 클립 좋아요 취소
      description: |
        <b><font color="blue">#RemoveClipLike</font></b>
        <br />ixCode로 지정된 특정 클립 영상에 대해 좋아요 철회(likeCnt - 1) 처리.
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/ixCode'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/casts:
    get:
      tags:
        - 방송
      operationId: GetCasts
      summary: 방송 목록
      description: |
        <b><font color="blue">#GetCasts</font></b>
        <br />현재 진행중인 방송 목록 반환 요청

        1. 반환값 구조는 아래와 같습니다.
          - metadata
            - page
              <br />: 현재 출력되는 페이지 정보
              <br />&nbsp;&nbsp;아래의 경우 항상 "1"값을 반환 합니다.
              1. "s_c=toptags"인 경우
              2. "s_c=tags"이며 "s_ct[]"값이 2개 이상인 경우
            - hasMore
              <br />: 다음 페이지 존재 유무
              <br />&nbsp;&nbsp;아래의 경우 항상 "false"값을 반환 합니다.
              1. "s_c=toptags"인 경우
              2. "s_c=tags"이며 "s_ct[]"값이 2개 이상인 경우
            - totalCnt
              <br />: 전체 갯수 정보, "r_tc=1"인 경우에만 출력.
              <br />&nbsp;&nbsp;아래의 경우 항상 "0"값을 반환 합니다.
              1. "s_c=toptags"인 경우
              2. "s_c=tags"이며 "s_ct[]"값이 2개 이상인 경우
          - hotList
            <br />: 핫리스트 아이템 적용 방송 목록.
            <br />&nbsp;&nbsp;"r_hl"값이 전달된 경우에 한하여 목록이 생성됩니다.
            - casts
              <br />: 일반 핫리스트 방송 목록.(최신순 "r_hlc"(기본 3)건)
              <br />&nbsp;&nbsp;"r_hl[]=hot" 요청이 전달된 경우에 한하여 목록 생성.
            - fanCasts
              <br />: 팬 대상 핫리스트 방송 목록.(최신순 "r_hlc"(기본 3)건)
              <br />&nbsp;&nbsp;"r_hl[]=fan" 요청이 전달된 경우에 한하여 목록 생성.
          - casts
            <br />: 현재 진행중인 방송 전체 목록.
            <br />&nbsp;&nbsp;아래의 상황에 따라 전달 목록에 변동이 발생 됩니다.
            1. "s_c=hot"인 경우 "r_hl[]=hot"에 해당되는 최대 "r_hlc"(기본 3)건의 자료는 제외됩니다.
            2. "s_c=fan"인 경우 "r_hl[]=fan"에 해당되는 최대 "r_hlc"(기본 3)건의 자료는 제외됩니다.
            3. "s_c=toptags"인 경우 현재 방송중인 목록에서 최다 사용 태그 top10을 선정,
            <br />&nbsp;&nbsp;각 태그별 최대 "pl"값의 +1 갯수를 반환 합니다.
            4. "s_c=toptags"인 경우 반환값 중 "rTag" 항목에 해당되는 태그값이 입력됩니다.
            5. "s_c=tags"인 경우 반환값 중 "rTag" 항목에 "s_ct[]" 입력값에 해당하는 태그값이 입력됩니다.
            6. "s_c=toptags" 또는 "s_c=tags"가 아닌 경우 반환값의 "rTag"는 항상 빈값이 입력 됩니다.
            7. "s_c=following"인 경우 요청자가 현재 팔로잉 중인 대상들 중 현재 방송중인 목록을 반환합니다.
                <br />다만, 이때 요청자는 반드시 로그인한 상태여야 합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
        - name: r_hl
          in: query
          description: |
            <font color="blue">(r)equest (h)ot (l)ist</font><br />
            핫리스트 목록 반환 요청
            - hot - 일반 핫리스트 대상 목록
            - fan - 팬방송 핫리스트 대상 목록
          example:
            r_hl[]=hot&r_hl[]=fan
          schema:
            type: array
            items:
              type: string
        - name: r_hlc
          in: query
          description: |
            <font color="blue">(r)equest (h)ot (l)ist (c)ount</font><br />
            r_hl을 통한 핫리스트 목록 반환 요청시 반환 카운트 값
          schema:
            type: number
            default: 3
            minimum: 1
            maximum: 30
        - name: r_rihl
          in: query
          description: |
            <font color="blue">(r)equest (r)esult (i)nclude (h)ot (l)ist</font><br />
            기본적으로 s_c값이 "hot" 또는 "fan"인 경우 r_hlc값 만큼의 핫리스트 건들이 casts에서 제외됨.
            <br />r_rihl값이 1인 경우 casts에서 핫리스트 건들이 제외되지 않고 포함하여 반환함.
            <br /><font color="red">s_c 값이 "hot", "fan"이 아닌 경우 입력값 무시됨</font>
          schema:
            type: number
            enum: [0, 1]
            default: 0
        - name: s_c
          in: query
          description: |
            <font color="blue">(s)earch (c)ategory</font>
            <br />검색 대상 카테고리
            - hot - 핫라이브 적용 대상 목록
            - fan - 팬방송 대상 목록
            - following - 요청자가 팔로잉 중인 대상 목록
              <br /><font color="red">#로그인 필수</font>
            - tags - s_ct에 지정된 태그순으로 각각의 태그를 포함하는 방송 목록을 반환합니다.
              <br /><font color="red">casts 항목의 rTag값에 해당 태그값이 입력됩니다.</font>
            - toptags - 최다 사용 태그 상위 10개를 추출, 각각의 태그를 포함하는 방송 목록을 반환합니다.
              <br /><font color="red">casts 항목의 rTag값에 해당 태그값이 입력됩니다.</font>
          schema:
            type: string
            enum: ['', 'hot', 'fan', 'following', 'tags', 'toptags']
            default: ''
        - name: s_ct
          in: query
          description: |
            <font color="blue">(s)earch (c)ategory (t)ags</font><br />
            <br />s_c=tags 인 경우 사용됩니다.(그 외의 경우 값 무시)
            <br />전달갯수가 20건이 넘는 경우, 20건까지만 사용되고 나머지는 무시됩니다.
          example:
            s_ct[]=tag1&s_ct[]=tag2&s_ct[]=tag3
          schema:
            type: array
            items:
              type: string
              minLength: 1
              maxLength: 10
        - $ref: '#/components/parameters/queries/o_t'
      responses:
        200:
          description: 성공, 진행중인 방송 목록
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/CastsWithHotList'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/casts/{memKey}/preset:
    get:
      tags:
        - 방송 프리셋
      operationId: GetCastPreset
      summary: 프리셋 정보
      description: |
        <b><font color="blue">#GetCastPreset</font></b>
        <br />해당 회원의 방송 설정 정보를 반환합니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1011 </td><td> LoginRequired </td><td> 로그인이 필요합니다 </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx1011 </td><td> DBSignDataNotFound </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x1066 </td><td> AccountBlocked </td><td> 정지된 계정 입니다 </td></tr>
        <tr><td> 0x1052 </td><td> IsNotAdult </td><td> 성인 인증이 되지 않은 계정입니다 </td></tr>
        <tr><td> 0x1022 </td><td> AuthorizationNotInUse </td><td> 본인 인증이 되지 않은 계정입니다 </td></tr>
        <tr><td> Dx2003 </td><td> DBCastPresetWriteError </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx2001 </td><td> DBCastPresetNotExists </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      responses:
        200:
          description: 성공, 방송 설정 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  preset:
                    $ref: '#/components/schemas/responses/schemas/CastPreset'
                  restream:
                    type: object
                    properties:
                      is:
                        type: boolean
                        default: false
                        description: |
                          재송출 사용 여부(GoldLive)
                      chatURL:
                        type: string
                        description: |
                          재송출 사용시 해당 플랫폼의 채팅 연결 URL 문자열
                  user:
                    type: object
                    properties:
                      svcID:
                        $ref: '#/components/schemas/properties/svcID'
                      profileImg:
                        $ref: '#/components/schemas/properties/profileImg'
                      available:
                        type: number
                        enum: [0, 1]
                        description: |
                          방송하기 사용 가능 여부
                          - 0: 사용불가
                          - 1: 사용가능
                      code:
                        type: string
                        enum: ['', '0x1052', '0x1022', '0x1066']
                        description: |
                          사용불가시 사유 코드
                          <br /><font color="red">available값이 0인 경우만 코드가 발생됩니다.</font>
                          - '0x1052': 성인 아님
                          - '0x1022': 본인인증 미사용
                          - '0x1066': 차단된 사용자
                      fanLevel:
                        type: object
                        properties:
                          available:
                            type: number
                            enum: [0, 1]
                            description: |
                              팬레벨 사용 가능 여부
                              - 0: 사용불가
                              - 1: 사용가능
                          code:
                            type: string
                            enum: ['', '0x1052', '0x1022', '0x1066', '0x5027']
                            description: |
                              사용불가시 사유 코드
                              <br /><font color="red">available값이 0인 경우만 코드가 발생됩니다.</font>
                                - '0x1052': 성인 아님
                                - '0x1022': 본인인증 미사용
                                - '0x1066': 차단된 사용자
                                - '0x5027': 팬회원수 부족(업적 보상 미획득)
                          levels:
                            type: array
                            default: []
                            description: |
                              지정 가능한 팬레벨 목록
                            items:
                              type: number
                      memLevel:
                        type: object
                        properties:
                          available:
                            type: number
                            enum: [0, 1]
                            description: |
                              회원레벨 사용 가능 여부
                              - 0: 사용불가
                              - 1: 사용가능
                          code:
                            type: string
                            enum: ['', '0x1052', '0x1022', '0x1066', '0x5026']
                            description: |
                              사용불가시 사유 코드
                              <br /><font color="red">available값이 0인 경우만 코드가 발생됩니다.</font>
                                - '0x1052': 성인 아님
                                - '0x1022': 본인인증 미사용
                                - '0x1066': 차단된 사용자
                                - '0x5026': 방송시간 부족(업적 보상 미획득)
                          levels:
                            type: array
                            default: []
                            description: |
                              지정 가능한 최대 회원레벨 목록
                            items:
                              type: number

        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    put:
      tags:
        - 방송 프리셋
      operationId: UpdateCastPreset
      summary: 프리셋 수정
      description: |
        <b><font color="blue">#UpdateCastPreset</font></b>
        <br />해당 회원의 방송 설정 정보를 업데이트합니다.
        <br />방송 설정 변경시 현재 진행중인 방송 유무를 확인한 후 진핸중인 방송이 있는 경우
        진행중인 방송의 자료 중 아래의 값들을 같이 수정 합니다.
          - Ttile
          - Tag
          - castTargetType
          - castTargetLevel
          - isLock
          - setViewCnt
          - isAdult
          - viewType
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1011 </td><td> LoginRequired </td><td> 로그인이 필요합니다 </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2012 </td><td> ParamValueInvalidLength </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x5034 </td><td> CastTitleHasVulgarWord </td><td> 사용할 수 없는 제목입니다 </td></tr>
        <tr><td> 0x5035 </td><td> CastTagHasVulgarWord </td><td> 사용할 수 없는 태그입니다 </td></tr>
        <tr><td> 0x5036 </td><td> CastTagCountDeceeded </td><td> 태그는 최소 1개 이상이어야 합니다 </td></tr>
        <tr><td> 0x1052 </td><td> IsNotAdult </td><td> 컨텐츠 등급 설정을 할 수 없습니다 </td></tr>
        <tr><td> 0x5026 </td><td> CastMemLevelLimitedByCastMinute </td><td> 등급방송(회원레벨) 설정을 할 수 없습니다 </td></tr>
        <tr><td> 0x5027 </td><td> CastFanLevelLimitedByFanCount </td><td> 등급방송(팬레벨) 설정을 할 수 없습니다 </td></tr>
        <tr><td> Dx2001 </td><td> DBCastPresetNotExists </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 로컬계정 등록을 위한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/UpdateCastPreset'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/casts/{memKey}:
    get:
      tags:
        - 방송
      operationId: GetCast
      summary: 방송 정보
      description: |
        <b><font color="blue">#GetCast</font></b>
        <br />진행중인 특정 방송 정보를 반환합니다.
        1. 로그인한 사용자가 자신의 자료를 조회하는 경우 아래의 정보를 추가로 반환합니다.
          - pictureURL
          - streamName
        2. r_i의 입력값에 따라 반환값이 변경됩니다.
          - r_i[]=lv 의 경우 아래의 값이 추가 됩니다.
            - level
              - mem : 회원 레벨
              - vip : VIP 레벨
              - cast : 방송자 등급
          - r_i[]=spt 의 경우 아래의 값이 추가 됩니다.
            <br /><font style="color:red;">로그인 되지 않은 경우 항상 기본값을 반환합니다.</font>
            - supporter
              - exists : 서포터 가입 여부
              - supportMonth: 서포터 가입한 경우 가입 기간(월)
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - name: r_i
          in: query
          description: |
            <font color="blue">(r)equest (i)nfo</font><br />
            반환 요청값
            - lv: 방송자 레벨 정보
              <br />반환값은 level: {mem:0, vip:0, cast:0}
            - spt: 서포터 정보
              <br />반환값은 supporter: {exists: false, supportMonth: null}
          example:
            r_i[]=lv&r_i[]=spt
          schema:
            type: array
            items:
              type: string
              enum: [mng]
      responses:
        200:
          description: 성공, 진행중인 방송 정보
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/models/Cast'
                  - $ref: '#/components/schemas/models/CastLogin'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    post:
      tags:
        - 방송
      operationId: StartCast
      summary: 방송 시작
      description: |
        <b><font color="blue">#StartCast</font></b>
        <br />해당 회원의 방송 시작 처리, 방송 목록에 추가됩니다.
        <br /><font color="red">*현재 테스트를 위해 이전에 등록된 방송은 자동으로 삭제 후 재 등록합니다.</font>
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1011 </td><td> LoginRequired </td><td> 로그인이 필요합니다 </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x3003 </td><td> ReqMemKeyNotMatched </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx1011 </td><td> DBSignDataNotFound </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x1066 </td><td> AccountBlocked </td><td> 정지된 계정 입니다 </td></tr>
        <tr><td> 0x1022 </td><td> AuthorizationNotInUse </td><td> 본인 인증이 되지 않은 계정입니다 </td></tr>
        <tr><td> 0x1052 </td><td> IsNotAdult </td><td> 성인 인증이 되지 않은 계정입니다 </td></tr>
        <tr><td> 0x5003 </td><td> CastViewCntInvalid </td><td> 방송 시청인원 설정이 잘못되었습니다 </td></tr>
        <tr><td> 0x5004 </td><td> CastManagerCntInvalid </td><td> 방송 매니저인원 설정이 잘못되었습니다 </td></tr>
        <tr><td> 0xZZZP </td><td> PartialMaintenance </td><td> 시스템 점검으로 방송을 할 수 없습니다. (점검시간 : 새벽 03시 부터 오전 09시 까지) </td></tr>
        <tr><td> Dx2003 </td><td> DBCastPresetWriteError </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx2001 </td><td> DBCastPresetNotExists </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0305 </td><td> DBReadS04 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0306 </td><td> DBReadS05 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0307 </td><td> DBReadS06 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0308 </td><td> DBReadS07 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0309 </td><td> DBReadS08 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0310 </td><td> DBReadS09 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0311 </td><td> DBReadS10 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0202 </td><td> DBWriteS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0203 </td><td> DBWriteS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0204 </td><td> DBWriteS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0205 </td><td> DBWriteS04 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0206 </td><td> DBWriteS05 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0207 </td><td> DBWriteS06 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0208 </td><td> DBWriteS07 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0209 </td><td> DBWriteS08 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Sx0001 </td><td> ChatError </td><td> 채팅서버 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                exeCode:
                  $ref: '#/components/schemas/properties/exeCode'
      responses:
        200:
          description: 성공, 방송 설정 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  cast:
                    type: object
                    properties:
                      memKey:
                        $ref: '#/components/schemas/properties/memKey'
                      nickName:
                        $ref: '#/components/schemas/properties/nickName'
                      Title:
                        $ref: '#/components/schemas/properties/Title'
                      Tag:
                        $ref: '#/components/schemas/properties/Tag'
                      castDTCode:
                        $ref: '#/components/schemas/properties/castDTCode'
                      isAdult:
                        type: boolean
                        default: false
                        description: 미성년자 관람 제한 여부
                      isLock:
                        type: boolean
                        default: false
                        description: 비번 제한 여부
                  picture:
                    type: object
                    properties:
                      URL:
                        type: string
                        description: 영상 접속 URL
                      svcID:
                        $ref: '#/components/schemas/properties/svcID'
                      viewType:
                        $ref: '#/components/schemas/properties/viewType'
                      streamKey:
                        $ref: '#/components/schemas/properties/streamKey'
                  chat:
                    type: object
                    properties:
                      URL:
                        $ref: '#/components/schemas/properties/chatURL'
                      #port:
                      #  type: number
                      #  description: 채팅서버 접속 port
                      userId:
                        type: string
                        description: 채팅서버 연결시 사용할 userId
                      accessCode:
                        type: string
                        description: 채팅서버 연결시 사용할 accessCode
                      channelId:
                        type: string
                        description: 채팅서버 연결 시 채널 입장시 사용할 channelId
                  #user:
                  #  type: object
                  #  properties:
                  #    profileImg:
                  #      $ref: '#/components/schemas/properties/profileImg'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    put:
      tags:
        - 방송
      operationId: EnterCast
      summary: 방송 입장
      description: |
        <b><font color="blue">#EnterCast</font></b>
        <br />memKey로 특정되는 회원의 현재 진행중인 방송에 입장 처리 요청

        - 영상 접속 정보는 아래와 같습니다.
          - RTMP
            1. <br />{picture.URL} 그대로 사용
          - HLS
            1. {picture.URL}에서 프로토콜을 rtmp -> http로 변경
            2. 위 1의 말미에 "/playlist.m3u8" 추가

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x2011 </td><td> ParamValueOutOfRange </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> Dx1011 </td><td> DBSignDataNotFound </td><td> 잘못된 처리 대상입니다 </td></tr>
        <tr><td> 0x5001 </td><td> CastNotExists </td><td> 진행중인 방송이 없습니다 </td></tr>
        <tr><td> 0x5029 </td><td> CastEnterDeniedByNotLogin </td><td> 로그인이 필요합니다 </td></tr>
        <tr><td> 0x1022 </td><td> AuthorizationNotInUse </td><td> 본인 인증이 되지 않은 계정입니다 </td></tr>
        <tr><td> 0x1052 </td><td> IsNotAdult </td><td> 성인 인증이 되지 않은 계정입니다 </td></tr>
        <tr><td> 0x5021 </td><td> WatchViewCntLimitExceeded </td><td> 시청인원이 초과되어 입장이 불가합니다 </td></tr>
        <tr><td> 0x1001 </td><td> PasswordNotMatched </td><td> 비밀번호가 일치하지 않습니다 </td></tr>
        <tr><td> 0x1066 </td><td> AccountBlocked </td><td> 정지된 계정 입니다 </td></tr>
        <tr><td> 0x5002 </td><td> CastBlocked </td><td> 시청 차단된 계정입니다 </td></tr>
        <tr><td> 0x5037 </td><td> CastBlockedByWarn </td><td> 경고 누적에 의한 시청 제한된 계정입니다 </td></tr>
        <tr><td> Dx2001 </td><td> DBCastPresetNotExists </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0305 </td><td> DBReadS04 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0306 </td><td> DBReadS05 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0307 </td><td> DBReadS06 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0308 </td><td> DBReadS07 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0309 </td><td> DBReadS08 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0310 </td><td> DBReadS09 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0311 </td><td> DBReadS10 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0312 </td><td> DBReadS11 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0313 </td><td> DBReadS12 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0314 </td><td> DBReadS13 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0315 </td><td> DBReadS14 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0316 </td><td> DBReadS15 </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/EnterCast'
      responses:
        200:
          description: 성공, 서버 연결 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/EnterCast'
        400:
          content:
            application/json:
              schema:
                oneOf:
                - type: object
                  required:
                  - code
                  properties:
                    code:
                      type: string
                      description: 결과 코드값
                    cast:
                      type: object
                      properties:
                        memKey:
                          $ref: '#/components/schemas/properties/castMemKey'
                        nickName:
                          $ref: '#/components/schemas/properties/nickName'
                        profileImg:
                          $ref: '#/components/schemas/properties/profileImg'
                        thimbnail:
                          type: string
                          description: 썸네일 이미지 URL
                        Title:
                          $ref: '#/components/schemas/properties/Title'
                        Tag:
                          $ref: '#/components/schemas/properties/Tag'
                        castDTCode:
                          $ref: '#/components/schemas/properties/castDTCode'
                        passedSecs:
                          type: number
                          minimum: 0
                          description: 방송 시작 후 지난 시간(초)
                        isAdult:
                          type: boolean
                          default: false
                          description: 미성년자 관람 제한 여부
                        isLock:
                          type: boolean
                          default: false
                          description: 비번 제한 여부
                - type: object
                  properties:
                    code:
                      type: string
                      description: 결과 코드값 / 회원레벨 오류, code:0x1061
                    cast:
                      type: object
                      properties:
                        memKey:
                          $ref: '#/components/schemas/properties/castMemKey'
                        nickName:
                          $ref: '#/components/schemas/properties/nickName'
                        profileImg:
                          $ref: '#/components/schemas/properties/profileImg'
                        thimbnail:
                          type: string
                          description: 썸네일 이미지 URL
                        Title:
                          $ref: '#/components/schemas/properties/Title'
                        Tag:
                          $ref: '#/components/schemas/properties/Tag'
                        castDTCode:
                          $ref: '#/components/schemas/properties/castDTCode'
                        passedSecs:
                          type: number
                          minimum: 0
                          description: 방송 시작 후 지난 시간(초)
                        isAdult:
                          type: boolean
                          default: false
                          description: 미성년자 관람 제한 여부
                        isLock:
                          type: boolean
                          default: false
                          description: 비번 제한 여부
                    require:
                      type: object
                      properties:
                        level:
                          type: number
                          description: 필요 레벨
                    current:
                      type: object
                      properties:
                        level:
                          type: number
                          description: 현재 레벨
                - type: object
                  properties:
                    code:
                      type: string
                      description: 결과 코드값 / 팬레벨 오류, code:0x1063
                    cast:
                      type: object
                      properties:
                        memKey:
                          $ref: '#/components/schemas/properties/castMemKey'
                        nickName:
                          $ref: '#/components/schemas/properties/nickName'
                        profileImg:
                          $ref: '#/components/schemas/properties/profileImg'
                        thimbnail:
                          type: string
                          description: 썸네일 이미지 URL
                        Title:
                          $ref: '#/components/schemas/properties/Title'
                        Tag:
                          $ref: '#/components/schemas/properties/Tag'
                        castDTCode:
                          $ref: '#/components/schemas/properties/castDTCode'
                        passedSecs:
                          type: number
                          minimum: 0
                          description: 방송 시작 후 지난 시간(초)
                        isAdult:
                          type: boolean
                          default: false
                          description: 미성년자 관람 제한 여부
                        isLock:
                          type: boolean
                          default: false
                          description: 비번 제한 여부
                    require:
                      type: object
                      properties:
                        level:
                          type: number
                          description: 필요 레벨
                        coin:
                          type: number
                          description: 필요 코인수
                    current:
                      type: object
                      properties:
                        level:
                          type: number
                          description: 현재 레벨
                        coin:
                          type: number
                          description: 현재 코인수
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    delete:
      tags:
        - 방송
      operationId: EndCast
      summary: 방송 종료
      description: |
        <b><font color="blue">#EndCast</font></b>
        <br />해당 회원의 방송 종료 처리, 방송 목록에서 삭제됩니다.
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/casts/{memKey}/report:
    post:
      tags:
        - 방송
      operationId: ReportCast
      summary: 방송 신고
      description: |
        <b><font color="blue">#ReportCast</font></b>
        <br />해당 방송을 신고 처리 합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 신고 내용
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reportType:
                  $ref: '#/components/schemas/properties/reportType'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/casts/{memKey}/missions:
    get:
      tags:
        - 방송 미션
      operationId: GetCastMissions
      summary: 미션 목록
      description: |
        <b><font color="blue">#GetCastMissions</font></b>
        <br />방송자의 미션 목록
        <br />
        <br />출력 순서 정렬 기준은 아래와 같습니다.
        1. 코인 갯수 기준으로 항상 오름차순
        2. missionName 기준으로 오름차순
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      responses:
        200:
          description: 성공, 방송 미션 목록
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    properties:
                      totalCnt:
                        type: number
                        minimum: 0
                        maximum: 30
                        description: |
                          방송 미션 전체 갯수(항상 반환)
                  missions:
                    type: array
                    items:
                      type: object
                      properties:
                        ixCode:
                          $ref: '#/components/schemas/properties/ixCode'
                        missionName:
                          type: string
                          minLength: 1
                          maxLength: 50
                          description: 미션명
                        missionValue:
                          type: number
                          minimum: 0
                          maximum: 10000
                          description: 미션별 코인(루비) 갯수
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    post:
      tags:
        - 방송 미션
      operationId: AddCastMission
      summary: 미션 등록
      description: |
        <b><font color="blue">#AddCastMission</font></b>
        <br />방송자의 미션 등록
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                missionName:
                  type: string
                  minLength: 1
                  maxLength: 50
                  description: 미션명
                missionValue:
                  type: number
                  minimum: 0
                  maximum: 10000
                  description: 미션별 코인(루비) 갯수
      responses:
        200:
          description: 성공, 방송 미션 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  ixCode:
                    $ref: '#/components/schemas/properties/ixCode'
                  missionName:
                    type: string
                    minLength: 1
                    maxLength: 50
                    description: 미션명
                  missionValue:
                    type: number
                    minimum: 0
                    maximum: 10000
                    description: 미션별 코인(루비) 갯수
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    put:
      tags:
        - 방송 미션
      operationId: UpdateCastMissions
      summary: 미션 정정
      description: |
        <b><font color="blue">#UpdateCastMissions</font></b>
        <br />방송자의 미션 목록에서 기존의 자료는 제거 후 새로운 자료로 대체 처리
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
      - $ref: '#/components/parameters/cookies/key'
      - $ref: '#/components/parameters/paths/svcKey'
      - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                missions:
                  type: array
                  items:
                    type: object
                    properties:
                      missionName:
                        type: string
                        minLength: 1
                        maxLength: 50
                        description: 미션명
                      missionValue:
                        type: number
                        minimum: 0
                        maximum: 10000
                        description: 미션별 코인(루비) 갯수
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/casts/{memKey}/missions/{ixCode}:
    delete:
      tags:
        - 방송 미션
      operationId: RemoveCastMission
      summary: 미션 삭제
      description: |
        <b><font color="blue">#RemoveCastMission</font></b>
        <br />방송자의 미션 중 특정된 항목 삭제
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/paths/ixCode'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/casts/{memKey}/users:
    get:
      tags:
        - 방송 참여자
      operationId: GetCastUsers
      summary: 참여자 목록
      description: |
        <b><font color="blue">#GetCastUsers</font></b>
        <br />방송 참여자 목록
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        #- $ref: '#/components/parameters/queries/r_tc'
        - name: r_i
          in: query
          description: |
            <font color="blue">(r)equest (i)nfo</font><br />
            반환 요청값
            - mng: 매니저 목록
              <br />반환값은 managers
          example:
            r_i[]=mng
          schema:
            type: array
            items:
              type: string
              enum: [mng]
      responses:
        200:
          description: 성공, 방송 참여자 목록
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/CastMemers'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/casts/{memKey}/users/{watchMemKey}:
    get:
      tags:
        - 방송 참여자
      operationId: GetCastUserInfo
      summary: 참여자 정보
      description: |
        <b><font color="blue">#GetCastUserInfo</font></b>
        <br />방송 참여자 정보
        <br /><font color="red">*회원 본인의 계정에만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/paths/watchMemKey'
      responses:
        200:
          description: 성공, 방송 참여자 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    description: |
                      사용중인 아이템 코드 목록
                      - CC: ColorChat
                      - IC: InkChat
                      - GC: GlobalChat
                    items:
                      type: string
                      enum: ['CC', 'IC', 'GC']
                  canFreeze:
                    type: boolean
                    description: 채팅 금지 권한 소유 여부
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/casts/{memKey}/donators:
    get:
      tags:
        - 방송 참여자
      operationId: GetCastDonators
      summary: 후원인 목록
      description: |
        <b><font color="blue">#GetCastDonators</font></b>
        <br />방송 후원인 목록
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
      responses:
        200:
          description: 성공, 방송 참여자 목록
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/CastDonators'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/casts/{memKey}/interactions/like:
    put:
      tags:
        - 방송 인터액션
      operationId: InteractionCastLike
      summary: 좋아요
      description: |
        <b><font color="blue">#InteractionCastLike</font></b>
        <br />방송 좋아요 처리
        <br /><font color="red">*시청자/매니저만 접근 가능합니다.</font>
        <br /><font color="red">*테스트를 위해 접근 권한은 제거된 상태입니다.</font>
        <br /><font color="red">*테스트를 위해 DB입력 처리는 제거된 상태입니다.</font>
        <br />-------------------------------------
        - CHANNEL_EVENT.SERVICE_MESSAGE_RECEIVED 이벤트 발생
        <br />Message 객체 반환 하며,
        <br />getData():String 을 통해 "F|{nickName}" 형식으로 수신됩니다.
        - CHANNEL_EVENT.COUNT_UPDATED 이벤트 발생
        <br />ChannelCounter 객체 반환 하며,
        <br />getvalue("F"):int 로 변경된 전체 like 갯수 확인 합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/casts/{memKey}/controls/freeze:
    put:
      tags:
        - 방송 제어
      operationId: ControlCastFreeze
      summary: 채팅 얼림
      description: |
        <b><font color="blue">#ControlCastFreeze</font></b>
        <br />채팅 얼림 처리
        <br /><font color="red">*방송자/매니저/관리자만 접근 가능합니다.</font>
        <br /><font color="red">*테스트를 위해 접근 권한은 제거된 상태입니다.</font>
        1. 운영자(관리자)의 경우 userTypes 값을 임의 조정 가능합니다.
        2. 방송자의 경우 userTypes값은 ["2", "5"]로 고정됩니다.
        3. 매니저의 경우 userTypes값은 ["5"]로 고정됩니다.
        4. 일반 시청자는 오류를 반환합니다.
        <br />-------------------------------------
        <br />status값에 따라
        - 1: CHANNEL_EVENT.FROZEN 이벤트 발생
        <br />ChannelFreeze 객체 반환 하며,
        <br />isFrozen():boolean == true
        <br />getUserTypes():String[] 에 얼림 대상 userType 값 확인
        <br />hasCode():boolean 에 얼림 발생시의 사유 코드(임의사용) 여부 확인 후
        <br />true인 경우 getCode():String 으로 사유 코드 확인
        - 0: CHANNEL_EVENT.UNFROZEN 이벤트 발생
        <br />ChannelFreeze 객체 반환 하며,
        <br />isFrozen():boolean == false
        <br /><font color="red">*사용자 전달용이며, 서버에서도 메시지 전달 요청시 오류와 앞서 지정한 사유코드를 반환합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/ChannelFreeze'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/casts/{memKey}/controls/block:
    put:
      tags:
        - 방송 제어
      operationId: ControlCastBlock
      summary: 방송 블럭
      description: |
        <b><font color="blue">#ControlCastBlock</font></b>
        <br />방송 블럭 처리
        <br /><font color="red">*관리자만 접근 가능합니다.</font>
        <br /><font color="red">*테스트를 위해 접근 권한은 제거된 상태입니다.</font>
        <br />-------------------------------------
        <br />status값에 따라
        - 1: CHANNEL_EVENT.BLOCKED 이벤트 발생
        <br />ChannelBlock 객체 반환 하며,
        <br />isBlocked():boolean == true
        <br />hasCode():boolean 에 블럭 발생시의 사유 코드(임의사용) 여부 확인 후
        <br />true인 경우 getCode():String 으로 사유 코드 확인
        - 0: CHANNEL_EVENT.UNBLOCKED 이벤트 발생
        <br />ChannelBlock 객체 반환 하며,
        <br />isBlocked():boolean == false
        <br /><font color="red">*사용자 전달용이며, 서버에서도 메시지 전달 요청시 오류와 앞서 지정한 사유코드를 반환합니다.</font>
        <br /><font color="red">*채팅얼림보다 블럭처리가 우선됩니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 채널에 대해 방송 제한/해제 처리 요청 자료
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/ChannelBlock'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/casts/{memKey}/controls/kick:
    put:
      tags:
        - 방송 제어
      operationId: ControlCastKick
      summary: 방송 강퇴
      description: |
        <b><font color="blue">#ControlCastKick</font></b>
        <br />방송 강퇴 처리
        <br /><font color="red">*방송자/매니저/관리자만 접근 가능합니다.</font>
        <br />-------------------------------------
        - 당사자: EVENT.CHANNEL_KICKED 이벤트 발생
        <br />Channel, String 객체 반환 하며,
        <br />String 에 kick시 사용된 코드가 반환됩니다.
        - 그외: CHANNEL_EVENT.USER_KICKED 이벤트 발생
        <br />User, String 객체 반환 하며,
        <br />String 에 kick시 사용된 코드가 반환됩니다.
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 채널에 대해 강퇴시킬 대상자 목록
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/ChannelKick'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/casts/{memKey}/controls/warn:
    put:
      tags:
        - 방송 제어
      operationId: ControlCastWarn
      summary: 방송 사용자 경고
      description: |
        <b><font color="blue">#ControlCastWarn</font></b>
        <br />방송 사용자 경고 처리
        <br /><font color="red">*방송자/매니저만 접근 가능합니다.</font>
        <br /><font color="red">*테스트를 위해 접근 권한은 제거된 상태입니다.</font>
        <br />-------------------------------------
        <br />누적 경고 갯수에 따라 동작이 구분됩니다.
        
        <p>1. 2회 이하 -> 경고 알림 처리</p>
        
        - CHANNEL_EVENT.SERVICE_MESSAGE_RECEIVED 이벤트 발생
        <br />Message 객체 반환 하며,
        <br />getData():String 을 통해 "W|{누적경고수}|{강퇴대상경고수}|{nickName}" 형식으로 수신됩니다.
        
        <p>2. 2회 초과 -> 강퇴 처리</p>
        
        - CHANNEL_EVENT.SERVICE_MESSAGE_RECEIVED 이벤트 발생
        <br />Message 객체 반환 하며,
        <br />getData():String 을 통해 "W|{누적경고수}|{강퇴대상경고수}|{nickName}" 형식으로 수신됩니다.
        
        - 서버로부터 연결이 강제 해제됩니다.
        
        - 강퇴 처리 후 해당 방송 진입시 "0x5037(CastBlockedByWarn)"오류 반환합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 채널에 대해 경고처리할 대상자 목록
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/ChannelWarn'
      responses:
        200:
          description: 성공, 경고 처리 결과 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  cumulativeNumber:
                    type: number
                    description: |
                      누적 경고 갯수
                  isKicked:
                    type: boolean
                    default: false
                    description: 경고 누적에 의한 강퇴 처리 여부
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/casts/{memKey}/operations/alert:
    put:
      tags:
        - 방송 운영
      operationId: OperationCastAlert
      summary: 제재 처리
      description: |
        <b><font color="blue">#OperationCastAlert</font></b>
        <br />방송 제재 처리
        <br /><font color="red">*관리자만 접근 가능합니다.</font>
        <br /><font color="red">*테스트를 위해 접근 권한은 제거된 상태입니다.</font>
        <br /><font color="red">*해당 채널에 연결된 모든 사용자들을 채널에서 내보내며, 채널은 삭제됩니다.</font>
        <br />-------------------------------------
        - 당사자: EVENT.CHANNEL_EXITED 이벤트 발생
        <br />Channel, String 객체 반환 하며,
        <br />String 에 제재시 사용된 코드가 반환됩니다.
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 채널에 대해 강퇴시킬 대상자 목록
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/ChannelAlert'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/casts/{memKey}/operations/counts/guest:
    put:
      tags:
        - 방송 운영
      operationId: OperationCastGuestCountUpdate
      summary: 채널 더미 카운터 설정
      description: |
        <b><font color="blue">#OperationCastGuestCountUpdate</font></b>
        <br />방송 더미 카운터 설정
        <br /><font color="red">*관리자만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        description: 채널에 대해 더미 카운터 추가 정보
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                count:
                  type: number
                  description: |
                    추가할 더미 카운터 갯수
      responses:
        200:
          description: 성공, 시청인원 정보 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: |
                      반환값은 {key}에 대한 문자열로 된 인원수 값입니다.
                      <br />{key} 값은 아래와 같습니다.
                      - {exeCode}|* : 로그인 사용자 중 exeCode로 특정되는 기기로 접속한 인원수
                      - {exeCode}|+ : 비로그인 사용자 중 exeCode로 특정되는 기기로 접속한 인원수
                      - E : 후원 갯수
                      - F : 좋아요 갯수
                      - G : 팔로잉 갯수
                      - P : 보유팬 인원수
                      
                      *방송 중 추가된 자료만 반환값에 포함됩니다.
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/chats:
    post:
      tags:
        - 채팅
      operationId: SendServiceMessage
      summary: 서비스 메시지 전달
      description: |
        <b><font color="blue">#SendServiceMessage</font></b>
        <br />전체 메시지 전달
        <br /><font color="red">*관리자만 접근 가능합니다.</font>
        <br /><font color="red">*테스트를 위해 접근 권한은 제거된 상태입니다.</font>
        - EVENT.SERVICE_MESSAGE_RECEIVED 로 전달되며 아래의 형식을 가집니다.
          - D: A|
          - M: {전달할 메시지}
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/SendMessage'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/chats/{memKey}:
    put:
      tags:
        - 채팅
      operationId: EnterChat
      summary: 방송자 참여
      description: |
        <b><font color="blue">#EnterChat</font></b>
        <br />해당 방송자의 방송에 대해 방송 입장 처리
        <br /><font color="red">*방송자만 접근 가능합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                exeCode:
                  $ref: '#/components/schemas/properties/exeCode'
      responses:
        200:
          description: 성공, 방송자 입장용 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/EnterCaster'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    post:
      tags:
        - 채팅
      operationId: SendChannelMessage
      summary: 채널 메시지 전달
      description: |
        <b><font color="blue">#SendChannelMessage</font></b>
        <br />방송 채널 메시지 전달
        <br /><font color="red">*관리자만 접근 가능합니다.</font>
        <br /><font color="red">*테스트를 위해 접근 권한은 제거된 상태입니다.</font>
        - CHANNEL_EVENT.SERVICE_MESSAGE_RECEIVED 로 전달되며 아래의 형식을 가집니다.
          - D: C|
          - M: {전달할 메시지}
      parameters:
      - $ref: '#/components/parameters/cookies/key'
      - $ref: '#/components/parameters/paths/svcKey'
      - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/SendMessage'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/chats/{memKey}/inspector:
    put:
      tags:
        - 채팅
      operationId: EnterChatInspector
      summary: 관전자 참여
      description: |
        <b><font color="blue">#EnterChatInspector</font></b>
        <br />해당 방송자의 방송에 대해 관전자 입장을 위한 정보 생성 처리
        <br /><font color="red">*해당 기능의 요청값(body)값은 암호화 시키지 않습니다.</font>
      parameters:
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/memKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                streamKey:
                  $ref: '#/components/schemas/properties/streamKey'
      responses:
        200:
          description: 성공, 관전자 입장용 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/EnterInspector'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/chats/{memKey}/items/{itemCode}/{state}:
    put:
      tags:
      - 채팅
      operationId: UpdateChatItemUsage
      summary: 채팅 아이템 설정
      description: |
        <b><font color="blue">#UpdateChatItemUsage</font></b>
        <br />해당 방송자의 방송에 대한 현재 사용자의 채팅 아이템 사용 여부 설정 처리
        <br />itemCode는 아래의 값만 사용가능 합니다.
        - IC: 잉크챗
        - CC: 컬러챗
      parameters:
      - $ref: '#/components/parameters/cookies/key'
      - $ref: '#/components/parameters/paths/locale'
      - $ref: '#/components/parameters/paths/svcKey'
      - $ref: '#/components/parameters/paths/memKey'
      - $ref: '#/components/parameters/paths/itemCode'
      - name: state
        in: path
        description: |
          아이템 사용 여부
          - on: 사용
          - off: 미사용
        schema:
          type: string
          enum: ['on', 'off']
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/shop/coins:
    get:
      tags:
        - 코인/아이템
      operationId: GetShopCoins
      summary: 코인(루비) 판매 목록
      description: |
        <b><font color="blue">#GetShopCoins</font></b>
        <br />판매중인 코인(루비) 목록을 반환 합니다.
        <br />자신의 vipLevel에 맞는 판매 목록을 반환합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      responses:
        200:
          description: 성공, 코인(루비) 판매 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      isLogin:
                        type: boolean
                        description: 로그인유무
                      isCellCertify:
                        type: boolean
                        description: 본인인증유무
                      isAdult:
                        type: boolean
                        description: 성인유무
                      isAccountBlocked:
                        type: boolean
                        description: 계정차단유무
                      #vipLevel:
                      #  $ref: '#/components/schemas/properties/vipLevel'
                  payCodes:
                    type: array
                    items:
                      type: number
                      enum: [50, 51, 52, 53, 54, 55, 56]
                      default: [50, 51, 52, 53, 54, 55, 56]
                    description: |
                      결제종류
                      - 50: 휴대폰 결제
                      - 51: 신용카드 결제
                      - 52: 계좌이체 결제
                      - 53: 가상계좌 결제
                      - 54: 도서상품권 결제
                      - 55: 문화상품권 결제
                      - 56: 해피머니상품권 결제
                  coins:
                    type: array
                    items:
                      type: object
                      properties:
                        availablePayCodes:
                          type: array
                          items:
                            type: number
                            enum: [50, 51, 52, 53, 54, 55, 56]
                            default: null
                          description: |
                            사용가능 결제종류
                            - 50: 휴대폰 결제
                            - 51: 신용카드 결제
                            - 52: 계좌이체 결제
                            - 53: 가상계좌 결제
                            - 54: 도서상품권 결제
                            - 55: 문화상품권 결제
                            - 56: 해피머니상품권 결제
                        goodCode:
                          $ref: '#/components/schemas/properties/goodCode'
                        goodCount:
                          type: number
                          description: 판매 갯수
                        vipAddCount:
                          type: number
                          description: VIP등급에 따른 추가 지급 갯수
                        payAmount:
                          type: number
                          description: 판매 금액
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  #/{locale}/{svcKey}/shop/coins/{goodCode}:
  #  put:
  #    tags:
  #    - 코인/아이템
  #    operationId: BuyShopCoin
  #    summary: 코인(루비) 구매
  #    description: |
  #      <b><font color="blue">#BuyShopCoin</font></b>
  #      <br />goodCode로 특정된 코인(루비)을 구매 처리 합니다.

  #      <table>
  #      <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
  #      <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
  #      <tr><td> 0x1087 </td><td> UnsupportedLocaleOrLanguage </td><td> 지원하지 않는 지역/언어입니다 </td></tr>
  #      <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
  #      <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
  #      <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
  #      <tr><td> 0x1091 </td><td> CubicInsufficient </td><td> 큐빅이 부족합니다 </td></tr>
  #      <tr><td> 0x1062 </td><td> VIPLevelInsufficient </td><td> VIP레벨이 구매 가능 범위를 벗어났습니다 </td></tr>
  #      <tr><td> 0x1076 </td><td> VIPLevelExceeded </td><td> VIP레벨이 구매 가능 범위를 벗어났습니다 </td></tr>
  #      <tr><td> Dx1013 </td><td> DBMemberLevelDataReadError </td><td> DB 처리 오류 </td></tr>
  #      <tr><td> Dx0002 </td><td> DBResultDataIsEmpty </td><td> DB 처리 오류 </td></tr>
  #      <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
  #      <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
  #      <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
  #      <tr><td> Dx0901 </td><td> DBTran </td><td> DB 처리 오류 </td></tr>
  #      </table>
  #    parameters:
  #    - $ref: '#/components/parameters/cookies/key'
  #    - $ref: '#/components/parameters/paths/locale'
  #    - $ref: '#/components/parameters/paths/svcKey'
  #    - $ref: '#/components/parameters/paths/goodCode'
  #    requestBody:
  #      required: true
  #      content:
  #        application/json:
  #          schema:
  #            type: object
  #            required:
  #              - exeCode
  #              - payCode
  #            properties:
  #              exeCode:
  #                $ref: '#/components/schemas/properties/exeCode'
  #              payCode:
  #                $ref: '#/components/schemas/properties/payCode'
  #    responses:
  #      200:
  #        $ref: '#/components/schemas/responses/codeOnly/Success'
  #      400:
  #        $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
  #      401:
  #        $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/shop/cubics:
    get:
      tags:
      - 코인/아이템
      operationId: GetShopCubics
      summary: 큐빅 판매 목록
      description: |
        <b><font color="blue">#GetShopCubics</font></b>
        <br />판매중인 큐빅 목록을 반환 합니다.
        <br />자신의 vipLevel에 맞는 판매 목록을 반환합니다.
      parameters:
      - $ref: '#/components/parameters/cookies/keyAny'
      - $ref: '#/components/parameters/paths/locale'
      - $ref: '#/components/parameters/paths/svcKey'
      - $ref: '#/components/parameters/queries/exeCode'
      responses:
        200:
          description: 성공, 큐빅 판매 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      isLogin:
                        type: boolean
                        description: 로그인유무
                      isCellCertify:
                        type: boolean
                        description: 본인인증유무
                      isAdult:
                        type: boolean
                        description: 성인유무
                      isAccountBlocked:
                        type: boolean
                        description: 계정차단유무
                  payCodes:
                    type: array
                    items:
                      type: number
                      enum: [50, 51, 52, 53, 54, 55, 56]
                      default: [50, 51, 52, 53, 54, 55, 56]
                    description: |
                      결제종류
                      - 50: 휴대폰 결제
                      - 51: 신용카드 결제
                      - 52: 계좌이체 결제
                      - 53: 가상계좌 결제
                      - 54: 도서상품권 결제
                      - 55: 문화상품권 결제
                      - 56: 해피머니상품권 결제
                  cubics:
                    type: array
                    items:
                      type: object
                      properties:
                        availablePayCodes:
                          type: array
                          items:
                            type: number
                            enum: [50, 51, 52, 53, 54, 55, 56]
                            default: null
                          description: |
                            사용가능 결제종류
                            - 50: 휴대폰 결제
                            - 51: 신용카드 결제
                            - 52: 계좌이체 결제
                            - 53: 가상계좌 결제
                            - 54: 도서상품권 결제
                            - 55: 문화상품권 결제
                            - 56: 해피머니상품권 결제
                        goodCode:
                          $ref: '#/components/schemas/properties/goodCode'
                        goodCount:
                          type: number
                          description: 판매 갯수
                        payAmount:
                          type: number
                          description: 판매 금액
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/shop/cubics/{goodCode}/iap/{platform}:
    put:
      tags:
        - 코인/아이템
      operationId: BuyCubicInAppPurchase
      summary: 코인(큐빅) 인앱 구매처리
      description: |
        <b><font color="blue">#BuyCubicInAppPurchase</font></b>
        <br />goodCode로 특정된 큐빅에 대해 인앱 구매 처리 합니다.
        <br />platform 별로 요청값이 다르니, 아래에서 확인 후 처리해 주시기 바랍니다.

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2080 </td><td> ParamUnsupportedPlatform </td><td> 지원하지 않는 플랫폼값 입니다 </td></tr>
        <tr><td> 0x2055 </td><td> ParamUnsupportedPayCode </td><td> 지원하지 않는 결제코드 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x1098 </td><td> InAppReceiptValidationRemoteError </td><td> 영수증 검증 원격 서버 오류입니다 </td></tr>
        <tr><td> 0x1097 </td><td> InAppReceiptValidationFailed </td><td> 영수증 검증에 실패 했습니다 </td></tr>
        <tr><td> 0x1099 </td><td> InAppReceiptDuplicated </td><td> 동일 영수증에 대한 중복 처리 요청입니다 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0201 </td><td> DBWrite </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/goodCode'
        - $ref: '#/components/parameters/paths/platform'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  required:
                    - productId
                    - token
                    - exeCode
                  properties:
                    productId:
                      type: string
                      description: |
                        <p style="font-weight:bold; color:red;">platform: google</p>
                        인앱 결제후 반환된 productId 문자열
                    token:
                      type: string
                      description: |
                        <p style="font-weight:bold; color:red;">platform: google</p>
                        인앱 결제후 반환된 token 문자열
                    exeCode:
                      $ref: '#/components/schemas/properties/exeCode'
                - type: object
                  required:
                    - receipt-data
                    - exeCode
                  properties:
                    receipt-data:
                      type: string
                      description: |
                        <p style="font-weight:bold; color:red;">platform: apple</p>
                        인앱 결제후 반환된 receipt 문자열을 base64 문자열로 변환한 문자열
                    exeCode:
                      $ref: '#/components/schemas/properties/exeCode'
                - type: object
                  required:
                    - purchaseId
                    - exeCode
                  properties:
                    purchaseId:
                      type: string
                      description: |
                        <p style="font-weight:bold; color:red;">platform: onestore</p>
                        인앱 결제후 반환된 purchaseId 문자열
                    exeCode:
                      $ref: '#/components/schemas/properties/exeCode'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  #/{locale}/{svcKey}/shop/cubics/{goodCode}:
  #  put:
  #    tags:
  #    - 코인/아이템
  #    operationId: BuyShopCubic
  #    summary: 코인(큐빅) 구매
  #    description: |
  #      <b><font color="blue">#BuyShopCubic</font></b>
  #      <br />goodCode로 특정된 큐빅을 구매 처리 합니다.

  #      <table>
  #      <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
  #      <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
  #      <tr><td> 0x1087 </td><td> UnsupportedLocaleOrLanguage </td><td> 지원하지 않는 지역/언어입니다 </td></tr>
  #      <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
  #      <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
  #      <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
  #      <tr><td> 0x1091 </td><td> CubicInsufficient </td><td> 큐빅이 부족합니다 </td></tr>
  #      <tr><td> 0x1062 </td><td> VIPLevelInsufficient </td><td> VIP레벨이 구매 가능 범위를 벗어났습니다 </td></tr>
  #      <tr><td> 0x1076 </td><td> VIPLevelExceeded </td><td> VIP레벨이 구매 가능 범위를 벗어났습니다 </td></tr>
  #      <tr><td> Dx1013 </td><td> DBMemberLevelDataReadError </td><td> DB 처리 오류 </td></tr>
  #      <tr><td> Dx0002 </td><td> DBResultDataIsEmpty </td><td> DB 처리 오류 </td></tr>
  #      <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
  #      <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
  #      <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
  #      <tr><td> Dx0901 </td><td> DBTran </td><td> DB 처리 오류 </td></tr>
  #      </table>
  #    parameters:
  #    - $ref: '#/components/parameters/cookies/key'
  #    - $ref: '#/components/parameters/paths/locale'
  #    - $ref: '#/components/parameters/paths/svcKey'
  #    - $ref: '#/components/parameters/paths/goodCode'
  #    requestBody:
  #      required: true
  #      content:
  #        application/json:
  #          schema:
  #            type: object
  #            required:
  #              - exeCode
  #              - payCode
  #            properties:
  #              exeCode:
  #                $ref: '#/components/schemas/properties/exeCode'
  #              payCode:
  #                $ref: '#/components/schemas/properties/payCode'
  #    responses:
  #      200:
  #        $ref: '#/components/schemas/responses/codeOnly/Success'
  #      400:
  #        $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
  #      401:
  #        $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/shop/requests/bank/{goodCode}:
    put:
      tags:
      - 코인/아이템
      operationId: AddRequestBank
      summary: 무통장입금 요청
      description: |
        <b><font color="blue">#AddRequestBank</font></b>
        <br />goodCode로 특정된 상품에 대해 무통장입금 요청을 처리합니다.
  /{locale}/{svcKey}/shop/items/{itemCode}:
    get:
      tags:
        - 코인/아이템
      operationId: GetShopItem
      summary: 아이템 정보
      description: |
        <b><font color="blue">#GetShopItem</font></b>
        <br />goodCode로 특정된 아이템의 정보를 반환합니다.
        - 로그인 여부에 따라 반환값이 아래와 같이 변동이 발생합니다.
          - 로그인
            1. res.item
            2. res.user
          - 비로그인
            1. res.item
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/itemCode'
      responses:
        200:
          description: 성공, 아이템 정보
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      item:
                        type: object
                        properties:
                          goodCode:
                            $ref: '#/components/schemas/properties/goodCode'
                          buyAmount:
                            type: number
                            description: 원 큐빅 소요 갯수
                          discount:
                            type: number
                            description: 할인률
                          payAmount:
                            type: number
                            description: 할인율 적용된 큐빅 소요 갯수
                          vipLevelMin:
                            $ref: '#/components/schemas/properties/vipLevelMin'
                          vipLevelMax:
                            $ref: '#/components/schemas/properties/vipLevelMax'
                          itemType:
                            $ref: '#/components/schemas/properties/itemType'
                          count:
                            type: number
                            description: |
                              아이템 사용 횟수/일수
                              - itemType이 0인 경우 -> 횟수
                              - itemType이 1인 경우 -> 일수
                  - type: object
                    properties:
                      user:
                        type: object
                        properties:
                          cubic:
                            $ref: '#/components/schemas/properties/cubic'
                          vipLevel:
                            $ref: '#/components/schemas/properties/vipLevel'
                      item:
                        type: object
                        properties:
                          goodCode:
                            $ref: '#/components/schemas/properties/goodCode'
                          buyAmount:
                            type: number
                            description: 원 큐빅 소요 갯수
                          discount:
                            type: number
                            description: 할인률
                          payAmount:
                            type: number
                            description: 할인율 적용된 큐빅 소요 갯수
                          vipLevelMin:
                            $ref: '#/components/schemas/properties/vipLevelMin'
                          vipLevelMax:
                            $ref: '#/components/schemas/properties/vipLevelMax'
                          itemType:
                            $ref: '#/components/schemas/properties/itemType'
                          count:
                            type: number
                            description: |
                              아이템 사용 횟수/일수
                              - itemType이 0인 경우 -> 횟수
                              - itemType이 1인 경우 -> 일수
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    put:
      tags:
        - 코인/아이템
      operationId: BuyShopItem
      summary: 아이템 구매
      description: |
        <b><font color="blue">#BuyShopItem</font></b>
        <br />goodCode로 특정된 아이템을 구매 처리 합니다.
        1. 잉크챗, 컬러챗 구매시 한정하여
          1. 요청값에 userId값이 포함된 경우, 채팅서버에 변경값을 적용 처리 합니다.
        2. 노티스 구매시 한정하여
          1. 요청값에 txtStr값이 포함되어야 하며, 이때 문자열이 채팅서버를 통해 전달됩니다.
            <br />-------------------------------------
            - 노티스 아이템 사용시, EVENT.SERVICE_MESSAGE_RECEIVED 이벤트 발생
            <br />Message 객체 반환 하며,
            <br />getData():String 을 통해 "D|{nickName}" 형식으로 수신되며,
            <br />getMessage():String 을 통해 API를 통해 전달한 msg값이 수신됩니다.
        3. 라이브업 구매시 한정하여
          1. 요청값에 castMemKey값이 포함되어야 하며, 이는 방송자의 memKey값입니다.
        4. 선물시 한정하여
          1. 요청값에 giftMemKey값이 포함되어야 하며, 이는 선물받는 대상의 memKey값입니다.
          2. 요청값에 txtStr값이 포함되어야 하며, 이는 선물 메시지입니다.

        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> 0x1087 </td><td> UnsupportedLocaleOrLanguage </td><td> 지원하지 않는 지역/언어입니다 </td></tr>
        <tr><td> 0x3001 </td><td> ReqSvcKeyNotMatched </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2002 </td><td> ParamFormatInvalid </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x2003 </td><td> ParamRequiredKeyNotExists </td><td> 잘못된 전달값 입니다 </td></tr>
        <tr><td> 0x1091 </td><td> CubicInsufficient </td><td> 큐빅이 부족합니다 </td></tr>
        <tr><td> 0x1062 </td><td> VIPLevelInsufficient </td><td> VIP레벨이 구매 가능 범위를 벗어났습니다 </td></tr>
        <tr><td> 0x1076 </td><td> VIPLevelExceeded </td><td> VIP레벨이 구매 가능 범위를 벗어났습니다 </td></tr>
        <tr><td> Dx1013 </td><td> DBMemberLevelDataReadError </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0002 </td><td> DBResultDataIsEmpty </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0303 </td><td> DBReadS02 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0304 </td><td> DBReadS03 </td><td> DB 처리 오류 </td></tr>
        <tr><td> Dx0901 </td><td> DBTran </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/itemCode'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - exeCode
              properties:
                exeCode:
                  $ref: '#/components/schemas/properties/exeCode'
                userId:
                  type: string
                  description: |
                    채팅서버 연결에 사용된 userId값
                    잉크챗,컬러챗 구매의 경우, userId값 입력시 채팅서버로 변경값을 바로 전달처리 합니다.
                txtStr:
                  type: string
                  minLength: 1
                  maxLength: 300
                  description: |
                    노티스 구매의 경우 필수값.
                    <br />해당 문자열이 노티스 메시지로 전달됩니다.
                castMemKey:
                  type: number
                  description: |
                    라이브업 구매의 경우 필수값.
                    <br />방송자의 memKey값

      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/support/notices:
    get:
      tags:
        - 지원 센터
      operationId: GetNotices
      summary: 공지 목록
      description: |
        <b><font color="blue">#GetNotices</font></b>
        <br />공지사항 목록을 반환합니다.

        1. importants 항목은 "r_i=1"인 경우에만 반환 합니다.
        2. "r_il"값을 통해 importants 항목의 최대 반환 갯수를 조절 할 수 있습니다.(기본값: 3)
        3. "r_ei=1"인 경우 notices 에 importants 항목의 자료는 제외되어 출력 됩니다.(r_i값과 무관)
          <br />중요 공지를 구분하여 출력을 원하는 경우 "r_ei=1"을 항상 포함하여 사용하는게 좋습니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
        - name: s_t
          in: query
          description: |
            <font color="blue">(s)earch (t)ype</font><br />
            <br />검색 구분값. OR 검색용
          example:
            s_t[]=title&s_t[]=content
          schema:
            type: array
            items:
              type: string
              enum: ['title', 'content']
        - $ref: '#/components/parameters/queries/s_q'
        - name: o_t
          in: query
          description: |
            <font color="blue">(o)rder (t)ype</font><br />
            출력 순서 구분값
            - newest - 최근순
            - oldest - 최근역순
          schema:
            type: string
            enum: ['newest', 'oldest']
            default: 'newest'
        - name: r_i
          in: query
          description: |
            <font color="blue">(r)equest (i)mportant</font><br />
            중요 공지 출력 요청
            - 1 - 요청
            - 0 - 미요청(기본값)
          schema:
            type: number
            enum: [0, 1]
            default: 0
        - name: r_il
          in: query
          description: |
            <font color="blue">(r)equest (i)mportant (l)ength</font><br />
            중요 공지 출력 최대 갯수
            <br />범위를 벗어나는 경우 1 또는 30으로 고정
          schema:
            type: number
            default: 3
            minimum: 1
            maximum: 30
        - name: r_ei
          in: query
          description: |
            <font color="blue">(r)equest (e)xclude (i)mportant</font><br />
            공지 목록내 중요 공지 출력 내용 포함 여부
            - 1 - 포함
            - 0 - 미포함(기본값)
          schema:
            type: number
            enum: [0, 1]
            default: 0
        #- $ref: '#/components/parameters/queries/r_l'
      responses:
        200:
          description: 성공, 공지 목록
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/Notices'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/support/notices/{ixCode}:
    get:
      tags:
        - 지원 센터
      operationId: GetNotice
      summary: 공지 정보
      description: |
        <b><font color="blue">#GetNotice</font></b>
        <br />ixCode로 특정되는 공지사항 정보를 반환합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/ixCode'
      responses:
        200:
          description: 성공, 공지 자료
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models/Notice'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/support/events:
    get:
      tags:
      - 지원 센터
      operationId: GetEvents
      summary: 이벤트 목록
      description: |
        <b><font color="blue">#GetEvents</font></b>
        <br />이벤트 목록을 반환합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl'
        - $ref: '#/components/parameters/queries/r_tc'
      responses:
        200:
          description: 성공, 이벤트 목록
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/Events'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/support/events/{ixCode}:
    get:
      tags:
        - 지원 센터
      operationId: GetEvent
      summary: 이벤트 정보
      description: |
        <b><font color="blue">#GetEvent</font></b>
        <br />이벤트 상세 정보를 반환합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/ixCode'
      responses:
        200:
          description: 성공, 이벤트 상세 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models/EventView'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/rankings/{recurrence}:
    get:
      tags:
        - 랭킹
      operationId: GetRankings
      summary: 랭킹 목록
      description: |
        <b><font color="blue">#GetRankings</font></b>
        <br />랭킹 목록을 반환합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - $ref: '#/components/parameters/paths/recurrence'
        - $ref: '#/components/parameters/queries/p'
        - $ref: '#/components/parameters/queries/pl_50'
        - $ref: '#/components/parameters/queries/r_tc'
      responses:
        200:
          description: 성공, 랭킹 목록
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/Rankings'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/util/system-profiles:
    get:
      tags:
        - 유틸리티
      operationId: GetSystemProfiles
      summary: 시스템 프로필 목록
      description: |
        <b><font color="blue">#GetSystemProfiles</font></b>
        <br />시스템 지정된 프로필 이미지 목록을 반환합니다.
        <table>
        <tr><td colspan="3" style="background-color:#656565; color:#ffffff;"><b>발생 오류 코드 및 메시지 설정</b></td></tr>
        <tr><td> <b>코드</b> </td><td> <b>코드명</b> </td><td> <b>표시 메시지</b> </td></tr>
        <tr><td> Dx0302 </td><td> DBReadS01 </td><td> DB 처리 오류 </td></tr>
        </table>
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      responses:
        200:
          description: 성공, 프로필 이미지 목록
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/SystemProfileResult'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/util/country-codes:
    get:
      tags:
        - 유틸리티
      operationId: GetCountryCodes
      summary: 국가번호 목록
      description: |
        <b><font color="blue">#GetCountryCodes</font></b>
        <br />국가별 전화번호 목록을 반환합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      responses:
        200:
          description: 성공, 국가 전화번호 목록 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/CountryCodeResult'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/util/vulgar-words:
    get:
      tags:
        - 유틸리티
      operationId: GetVulgarWords
      summary: 비속어 목록
      description: |
        <b><font color="blue">#GetVulgarWords</font></b>
        <br />필터링 대상이 되는 비속어 목록을 반환합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      responses:
        200:
          description: 성공, 비속어 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  vulgarWords:
                    type: array
                    items:
                      type: string
                    description: |
                      필터링 대상이 되는 비속어 단어 목록
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/util/coin-info:
    get:
      tags:
        - 유틸리티
      operationId: GetCoinInfo
      summary: 코인 목록
      description: |
        <b><font color="blue">#GetCoinInfo</font></b>
        <br />선물 코인 목록을 반환합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      responses:
        200:
          description: 성공, 선택가능한 선물 코인 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    description: 메타 정보
                    properties:
                      version:
                        type: string
                        description: 버전정보
                      categories:
                        type: array
                        description: 카테고리 정보
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                              enum: ['joy', 'shy', 'sad', 'anger', 'pain', 'adult']
                              description: 카테고리 키값
                            coinSkin:
                              $ref: '#/components/schemas/properties/coinSkin'
                            label:
                              type: object
                              description: 카테고리 표기값(언어별)
                              properties:
                                kokr:
                                  type: string
                                  description: 표기값(한국어)
                                enus:
                                  type: string
                                  description: 표기값(영어)
                                jajp:
                                  type: string
                                  description: 표기값(일본어)
                                zhcn:
                                  type: string
                                  description: 표기값(중국어/간체)
                      baseUrl:
                        type: string
                        description: url prefix값
                      missionUrl:
                        type: string
                        description: 미션 이미지 url값
                  plains:
                    type: array
                    description: 카테고리에 포함되지 않은 코인값에 대한 표기 정보
                    items:
                      type: object
                      properties:
                        value:
                          type: object
                          description: 표기 범위값
                          properties:
                            min:
                              type: number
                              description: 표기 하한값
                            max:
                              type: number
                              description: 표기 상한값
                        url:
                          type: string
                          description: 이미지 경로, metadata.baseUrl 값과 합쳐서 사용
                        msg:
                          type: object
                          description: 표기값(언어별)
                          properties:
                            kokr:
                              type: string
                              description: 표기값(한국어)
                            enus:
                              type: string
                              description: 표기값(영어)
                            jajp:
                              type: string
                              description: 표기값(일본어)
                            zhcn:
                              type: string
                              description: 표기값(중국어/간체)
                  categories:
                    type: object
                    description: 카테고리에 포함된 코인값에 대한 표기 정보
                    properties:
                      '{metadata.categories.key}':
                        type: array
                        items:
                          type: object
                          properties:
                            value:
                              type: number
                              description: 표기값
                            url:
                              type: string
                              description: 이미지 경로, metadata.baseUrl 값과 합쳐서 사용
                            msg:
                              type: object
                              description: 메시지 표기값(언어별)
                              properties:
                                kokr:
                                  type: string
                                  description: 표기값(한국어)
                                enus:
                                  type: string
                                  description: 표기값(영어)
                                jajp:
                                  type: string
                                  description: 표기값(일본어)
                                zhcn:
                                  type: string
                                  description: 표기값(중국어/간체)
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/util/coin-info/version:
    get:
      tags:
      - 유틸리티
      operationId: GetCoinInfoVersion
      summary: 코인 목록 버전
      description: |
        <b><font color="blue">#GetCoinInfoVersion</font></b>
        <br />선물 코인 목록의 현재 버전 정보를 반환합니다.
      parameters:
      - $ref: '#/components/parameters/cookies/keyAny'
      - $ref: '#/components/parameters/paths/locale'
      - $ref: '#/components/parameters/paths/svcKey'
      responses:
        200:
          description: 성공, 선물 코인 목록의 현재 버전 정보 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    description: 버전 정보
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/util/send-coins:
    get:
      tags:
        - 유틸리티
      operationId: GetAllSendCoins
      summary: 선물용 코인 목록(X)
      description: |
        <b><font color="blue">#GetAllSendCoins</font></b>
        <br />선물 코인 목록을 반환합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - name: themaGroup
          in: path
          description: |
            테마그룹
            - 1: 하트
            - 2: 장미
            - 3: 루비
          schema:
            type: number
            enum: [1, 2, 3]
      responses:
        200:
          description: 성공, 선택가능한 선물 코인 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  coins:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum: ['N', 'S']
                          description: |
                            코인 구분
                            - N: 일반
                            - S: 스페셜
                        themaGroup:
                          type: number
                          enum: [1, 2, 3]
                          description: |
                            테마그룹
                            - 1: 하트
                            - 2: 장미
                            - 3: 루비
                        step:
                          type: number
                          default: 1
                          description: 표현단계
                        value:
                          type: number
                          default: 10
                          description: 표현단계별 기본값
                        rangeMinimum:
                          type: number
                          default: 1
                          description: 표현단계별 최저값
                        rangeMaximum:
                          type: number|null
                          default: null
                          description: |
                            표현단계별 최대값
                            <br />null인 경우 제한 없음
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/util/send-coins/{themaGroup}:
    get:
      tags:
        - 유틸리티
      operationId: GetAllSendCoinsByThemaGroup
      summary: 선물용 코인 목록(X)
      description: |
        <b><font color="blue">#GetAllSendCoinsByThemaGroup</font></b>
        <br />지정된 테마그룹별 선물 코인 목록을 반환합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyAny'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
        - name: themaGroup
          in: path
          description: |
            테마그룹
            - 1: 하트
            - 2: 장미
            - 3: 루비
          schema:
            type: number
            enum: [1, 2, 3]
      responses:
        200:
          description: 성공, 선택가능한 선물 코인 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  coins:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum: ['N', 'S']
                          description: |
                            코인 구분
                            - N: 일반
                            - S: 스페셜
                        themaGroup:
                          type: number
                          enum: [1, 2, 3]
                          description: |
                            테마그룹
                            - 1: 하트
                            - 2: 장미
                            - 3: 루비
                        step:
                          type: number
                          default: 1
                          description: 표현단계
                        value:
                          type: number
                          default: 10
                          description: 표현단계별 기본값
                        rangeMinimum:
                          type: number
                          default: 1
                          description: 표현단계별 최저값
                        rangeMaximum:
                          type: number|null
                          default: null
                          description: |
                            표현단계별 최대값
                            <br />null인 경우 제한 없음
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/wowza/casts:
    post:
      tags:
        - wowza
      operationId: WowzaSetCast
      summary: 방송시작 for Wowza
      description: |
        <b><font color="blue">#WowzaSetCast</font></b>
        <br />Wowza 서버를 통해 들어온 방송 시작 요청에 대해 응답합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyWowza'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/WowzaSetCast'
      responses:
        200:
          description: 성공, 방송 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models/WowzaSetCast'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
    delete:
      tags:
        - wowza
      operationId: WowzaRemoveCast
      description: |
        Wowza 서버를 통해 들어온 방송 종료 요청에 대해 응답합니다.
      parameters:
        - $ref: '#/components/parameters/cookies/keyWowza'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests/WowzaRemoveCast'
      responses:
        200:
          $ref: '#/components/schemas/responses/codeOnly/Success'
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/downloads/accounts/{memKey}/ids/{ixCode}:
    get:
      tags:
        - 파일다운로드
      operationId: DownloadIdFile
      summary: 신분증
      description: |
        <b><font color="blue">#DownloadIdFile</font></b>
        <br />신분증 파일 다운로드 처리, AES256으로 암호화된 파일을 다운로드 합니다.
        - ixCode는 MemPayRequestTemp_Data_R.ixCode
        <!-- encryptFileName는 MemPayRequestTemp_Data_R.idCopyFile에서 특수문자 제외한 문자열 -->

        <br /><font color="red">*관리자 계정만 접근 가능합니다.</font>
      parameters:
      - $ref: '#/components/parameters/cookies/key'
      - $ref: '#/components/parameters/paths/locale'
      - $ref: '#/components/parameters/paths/svcKey'
      - $ref: '#/components/parameters/paths/memKey'
      - $ref: '#/components/parameters/paths/ixCode'
      responses:
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/downloads/accounts/{memKey}/banks/{ixCode}:
    get:
      tags:
      - 파일다운로드
      operationId: DownloadBankFile
      summary: 통장
      description: |
        <b><font color="blue">#DownloadBankFile</font></b>
        <br />통장 파일 다운로드 처리, AES256으로 암호화된 파일을 다운로드 합니다.
        - ixCode는 MemPayRequestTemp_Data_R.ixCode
        <!--encryptFileName는 MemPayRequestTemp_Data_R.bankCopyFile에서 특수문자 제외한 문자열-->

        <br /><font color="red">*관리자 계정만 접근 가능합니다.</font>
      parameters:
      - $ref: '#/components/parameters/cookies/key'
      - $ref: '#/components/parameters/paths/locale'
      - $ref: '#/components/parameters/paths/svcKey'
      - $ref: '#/components/parameters/paths/memKey'
      - $ref: '#/components/parameters/paths/ixCode'
      responses:
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'
  /{locale}/{svcKey}/translate:
    post:
      tags:
        - 번역
      operationId: Translate
      summary: 번역
      description: |
        <b><font color="blue">#Translate</font></b>
        문자열을 번역하여 반환합니다.
        <br /><font color="red">*GlobalChat 아이템 소유한 경우만 사용가능 합니다.</font>
      parameters:
        - $ref: '#/components/parameters/cookies/key'
        - $ref: '#/components/parameters/paths/locale'
        - $ref: '#/components/parameters/paths/svcKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - memKey
                #- source
                - target
                - q
              properties:
                memKey:
                  $ref: '#/components/schemas/properties/memKey'
                #source:
                #  type: string
                #  minLength: 2
                #  enum: ['ko', 'en', 'ja', 'zh-CN']
                #  description: |
                #    번역 소스 언어
                #    - ko: 한국어
                #    - en: 영어
                #    - ja: 일본어
                #    - zh-CN: 중문(간체)
                target:
                  type: string
                  minLength: 2
                  enum: ['ko-kr', 'en-us', 'ja-jp', 'zh-cn', 'mn-mn']
                  description: |
                    번역 대상 언어
                    - ko-kr: 한국어
                    - en-us: 영어
                    - ja-jp: 일본어
                    - zh-cn: 중국어(간체)
                    - mn-mn: 몽골어
                q:
                  type: string
                  minLength: 1
                  maxLength: 50
                  description: 번역 요청 문자열
      responses:
        200:
          description: 성공, 번역 결과 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  translate:
                    type: object
                    properties:
                      source:
                        type: string
                        enum: ['ko', 'en', 'ja', 'zh-CN']
                        description: |
                          번역 소스 언어
                          - ko: 한국어
                          - en: 영어
                          - ja: 일본어
                          - zh-CN: 중문(간체)
                      target:
                        type: string
                        enum: ['ko', 'en', 'ja', 'zh-CN']
                        description: |
                          번역 대상 언어
                          - ko: 한국어
                          - en: 영어
                          - ja: 일본어
                          - zh-CN: 중문(간체)
                      txtStr:
                        type: string
                        description: 번역 결과 문자열
        400:
          $ref: '#/components/schemas/responses/codeOnly/WrongRequest'
        401:
          $ref: '#/components/schemas/responses/codeOnly/AuthenticationFail'


components:

  parameters:

    cookies:

      keyAny:
        name: key
        in: cookie
        description: |
          <font color="orange">정상 요청 확인을 위한 암호화 문자열</font> or
          <font color="red">사용자 인증을 위한 암호화 문자열</font>
        required: true
        schema:
          type: string

      keyEmpty:
        name: key
        in: cookie
        description: |
          <font color="orange">정상 요청 확인을 위한 암호화 문자열</font>
        required: true
        schema:
          type: string

      key:
        name: key
        in: cookie
        description: |
          <font color="red">사용자 인증을 위한 암호화 문자열</font>
        required: true
        schema:
          type: string

      keyWowza:
        name: key
        in: cookie
        description: |
          <font color="blue">Wowza 서버를 통한 요청 확인용 지정된 문자열</font><br />
          <font color="red">"wdCwwAoV5kl93gHl5Au/4apFwbhoqK2BrrHSOPJnteTmDz=="</font>
        required: true
        schema:
          type: string

    paths:

      locale:
        name: locale
        in: path
        description: |
          언어/국가 구분을 위해 사용 되며 아래의 값 중 하나만 사용 가능 합니다.
          - ko-kr : 한국어/한국
          - en-us : 영어/미국
          - ja-jp : 일본어/일본
          - zh-cn : 중국어(간체)/중국
          - mn-mn : 몽골어/몽골
        required: true
        style: form
        schema:
          type: string
          enum: ['ko-kr', 'en-us', 'ja-jp', 'zh-cn', 'mn-mn']

      accLoc:
        name: accLoc
        in: path
        required: true
        description: |
          사용자 서비스가입/로그인 계정 위치
          - naver: 네이버(사용X)
          - kakao: 카카오
          - google: 구글
          - facebook: 페이스북
          - apple: apple login
        schema:
          type: string
          enum: ['naver', 'kakao', 'google', 'facebook', 'apple']

      themaGroup:
        name: themaGroup
        in: path
        description: |
          코인 구분(하트/장미/루비)
          - 1: 하트
          - 2: 장미
          - 3: 루비
        required: true
        style: form
        schema:
          type: number
          enum: [1, 2, 3]

      coinType:
        name: coinType
        in: path
        description: 코인 구분(일반/스페셜)
        required: true
        style: form
        schema:
          type: string
          enum: ['normal', 'special']
          default: normal

      itemType:
        name: itemType
        in: path
        description: |
          아이템 구분
          - changenickname: 체인지닉네임
          - colorchat: 컬러쳇
          - colorlist: 컬러리스트
          - freeview: 프리뷰
          - hotlist: 핫리스트
          - inkchat: 잉크쳇
          - joinbar: 조인바
          - notice: 노티스
          - plusmanager: 플러스매니저
          - plusview: 플러스뷰
        required: true
        style: form
        schema:
          type: string
          enum: ['changenickname', 'colorchat', 'colorlist', 'freeview', 'hotlist', 'inkchat', 'joinbar', 'notice', 'plusmanager', 'plusview']

      goodCode:
        name: goodCode
        in: path
        description: 상품코드
        required: true
        style: form
        schema:
          type: string
          maxLength: 50

      platform:
        name: platform
        in: path
        description: |
          플랫폼 제공자
          - apple: ios
          - google: aos
          - onestore: aos-sk
        required: true
        style: form
        schema:
          type: string
          enum: ['apple', 'google', 'onestore']

      groupCode:
        name: groupCode
        in: path
        description: 업적 그룹코드
        required: true
        style: form
        schema:
          type: number

      missionStep:
        name: missionStep
        in: path
        description: 업적 그룹별 미션 단계 코드
        required: true
        style: form
        schema:
          type: number

      svcKey:
        name: svcKey
        in: path
        description: 서비스사 구분을 위한 키값. <font color="red">"F0F06126929A5F62110331EE91952AD9"</font>
        required: true
        style: form
        schema:
          type: string

      svcID:
        name: svcID
        in: path
        description: 회원 Id
        required: true
        style: form
        schema:
          type: string

      castSvcID:
        name: castSvcID
        in: path
        description: 처리 대상 회원의 key
        required: true
        style: form
        schema:
          type: string

      targetSvcID:
        name: targetSvcID
        in: path
        description: 처리 대상 회원의 key
        required: true
        style: form
        schema:
          type: string

      memKey:
        name: memKey
        in: path
        description: 회원 index
        required: true
        style: form
        schema:
          type: number

      castMemKey:
        name: castMemKey
        in: path
        description: 방송자 index
        required: true
        style: form
        schema:
          type: number

      targetMemKey:
        name: targetMemKey
        in: path
        description: 처리 대상 회원 index
        required: true
        style: form
        schema:
          type: number

      followingMemKey:
        name: followingMemKey
        in: path
        description: 팔로잉 대상 회원 index
        required: true
        style: form
        schema:
          type: number

      watchMemKey:
        name: watchMemKey
        in: path
        description: 시청 회원 index
        required: true
        style: form
        schema:
          type: number

      page:
        name: page
        in: path
        description: 현제 페이지값
        required: true
        style: form
        schema:
          type: number

      castDTCode:
        name: castDTCode
        in: path
        description: |
          방송코드 (DTCode 형태의 14자리 시간코드)
        required: true
        style: form
        schema:
          type: string

      recurrence:
        name: recurrence
        in: path
        description: |
          반복구분
          - monthly: 월별
          - weekly: 주별
          - daily: 일별
        required: true
        style: form
        schema:
          type: string
          enum: [monthly, weekly, daily]
          default: daily

      exeCode:
        name: exeCode
        in: path
        description: |
          사용자 접근 기기 구분값
          - 0: 정보없음
          - 1: Web Mobile
          - 2: Web PC
          - 3: WIN Application
          - 4: MAC Application
          - 5: iOS 모바일(앱스토어)
          - 6: iOS 모바일(엔터)
          - 7: iOS 패드(앱스토어)
          - 8: iOS 패드(엔터)
          - 9: AOS App mobile (googlever.) 
          - 10: AOS App mobile (onestore(sk) ver.) 
          - 11: AOS App mobile (down ver.)
          - 12: AOS
        required: true
        style: form
        schema:
          type: string
          enum: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]

      ixCode:
        name: ixCode
        in: path
        description: 특정자료의 index값
        required: true
        style: form
        schema:
          type: number
          minimum: 1

      state:
        name: state
        in: path
        description: 사용 여부 설정
        required: true
        style: form
        schema:
          type: number
          enum: [0, 1]

      stateBool:
        name: state
        in: path
        description: |
          사용 여부 설정
          - true: 사용 처리
          - false: 미사용 처리
        required: true
        schema:
          type: string
          enum: [true, false]

      year:
        name: year
        in: path
        description: 년, YYYY형식
        style: form
        schema:
          type: number

      month:
        name: month
        in: path
        description: 월, M/MM형식
        style: form
        schema:
          type: number

      day:
        name: day
        in: path
        description: 일, D/DD형식
        style: form
        schema:
          type: number

      itemCode:
        name: itemCode
        in: path
        required: true
        style: form
        schema:
          type: string
          enum: ['CN', 'FV', 'JB', 'NO', 'PV', 'PM', 'CC', 'IC', 'HL', 'CL', 'LU', 'AN', 'GC']
          description: |
            아이템 구분 코드
            - CN: ChangeNickName
            - FV: FreeView
            - JB: JoinBar
            - NO: Notice
            - PV: PlusView
            - PM: PlusManager
            - CC: ColorChat
            - IC: InkChat
            - HL: HotList
            - CL: ColorList
            - LU: LiveUp
            - AN: Anonymous
            - GC: GlobalChat

    queries:

      p:
        name: p
        in: query
        description: |
          <font color="blue">(p)age</font><br />
          요청 페이지 값. 미설정시 1
        schema:
          type: number
          minimum: 1

      pl:
        name: pl
        in: query
        description: |
          <font color="blue">(p)age (l)ength</font><br />
          페이징 사용시 페이지별 출력 갯수<br />
          범위를 벗어난 경우 1 또는 30으로 강제 수정
        schema:
          type: number
          minimum: 1
          maximum: 30

      pl_50:
        name: pl
        in: query
        description: |
          <font color="blue">(p)age (l)ength</font><br />
          페이징 사용시 페이지별 출력 갯수<br />
          범위를 벗어난 경우 1 또는 50으로 강제 수정
        schema:
          type: number
          minimum: 1
          maximum: 50
          default: 50

      r_tc:
        name: r_tc
        in: query
        description: |
          <font color="blue">(r)equest (t)otal (c)ount</font><br />
          전체 갯수 요청. 반환은 metadata.totalCnt
          - 0: 사용안함
          - 1: 사용함
        schema:
          type: number
          enum: [0, 1]
          default: 0

      o_t:
        name: o_t
        in: query
        description: |
          <font color="blue">(o)rder (t)ype</font><br />
          출력 순서 구분값
          - newest - 최근순
          - oldest - 최근역순
          - wmost - 시청자순
          - wleast - 시청자역순
          - lmost - 좋아요순
          - lleast - 좋아요역순
        schema:
          type: string
          enum: ['newest', 'oldest', 'wmost', 'wleast', 'lmost', 'lleast']
          default: 'newest'

      r_l:
        name: r_l
        in: query
        description: |
          <font color="blue">(r)equest (l)anguage</font>
          <br />현재 클라이언트에서 사용중인 언어별 구분을 위한 요청값
          <br />언어 코드는 <a href="https://www.iso.org/iso-639-language-codes.html">[ISO 639 Alpha-2]</a>를 기준으로 합니다.
            - 한국어 - "ko"
            - 영어 - "en"
            - 일본어 - "ja"
        schema:
          type: string
          enum: ['ko', 'en', 'ja']
          default: 'ko'

      s_sd:
        name: s_sd
        in: query
        description: |
          <font color="blue">(s)earch (s)tart (d)ate</font><br />
          검색 시작일, YYYYMMDD 형식
          <br />전달값이 없는 경우 현재일자를 사용합니다.
        schema:
          type: string
          default: 현재일자

      s_ed:
        name: s_ed
        in: query
        description: |
          <font color="blue">(s)earch (e)nd (d)ate</font><br />
          검색 종료일, YYYYMMDD 형식
          <br />전달값이 없는 경우 현재일자를 사용합니다.
        schema:
          type: string
          default: 현재일자

      streamKey:
        name: key
        in: query
        description: |
          관전자 정보 생성위한 확인용 streamKey값
        schema:
          type: string

      r_uoc:
        name: r_uoc
        in: query
        description: |
          <font color="blue">(r)equest (u)ser (o)wned (c)ount</font><br />
          현재 사용자가 해당 아이템을 소유하고 있는 갯수를 목록에 추가하여 반환합니다.
          <br />반환은 coins.userOwnedCount:number
          <br /><font color="red">coinType=special && r_uoc=1인 경우 로그인 사용자만 접근 가능합니다.</font>
          - 0: 사용안함
          - 1: 사용함
        schema:
          type: number
          enum: [0, 1]
          default: 0

      tt:
        name: tt
        in: query
        description: |
          <font color="blue">cast(t)arget(t)ype</font><br />
          일반/회원레벨/팬레벨 제한 방송 필터
          <br />[팬][레벨][일반] 3자리 2진수를 10진수로 표현한 값
          <br />범위를 벗어난 경우 7 고정
          - 1: 일반 방송만
          - 2: 회원레벨 방송만
          - 3: 일반/회원레벨 방송만
          - 4: 팬레벨 방송만
          - 5: 일반/팬레벨 방송만
          - 6: 회원레벨/팬레벨 방송만
          - 7: 일반/회원/팬레벨 방송만
        schema:
          type: number
          enum: [1, 2, 3, 4, 5, 6, 7]
          default: 7

      search_q:
        name: q
        in: query
        description: |
          <font color="blue">(q)uery</font><br />
          요청 구분
          - recommend - 추천 검색어
        schema:
          type: string
          enum: ['recommend']

      s_t:
        name: s_t
        in: query
        description: |
          <font color="blue">(s)earch (t)ype</font><br />
          검색 구분
        schema:
          type: string

      s_t_nickonly:
        name: s_t
        in: query
        description: |
          <font color="blue">(s)earch (t)ype</font><br />
          검색 구분
          - nickname: 닉네임
        schema:
          type: string
          enum: ['nickname']

      s_t_notice:
        name: s_t
        in: query
        description: |
          <font color="blue">(s)earch (t)ype</font><br />
          검색 구분
          - title: 제목
          - content: 내용
        schema:
          type: string
          enum: ['title', 'content']

      s_t_availableonly:
        name: s_t
        in: query
        description: |
          <font color="blue">(s)earch (t)ype</font><br />
          검색 구분
          - available: 사용가능
        schema:
          type: string
          enum: ['available']

      s_q_availableonly:
        name: s_q
        in: query
        description: |
          <font color="blue">(s)earch (q)uery</font><br />
          사용가능 여부 필터값, s_q값이 비어 있으면 전체 목록을 반환합니다.
          - 0: 사용불가(사용된 항목)
          - 1: 사용가능(미사용된 항목)
        schema:
          type: string
          enum: [0, 1]

      s_t_codeonly:
        name: s_t
        in: query
        description: |
          <font color="blue">(s)earch (t)ype</font><br />
          검색 구분
          - code: 아이템 구분 코드
        schema:
          type: string
          enum: ['code']

      s_q_codeonly:
        name: s_q
        in: query
        description: |
          <font color="blue">(s)earch (q)uery</font><br />
          사용가능 여부 필터값, s_q값이 비어 있으면 전체 목록을 반환합니다.
          - changenickname: 체인지닉네임
          - colorchat: 컬러쳇
          - colorlist: 컬러리스트
          - freeview: 프리뷰
          - hotlist: 핫리스트
          - inkchat: 잉크쳇
          - joinbar: 조인바
          - notice: 노티스
          - plusmanager: 플러스매니저
          - plusview: 플러스뷰
        schema:
          type: string
          enum: ['changenickname', 'colorchat', 'colorlist', 'freeview', 'hotlist', 'inkchat', 'joinbar', 'notice', 'plusmanager', 'plusview']

      s_q:
        name: s_q
        in: query
        description: |
          <font color="blue">(s)earch (q)uery</font><br />
          검색 문자열
        schema:
          type: string
          minLength: 1
          maxLength: 20

      s_a:
        name: s_a
        in: query
        description: |
          <font color="blue">(s)earch (a)vailable</font><br />
          사용(이용) 가능하거나 불가능한 목록 검색
          <br /><i>값을 지정한 경우만 검색에 반영됩니다.</i>
          - 0: 사용 불가한 것만
          - 1: 사용 가능한 것만
        schema:
          type: number
          enum: [0, 1]

      memKey:
        name: memKey
        in: query
        minLength: 2
        description: 회원 키값
        schema:
          type: number
      
      exeCode:
        name: exeCode
        in: query
        description: |
          사용자 접근 기기 구분값
          - 0: 정보없음
          - 1: Web Mobile
          - 2: Web PC
          - 3: WIN Application
          - 4: MAC Application
          - 5: iOS 모바일(앱스토어)
          - 6: iOS 모바일(엔터)
          - 7: iOS 패드(앱스토어)
          - 8: iOS 패드(엔터)
          - 9: AOS App mobile (googlever.) 
          - 10: AOS App mobile (onestore(sk) ver.) 
          - 11: AOS App mobile (down ver.)
          - 12: AOS
        required: false
        style: form
        schema:
          type: string
          enum: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
          
  schemas:

    requests:

      requestLeave:
        type: object
        required:
          - exeCode
        properties:
          exeCode:
            $ref: '#/components/schemas/properties/exeCode'

      castDTCodeOnly:
        type: object
        properties:
          castDTCode:
            $ref: '#/components/schemas/properties/castDTCode'

      castDTCode:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/followingMemKey'
          castDTCode:
            $ref: '#/components/schemas/properties/castDTCode'

      memKey:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/targetMemKey'
          castDTCode:
            $ref: '#/components/schemas/properties/castDTCode'

      AddComment:
        type: object
        required:
        - txtStr
        properties:
          txtStr:
            type: string
            description: 댓글 내용
            maxLength: 300
          isPrivate:
            type: boolean
            default: false
            description: |
              공개/비공개 여부
              - true: 비공개
              - false: 공개

      WowzaSetCast:
        type: object
        required:
        - exeCode
        properties:
          streamKey:
            $ref: '#/components/schemas/properties/streamKey'
          exeCode:
            $ref: '#/components/schemas/properties/exeCode'

      WowzaRemoveCast:
        type: object
        required:
        - memKey
        properties:
          memKey:
            $ref: '#/components/schemas/properties/castMemKey'

      QuestionAdd:
        type: object
        required:
          - category
          - txtStr
        properties:
          data:
            type: string
            description: |
              - 아래의 형식의 json 문자열을 암호화 처리한 문자열
                <br />{
                <br />&nbsp;&nbsp;&nbsp;&nbsp;"category": "",
                <br />&nbsp;&nbsp;&nbsp;&nbsp;"txtStr": ""
                <br />}
              - 각 항목별 설명
                - category: 질문 카테고리, 값은 아래 참조
                  - 0: 라이브 방송 및 시청
                  - 1: 채팅하기
                  - 2: 채널 및 콘텐츠 관리
                  - 3: 수익 및 정산
                  - 4: 구매 및 환불
                  - 5: 오류 및 장애
                  - 6: 이용제한 및 규제
                  - 8: 이벤트
                  - 7: 기타
                - txtStr: 문의 내용, 4000자 이내
          #category:
          #  $ref: '#/components/schemas/properties/categoryInquire'
          #txtStr:
          #  type: string
          #  description: 문의 내용
          #  maxLength: 4000
          attach:
            type: array
            description: 첨부파일, 최대 3개 까지만 사용 가능, 용량 합이 10MByte 이하만 허용
            items:
              type: string
              format: binary

      SMSCertCodeIssue:
        type: object
        required:
        - countryCode
        - cellNumber
        properties:
          countryCode:
            $ref: '#/components/schemas/properties/countryCode'
          cellNumber:
            $ref: '#/components/schemas/properties/cellNumber'

      SMSCertCodeCheck:
        type: object
        required:
        - countryCode
        - cellNumber
        - certifyCode
        - certifyToken
        properties:
          countryCode:
            $ref: '#/components/schemas/properties/countryCode'
          cellNumber:
            $ref: '#/components/schemas/properties/cellNumber'
          certifyCode:
            type: string
            description: 인증 확인을 위한 코드값
            minLength: 6
            maxLength: 6
          certifyToken:
            $ref: '#/components/schemas/properties/certifyToken'

      AddAppCount:
        type: object
        required:
        - ptnKey
        - exeCode
        - accLoc
        properties:
          #ptnKey:
          #  type: string
          #  description: 파트너사 코드
          mktKey:
            $ref: '#/components/schemas/properties/mktKey'
          exeCode:
            $ref: '#/components/schemas/properties/exeCode'
          accLoc:
            $ref: '#/components/schemas/properties/accLoc'

      ChannelFreeze:
        type: object
        properties:
          status:
            type: number
            enum: [0, 1]
            description: |
              채팅 제한 여부
              - 0: 제한 해제
              - 1: 제한 설정
          code:
            type: string
            description: 채팅 제한시 클라이언트에 전달할 코드값(임의값)
          userTypes:
            type: array
            description: |
              채팅 제한시 제한 대상이 될 userType(채팅서버 사용 값) 배열
              <br /><font color="red">*status값이 1인 경우 사용</font>
              - 0: 관리자
              - 1: 방송자
              - 2: 매니저
              - 5: 일반회원
            items:
              type: string
              enum: ['0', '1', '2', '5']

      ChannelBlock:
        type: object
        properties:
          status:
            type: number
            enum: [0, 1]
            description: |
              방송 제한 여부
              - 0: 제한 해제
              - 1: 제한 설정
          code:
            type: string
            description: 방송 제한시 클라이언트에 전달할 코드값(임의값)

      ChannelKick:
        type: object
        properties:
          memKey:
            type: number
            description: 강퇴 처리 대상 사용자 memKey
          code:
            type: string
            description: 강퇴시 클라이언트에 전달할 코드값(임의값)

      ChannelWarn:
        type: object
        properties:
          memKey:
            type: number
            description: 경고 처리 대상 사용자 memKey
          #code:
          #  type: string
          #  description: 경고시 클라이언트에 전달할 코드값(임의값)

      ChannelAlert:
        type: object
        properties:
          code:
            type: string
            description: 클라이언트에 전달할 코드값(임의값)
          reason:
            type: string
            description: 자료 기록용 제재 사유
            maxLength: 3000

      ChannelNotice:
        type: object
        properties:
          data:
            type: string
            description: 전달할 데이타 문자열
            minLength: 1
            maxLength: 300
          message:
            type: string
            description: 전달할 메시지
            minLength: 1
            maxLength: 300

      SendMessage:
        type: object
        properties:
          message:
            type: string
            description: 전달할 메시지
            maxLength: 300

      ActionGiftCoin:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          castMemKey:
            $ref: '#/components/schemas/properties/castMemKey'
          castDTCode:
            $ref: '#/components/schemas/properties/castDTCode'
          useCoin:
            $ref: '#/components/schemas/properties/useCoin'
          themaGroup:
            $ref: '#/components/schemas/properties/themaGroup'

      ActionGiftSPCoin:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          castMemKey:
            $ref: '#/components/schemas/properties/castMemKey'
          castDTCode:
            $ref: '#/components/schemas/properties/castDTCode'
          coinCode:
            type: string
            description: |
              선물하는 스페셜 코인 코드
              <br /><font color="red">(스페셜 코인 선물의 경우)</font>

      EnterCast:
        type: object
        required:
          - exeCode
        properties:
          password:
            type: string
            description: lock 상태의 방송에 진입하는 경우 사용할 비번
            maxLength: 20
          exeCode:
            $ref: '#/components/schemas/properties/exeCode'

      UpdateCastPreset:
        type: object
        properties:
          Title:
            $ref: '#/components/schemas/properties/Title'
          Tag:
            $ref: '#/components/schemas/properties/Tag'
          castTargetType:
            $ref: '#/components/schemas/properties/castTargetType'
          castTargetLevel:
            $ref: '#/components/schemas/properties/castTargetLevel'
          setViewCnt:
            $ref: '#/components/schemas/properties/setViewCnt'
          isLock:
            $ref: '#/components/schemas/properties/isLock'
          lockPassword:
            $ref: '#/components/schemas/properties/lockPassword'
          isAdult:
            $ref: '#/components/schemas/properties/isAdult'
          viewType:
            $ref: '#/components/schemas/properties/viewType'

      UpdateCertify:
        type: object
        properties:
          exeCode:
            $ref: '#/components/schemas/properties/exeCode'
            #countryCode:
            #  $ref: '#/components/schemas/properties/countryCode'
            #cellNumber:
            #  $ref: '#/components/schemas/properties/cellNumber'
            #sex:
            #  $ref: '#/components/schemas/properties/sex'
            #DI:
            #  $ref: '#/components/schemas/properties/DI'
            #CI:
            #  $ref: '#/components/schemas/properties/CI'
            #birth:
            #  $ref: '#/components/schemas/properties/birth'

      UpdatePassword:
        type: object
        properties:
          current:
            type: string
            description: 현재 비밀번호
            minLength: 8
            maxLength: 20
          replace:
            type: string
            description: |
              변경할 비밀번호
              <br />영문숫자형 특수문자[!@#$%^&*()-=\_+|[]{};'`~:",.<>/?]가능, 특수문자 최소 1개 이상 포함
            minLength: 8
            maxLength: 20
          replaceChk:
            type: string
            description: |
              변경할 비밀번호 확인
              <br />영문숫자형 특수문자[!@#$%^&*()-=\_+|[]{};'`~:",.<>/?]가능, 특수문자 최소 1개 이상 포함
            minLength: 8
            maxLength: 20

      UpdateCell:
        type: object
        properties:
          countryCode:
            $ref: '#/components/schemas/properties/countryCode'
          cellNumber:
            $ref: '#/components/schemas/properties/cellNumber'
          certifyCode:
            type: string
            description: 인증 확인을 위한 코드값
            minLength: 5
            maxLength: 5
          exeCode:
            $ref: '#/components/schemas/properties/exeCode'

      UpdateSvcID:
        type: object
        properties:
          svcID:
            $ref: '#/components/schemas/properties/svcID'
          exeCode:
            $ref: '#/components/schemas/properties/exeCode'
            #accLoc:
            #  $ref: '#/components/schemas/properties/accLoc'

      UpdatePushKey:
        type: object
        properties:
          exeCode:
            $ref: '#/components/schemas/properties/exeCode'
          pushKey:
            type: string
            description: |
              푸시 전송을 위한 기기값

      UpdateNickName:
        type: object
        properties:
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          exeCode:
            $ref: '#/components/schemas/properties/exeCode'
          #accLoc:
          #  $ref: '#/components/schemas/properties/accLoc'

      LoginSocial:
        type: object
        required:
          - accessToken
          - accLoc
          - exeCode
        properties:
          accessToken:
            $ref: '#/components/schemas/properties/accessToken'
          accLoc:
            $ref: '#/components/schemas/properties/accLoc'
          exeCode:
            $ref: '#/components/schemas/properties/exeCode'
          ptnKey:
            $ref: '#/components/schemas/properties/ptnKey'
          mktKey:
            $ref: '#/components/schemas/properties/mktKey'
          agreeMarketing:
            $ref: '#/components/schemas/properties/agreeMarketing'
            
      LoginSocialNew:
        type: object
        required:
          - accessToken
          - accLoc
          - exeCode
        properties:
          accessToken:
            $ref: '#/components/schemas/properties/accessToken'
          accLoc:
            $ref: '#/components/schemas/properties/accLoc'
          exeCode:
            $ref: '#/components/schemas/properties/exeCode'

      LoginLocal:
        type: object
        properties:
          #accLoc:
          #  type: number
          #dvsCode:
          #  type: number
          countryCode:
            $ref: '#/components/schemas/properties/countryCode'
          cellNumber:
            $ref: '#/components/schemas/properties/cellNumber'
          password:
            type: string
            description: |
              계정 로그인 비번
              <br />영문숫자형 특수문자[!@#$%^&*()-=\_+|[]{};'`~:",.<>/?]가능, 특수문자 최소 1개 이상 포함
          exeCode:
            $ref: '#/components/schemas/properties/exeCode'
            #ptnKey:
            #  $ref: '#/components/schemas/properties/ptnKey'
            #mktKey:
            #  $ref: '#/components/schemas/properties/mktKey'


      RegistCellCertify:
        type: object
        required:
          - TX_SEQ_NO
          - RSLT_NAME
          - RSLT_BIRTHDAY
          - RSLT_SEX_CD
          - RSLT_NTV_FRNR_CD
          - DI
          - CI
          - TEL_COM_CD
          - TEL_NO
        properties:
          TX_SEQ_NO:
            type: string
            description: 본인인증 결과 정보 - 고유번호
          RSLT_NAME:
            type: string
            description: 본인인증 결과 정보 - 이름
          RSLT_BIRTHDAY:
            type: string
            description: 본인인증 결과 정보 - 생년월일
          RSLT_SEX_CD:
            type: string
            description: 본인인증 결과 정보 - 성별
          RSLT_NTV_FRNR_CD:
            type: string
            description: 본인인증 결과 정보 - 내/외국인
          DI:
            type: string
            description: 본인인증 결과 정보 - DI
          CI:
            type: string
            description: 본인인증 결과 정보 - CI
          TEL_COM_CD:
            type: string
            description: 본인인증 결과 정보 - 통신사
          TEL_NO:
            type: string
            description: 본인인증 결과 정보 - 전화번호

      RegistLocal:
        type: object
        required:
          - countryCode
          - cellNumber
          - password
          - exeCode
          - ptnKey
          - mktKey
          - certifyCode
          - certifyToken
        properties:
          countryCode:
            $ref: '#/components/schemas/properties/countryCode'
          cellNumber:
            $ref: '#/components/schemas/properties/cellNumber'
          password:
            type: string
            description: 계정 로그인 비번
          exeCode:
            $ref: '#/components/schemas/properties/exeCode'
          ptnKey:
            $ref: '#/components/schemas/properties/ptnKey'
          mktKey:
            $ref: '#/components/schemas/properties/mktKey'
          certifyCode:
            type: string
            description: 인증 확인을 위한 코드값
            minLength: 6
            maxLength: 6
          certifyToken:
            $ref: '#/components/schemas/properties/certifyToken'

      IsSocialRegistered:
        type: object
        required:
        - accessToken
        - accLoc
        properties:
          accessToken:
            $ref: '#/components/schemas/properties/accessToken'
          accLoc:
            $ref: '#/components/schemas/properties/accLoc'

      RegistLocalComplete:
        type: object
        required:
          - memKey
          - countryCode
          - cellNumber
          - certifyCode
          - password
          - ptnKey
          - mktKey
          - exeCode
          - agreeMarketing
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          countryCode:
            $ref: '#/components/schemas/properties/countryCode'
          cellNumber:
            $ref: '#/components/schemas/properties/cellNumber'
          certifyCode:
            $ref: '#/components/schemas/properties/certifyCode'
          password:
            $ref: '#/components/schemas/properties/password'
          ptnKey:
            $ref: '#/components/schemas/properties/ptnKey'
          mktKey:
            $ref: '#/components/schemas/properties/mktKey'
          exeCode:
            $ref: '#/components/schemas/properties/exeCode'
          agreeMarketing:
            $ref: '#/components/schemas/properties/agreeMarketing'

      RegistLocalStepMakeNickName:
        type: object
        required:
        - memKey
        - countryCode
        - cellNumber
        - certifyCode
        - ptnKey
        - mktKey
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          countryCode:
            $ref: '#/components/schemas/properties/countryCode'
          cellNumber:
            $ref: '#/components/schemas/properties/cellNumber'
          certifyCode:
            $ref: '#/components/schemas/properties/certifyCode'
          ptnKey:
            $ref: '#/components/schemas/properties/ptnKey'
          mktKey:
            $ref: '#/components/schemas/properties/mktKey'

      RegistLocalStepCellNumber:
        type: object
        required:
          - countryCode
          - cellNumber
          - ptnKey
          - mktKey
        properties:
          countryCode:
            $ref: '#/components/schemas/properties/countryCode'
          cellNumber:
            $ref: '#/components/schemas/properties/cellNumber'
          ptnKey:
            $ref: '#/components/schemas/properties/ptnKey'
          mktKey:
            $ref: '#/components/schemas/properties/mktKey'

      RegistLocalStepCellNumberCertify:
        type: object
        required:
          - countryCode
          - cellNumber
          - certifyCode
          - ptnKey
          - mktKey
        properties:
          countryCode:
            $ref: '#/components/schemas/properties/countryCode'
          cellNumber:
            $ref: '#/components/schemas/properties/cellNumber'
          certifyCode:
            $ref: '#/components/schemas/properties/certifyCode'
          ptnKey:
            $ref: '#/components/schemas/properties/ptnKey'
          mktKey:
            $ref: '#/components/schemas/properties/mktKey'

      CertifyCodeSend:
        type: object
        required:
        - countryCode
        - cellNumber
        properties:
          countryCode:
            $ref: '#/components/schemas/properties/countryCode'
          cellNumber:
            $ref: '#/components/schemas/properties/cellNumber'

      CertifyCodeCheck:
        type: object
        required:
        - countryCode
        - cellNumber
        - certifyCode
        properties:
          countryCode:
            $ref: '#/components/schemas/properties/countryCode'
          cellNumber:
            $ref: '#/components/schemas/properties/cellNumber'
          certifyCode:
            $ref: '#/components/schemas/properties/certifyCode'

      RegistLocalStepPassword:
        type: object
        required:
          - memKey
          - countryCode
          - cellNumber
          - certifyCode
          - password
          - ptnKey
          - mktKey
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          countryCode:
            $ref: '#/components/schemas/properties/countryCode'
          cellNumber:
            $ref: '#/components/schemas/properties/cellNumber'
          certifyCode:
            $ref: '#/components/schemas/properties/certifyCode'
          password:
            $ref: '#/components/schemas/properties/password'
          ptnKey:
            $ref: '#/components/schemas/properties/ptnKey'
          mktKey:
            $ref: '#/components/schemas/properties/mktKey'

      RegistLocalStepSvcID:
        type: object
        required:
        - memKey
        - countryCode
        - cellNumber
        - certifyCode
        - svcID
        - ptnKey
        - mktKey
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          countryCode:
            $ref: '#/components/schemas/properties/countryCode'
          cellNumber:
            $ref: '#/components/schemas/properties/cellNumber'
          certifyCode:
            $ref: '#/components/schemas/properties/certifyCode'
          svcID:
            $ref: '#/components/schemas/properties/svcID'
          ptnKey:
            $ref: '#/components/schemas/properties/ptnKey'
          mktKey:
            $ref: '#/components/schemas/properties/mktKey'

      RegistLocalStepNickName:
        type: object
        required:
          - memKey
          - countryCode
          - cellNumber
          - certifyCode
          - nickName
          - ptnKey
          - mktKey
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          countryCode:
            $ref: '#/components/schemas/properties/countryCode'
          cellNumber:
            $ref: '#/components/schemas/properties/cellNumber'
          certifyCode:
            $ref: '#/components/schemas/properties/certifyCode'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          ptnKey:
            $ref: '#/components/schemas/properties/ptnKey'
          mktKey:
            $ref: '#/components/schemas/properties/mktKey'

      RegistSocialStepSvcIDNickName:
        type: object
        required:
        - memKey
        - exeCode
        - svcID
        - nickName
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          exeCode:
            $ref: '#/components/schemas/properties/exeCode'
          svcID:
            $ref: '#/components/schemas/properties/svcID'
          nickName:
            $ref: '#/components/schemas/properties/nickName'

      RegistLocalStepProfileIxCode:
        type: object
        required:
          - memKey
          - countryCode
          - cellNumber
          - certifyCode
          - ixCode
          - ptnKey
          - mktKey
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          countryCode:
            $ref: '#/components/schemas/properties/countryCode'
          cellNumber:
            $ref: '#/components/schemas/properties/cellNumber'
          certifyCode:
            $ref: '#/components/schemas/properties/certifyCode'
          ixCode:
            $ref: '#/components/schemas/properties/ixCode'
          ptnKey:
            $ref: '#/components/schemas/properties/ptnKey'
          mktKey:
            $ref: '#/components/schemas/properties/mktKey'

      RegistLocalStepProfileTxt:
        type: object
        required:
          - memKey
          - countryCode
          - cellNumber
          - certifyCode
          - encodedTxt
          - ptnKey
          - mktKey
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          countryCode:
            $ref: '#/components/schemas/properties/countryCode'
          cellNumber:
            $ref: '#/components/schemas/properties/cellNumber'
          certifyCode:
            $ref: '#/components/schemas/properties/certifyCode'
          encodedTxt:
            type: string
            description: base64로 인코딩된 이미지 문자열
          ptnKey:
            $ref: '#/components/schemas/properties/ptnKey'
          mktKey:
            $ref: '#/components/schemas/properties/mktKey'

      RegistLocalStepProfileRandomInit:
        type: object
        required:
          - memKey
          - countryCode
          - cellNumber
          - certifyCode
          - ptnKey
          - mktKey
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          countryCode:
            $ref: '#/components/schemas/properties/countryCode'
          cellNumber:
            $ref: '#/components/schemas/properties/cellNumber'
          certifyCode:
            $ref: '#/components/schemas/properties/certifyCode'
          ptnKey:
            $ref: '#/components/schemas/properties/ptnKey'
          mktKey:
            $ref: '#/components/schemas/properties/mktKey'

      ResetLocalPasswordComplete:
        type: object
        required:
          - memKey
          - countryCode
          - cellNumber
          - certifyCode
          - password
          - svcID
          - ptnKey
          - mktKey
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          countryCode:
            $ref: '#/components/schemas/properties/countryCode'
          cellNumber:
            $ref: '#/components/schemas/properties/cellNumber'
          certifyCode:
            $ref: '#/components/schemas/properties/certifyCode'
          password:
            $ref: '#/components/schemas/properties/password'
          svcID:
            $ref: '#/components/schemas/properties/svcID'
          ptnKey:
            $ref: '#/components/schemas/properties/ptnKey'
          mktKey:
            $ref: '#/components/schemas/properties/mktKey'

    responses:

      schemas:

        inUseItems:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            items:
              type: array
              items:
                type: object
                properties:
                  goodCode:
                    $ref: '#/components/schemas/properties/goodCode'
                  itemType:
                    $ref: '#/components/schemas/properties/itemType'
                  useCnt:
                    type: number
                    description: 구매아이템 적용 횟수⬝일수
                  offsetCnt:
                    type: number
                    description: 횟수 아이템 사용수
                  regCnt:
                    type: number
                    description: 추가되는 횟수
                  endDateTime:
                    type: string
                    description: 아이템사용 종료 일자, YYYY-MM-DD hh:mm:ss.zzz 형식
                  remainSecs:
                    type: number
                    description: 아이템사용 종료 일자까지 남은 시간(초)

        receivedItems:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            items:
              type: array
              items:
                type: object
                properties:
                  ixCode:
                    $ref: '#/components/schemas/properties/ixCode'
                  payCode:
                    $ref: '#/components/schemas/properties/payCode'
                  goodCode:
                    $ref: '#/components/schemas/properties/goodCode'
                  itemType:
                    $ref: '#/components/schemas/properties/itemType'
                  regCnt:
                    type: number
                    description: 추가되는 횟수
                  useCnt:
                    type: number
                    description: 구매아이템 적용 횟수⬝일수
                  regDateTime:
                    $ref: '#/components/schemas/properties/regDateTime'
                  giftMessage:
                    type: number
                    description: |
                      선물자의 메세지
                      <br />payCode값이 결제가 아닌 보상의 경우 빈값이 나올 수 있음
                  memKey:
                    $ref: '#/components/schemas/properties/memKey'
                  nickName:
                    $ref: '#/components/schemas/properties/nickName'
                  profileImg:
                    $ref: '#/components/schemas/properties/profileImg'

        purchasedCubics:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            cubics:
              type: array
              items:
                type: object
                properties:
                  payCode:
                    $ref: '#/components/schemas/properties/payCode'
                  paymentAmount:
                    $ref: '#/components/schemas/properties/paymentAmount'
                  goodCount:
                    $ref: '#/components/schemas/properties/goodCount'
                  addCoin:
                    $ref: '#/components/schemas/properties/addCoin'
                  isOrderCancel:
                    $ref: '#/components/schemas/properties/isOrderCancel'
                  regDateTime:
                    $ref: '#/components/schemas/properties/regDateTime'

        usedCubics:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            cubics:
              type: array
              items:
                type: object
                properties:
                  coinUseType:
                    $ref: '#/components/schemas/properties/coinUseTypeCubic'
                  useToCode:
                    type: string
                    description: |
                      coinUseType에 따른 아래와 같이 사용됨
                      - coinUseType == 4: 아이템코드 등록
                      - coinUseType == 5: 아이템코드 등록
                      - coinUseType == 6: 기능코드  등록
                  useCoin:
                    $ref: '#/components/schemas/properties/useCoin'
                  isOrderCancel:
                    $ref: '#/components/schemas/properties/isOrderCancel'
                  regDateTime:
                    $ref: '#/components/schemas/properties/regDateTime'
                  memKey:
                    $ref: '#/components/schemas/properties/memKeyNullable'
                  nickName:
                    $ref: '#/components/schemas/properties/nickNameNullable'

        purchasedCoins:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            coins:
              type: array
              items:
                type: object
                properties:
                  payCode:
                    $ref: '#/components/schemas/properties/payCode'
                  paymentAmount:
                    $ref: '#/components/schemas/properties/paymentAmount'
                  goodCount:
                    $ref: '#/components/schemas/properties/goodCount'
                  addCioin:
                    $ref: '#/components/schemas/properties/addCoin'
                  isOrderCancel:
                    $ref: '#/components/schemas/properties/isOrderCancel'
                  regDateTime:
                    $ref: '#/components/schemas/properties/regDateTime'

        usedCoins:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            coins:
              type: array
              items:
                type: object
                properties:
                  coinUseType:
                    $ref: '#/components/schemas/properties/coinUseType'
                  useCoin:
                    $ref: '#/components/schemas/properties/useCoin'
                  isOrderCancel:
                    $ref: '#/components/schemas/properties/isOrderCancel'
                  regDateTime:
                    $ref: '#/components/schemas/properties/regDateTime'
                  memKey:
                    $ref: '#/components/schemas/properties/memKey'
                  nickName:
                    $ref: '#/components/schemas/properties/nickName'

        receivedCoins:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            info:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    isAdult:
                      type: boolean
                      description: |
                        성인 여부
                        - true: 성인
                        - false: 성인 아님
                    isCellCertify:
                      type: boolean
                      description: |
                        봉인인증 여부
                        - true: 본인인증됨
                        - false: 본인인증 안됨
                account:
                  type: object
                  properties:
                    isConfirmed:
                      type: boolean
                      description: |
                        정산 승인 여부
                        - true: 승인됨
                        - false: 승인 안됨
                    confirmState:
                      type: number
                      description: |
                        정산 승인 상태값
                        - 0: 미승인
                        - 1: 승인
                        - 2: 반려
                    confirmReason:
                      type: string
                      description: |
                        정산 상태에 대한 사유
                        주로 반려된 경우에 사용됨
                    paySetType:
                      $ref: '#/components/schemas/properties/paySetType'
                amount:
                  type: object
                  properties:
                    exPer:
                      type: number
                      description: 정산율(%)
                    exAmount:
                      type: number
                      description: 정산 보유금액(정산 요청시 받을 수 있는 금액)
                    exAmountSum:
                      type: number
                      description: 지금까지 정산받은 금액 총합
                request:
                  type: object
                  properties:
                    confirmState:
                      type: number
                      description: |
                        정산 승인 상태값
                        - 0: 미승인
                        - 1: 승인
                        - 2: 반려
                    confirmReason:
                      type: string
                      description: |
                        정산 상태에 대한 사유
                        주로 반려된 경우에 사용됨
                    confirmDateTime:
                      type: string
                      description: 정산 상태에 변경 일시, YYYY-MM-DD hh:mm:ss.zzz
                    lastExecutedDate:
                      type: string|null
                      description: 마지막 요청 처리일, YYYY-MM-DD hh:mm:ss.zzz
            coins:
              type: array
              items:
                type: object
                properties:
                  coinUseType:
                    $ref: '#/components/schemas/properties/coinUseType'
                  useCoin:
                    $ref: '#/components/schemas/properties/useCoin'
                  exPer:
                    type: number
                    description: 정산율(%)
                  exAmount:
                    type: number
                    description: 정산 보유금액(정산 요청시 받을 수 있는 금액)
                  regDateTime:
                    $ref: '#/components/schemas/properties/regDateTime'
                  memKey:
                    $ref: '#/components/schemas/properties/memKey'
                  nickName:
                    $ref: '#/components/schemas/properties/nickName'
                  isExecuted:
                    type: boolean
                    default: false
                    description: 정산 요청 또는 정산 완료 여부

        ComplexCastData:
          type: object
          properties:
            memKey:
              $ref: '#/components/schemas/properties/memKey'
            castLevel:
              $ref: '#/components/schemas/properties/castLevel'
            nickName:
              $ref: '#/components/schemas/properties/nickName'
            castDTCode:
              $ref: '#/components/schemas/properties/castDTCode'
            Title:
              $ref: '#/components/schemas/properties/Title'
            Tag:
              $ref: '#/components/schemas/properties/Tag'
            castTargetType:
              $ref: '#/components/schemas/properties/castTargetType'
            isLock:
              $ref: '#/components/schemas/properties/isLock'
            isAdult:
              $ref: '#/components/schemas/properties/isAdult'
            setViewCnt:
              $ref: '#/components/schemas/properties/setViewCnt'
            realViewCnt:
              $ref: '#/components/schemas/properties/realViewCnt'
            Set_HL:
              $ref: '#/components/schemas/properties/Set_HL'
            #Set_CL:
            #  $ref: '#/components/schemas/properties/Set_CL'
            viewType:
              $ref: '#/components/schemas/properties/viewType'
            profileImg:
              $ref: '#/components/schemas/properties/profileImg'
            thumbnail:
              $ref: '#/components/schemas/properties/thumbnail'

        ComplexCastDataWithPicture:
          type: object
          properties:
            memKey:
              $ref: '#/components/schemas/properties/memKey'
            castLevel:
              $ref: '#/components/schemas/properties/castLevel'
            nickName:
              $ref: '#/components/schemas/properties/nickName'
            castDTCode:
              $ref: '#/components/schemas/properties/castDTCode'
            Title:
              $ref: '#/components/schemas/properties/Title'
            Tag:
              $ref: '#/components/schemas/properties/Tag'
            castTargetType:
              $ref: '#/components/schemas/properties/castTargetType'
            isLock:
              $ref: '#/components/schemas/properties/isLock'
            isAdult:
              $ref: '#/components/schemas/properties/isAdult'
            setViewCnt:
              $ref: '#/components/schemas/properties/setViewCnt'
            realViewCnt:
              $ref: '#/components/schemas/properties/realViewCnt'
            Set_HL:
              $ref: '#/components/schemas/properties/Set_HL'
            Set_CL:
              $ref: '#/components/schemas/properties/Set_CL'
            viewType:
              $ref: '#/components/schemas/properties/viewType'
            profileImg:
              $ref: '#/components/schemas/properties/profileImg'
            thumbnail:
              $ref: '#/components/schemas/properties/thumbnail'
            pictureURL:
              $ref: '#/components/schemas/properties/pictureURL'

        ComplexRangkingData:
          #{"ixCode":1, "memKey":20, "nickName":"U20181218165034", "profileImg":"z_img_profile1.png", "rankPoint":48, "castLevel":0},
          type: object
          properties:
            ixCode:
              type: number
              description: 순위값
              minumum: 1
            memKey:
              $ref: '#/components/schemas/properties/memKey'
            nickName:
              $ref: '#/components/schemas/properties/nickName'
            profileImg:
              $ref: '#/components/schemas/properties/profileImg'
            rankPoint:
              type: number
              description: 랭킹 점수
            likeCount:
              type: number
              description: 누적 좋아요 수
            viewCount:
              type: number
              description: 누적 시청자 수
            followCount:
              type: number
              description: 누적 팔로잉 수
            castLevel:
              $ref: '#/components/schemas/properties/castLevel'
            isOnAir:
              $ref: '#/components/schemas/properties/isOnAir'
            isCastLock:
              $ref: '#/components/schemas/properties/isCastLock'
            isLeave:
              $ref: '#/components/schemas/properties/isLeave'

        ComplexScheduleData:
          type: object
          properties:
            memKey:
              $ref: '#/components/schemas/properties/memKey'
            scheduleType:
              $ref: '#/components/schemas/properties/scheduleType'
            castDTCode:
              $ref: '#/components/schemas/properties/castDTCode'
            nickName:
              $ref: '#/components/schemas/properties/nickName'
            profileImg:
              $ref: '#/components/schemas/properties/profileImg'
            Tag:
              $ref: '#/components/schemas/properties/Tag'
            castLevel:
              $ref: '#/components/schemas/properties/castLevel'
            isOnAir:
              $ref: '#/components/schemas/properties/isOnAir'
            isCastLock:
              $ref: '#/components/schemas/properties/isCastLock'

        ComplexNewCasterData:
          type: object
          properties:
            memKey:
              $ref: '#/components/schemas/properties/memKey'
            Tag:
              $ref: '#/components/schemas/properties/Tag'
            nickName:
              $ref: '#/components/schemas/properties/nickName'
            profileImg:
              $ref: '#/components/schemas/properties/profileImg'
            castLevel:
              $ref: '#/components/schemas/properties/castLevel'

        MemberScheduleSimpleData:
          type: object
          properties:
            memKey:
              $ref: '#/components/schemas/properties/memKey'
            scheduleType:
              $ref: '#/components/schemas/properties/scheduleType'
            scheduleContent:
              $ref: '#/components/schemas/properties/scheduleContent'
            castDTCode:
              $ref: '#/components/schemas/properties/castDTCode'
            isRecurrence:
              type: number
              default: 0
              description: |
                스케쥴 반복 설정 여부
                - 0: 반복 없음
                - 1: 반복 있음

        MemberScheduleData:
          type: object
          properties:
            ixCode:
              $ref: '#/components/schemas/properties/ixCode'
            memKey:
              $ref: '#/components/schemas/properties/memKey'
            scheduleType:
              $ref: '#/components/schemas/properties/scheduleType'
            scheduleContent:
              $ref: '#/components/schemas/properties/scheduleContent'
            castDTCode:
              $ref: '#/components/schemas/properties/castDTCode'
            isRecurrence:
              type: number
              default: 0
              description: |
                스케쥴 반복 설정 여부
                - 0: 반복 없음
                - 1: 반복 있음
            nickName:
              $ref: '#/components/schemas/properties/nickName'
            profileImg:
              $ref: '#/components/schemas/properties/profileImg'
            Tag:
              $ref: '#/components/schemas/properties/Tag'
            castLevel:
              $ref: '#/components/schemas/properties/castLevel'

        ScheduleData:
          type: object
          properties:
            memKey:
              $ref: '#/components/schemas/properties/memKey'
            scheduleType:
              $ref: '#/components/schemas/properties/scheduleType'
            scheduleContent:
              $ref: '#/components/schemas/properties/scheduleContent'
            castDTCode:
              $ref: '#/components/schemas/properties/castDTCode'
            nickName:
              $ref: '#/components/schemas/properties/nickName'
            profileImg:
              $ref: '#/components/schemas/properties/profileImg'
            Tag:
              $ref: '#/components/schemas/properties/Tag'
            castLevel:
              $ref: '#/components/schemas/properties/castLevel'
            isOnAir:
              $ref: '#/components/schemas/properties/isOnAir'
            isCastLock:
              $ref: '#/components/schemas/properties/isCastLock'

        ScheduleCaster:
          type: object
          properties:
            memKey:
              $ref: '#/components/schemas/properties/memKey'
            Tag:
              $ref: '#/components/schemas/properties/Tag'
            nickName:
              $ref: '#/components/schemas/properties/nickName'
            profileImg:
              $ref: '#/components/schemas/properties/profileImg'
            followerCnt:
              $ref: '#/components/schemas/properties/followerCnt'
            fanCnt:
              $ref: '#/components/schemas/properties/fanCnt'
            castLevel:
              $ref: '#/components/schemas/properties/castLevel'
            isOnAir:
              $ref: '#/components/schemas/properties/isOnAir'

        SMSCertCodeIssue:
          type: object
          required:
          - sendToken
          properties:
            certifyToken:
              $ref: '#/components/schemas/properties/certifyToken'

        ShopCoins:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            coins:
              type: array
              items:
                oneOf:
                - $ref: '#/components/schemas/models/ShopCoin'
                - $ref: '#/components/schemas/models/ShopCoinUserOwn'

        CastCoins:
          type: object
          properties:
            metadata:
              type: object
              properties:
                totalCnt:
                  type: number
                  description: 전체 갯수
            coins:
              type: array
              items:
                type: object
                properties:
                  themaGroup:
                    $ref: '#/components/schemas/properties/themaGroup'
                  count:
                    type: number
                    description: 코인 갯수

        CastMemers:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                #totalCnt:
                #  type: number
                #  description: |
                #    전체 갯수<br />
                #    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            managers:
              type: array
              items:
                $ref: '#/components/schemas/models/Manager'
            users:
              type: array
              items:
                $ref: '#/components/schemas/models/CastMemer'

        CastDonators:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            donators:
              type: array
              items:
                $ref: '#/components/schemas/models/CastDonator'

        ShopItems:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            items:
              type: array
              items:
                $ref: '#/components/schemas/models/ShopItem'

        EnterCaster:
          type: object
          properties:
            chat:
              type: object
              properties:
                URL:
                  $ref: '#/components/schemas/properties/chatURL'
                #port:
                #  type: number
                #  description: 채팅서버 접속 port
                userId:
                  type: string
                  description: 채팅서버 연결시 사용할 userId
                accessCode:
                  type: string
                  description: 채팅서버 연결시 사용할 accessCode
                channelId:
                  type: string
                  description: 채팅서버 연결 수 채널 입장시 사용할 channelId

        EnterInspector:
          type: object
          properties:
            chat:
              type: object
              properties:
                URL:
                  $ref: '#/components/schemas/properties/chatURL'
                #port:
                #  type: number
                #  description: 채팅서버 접속 port
                userId:
                  type: string
                  description: 채팅서버 연결시 사용할 userId
                channelId:
                  type: string
                  description: 채팅서버 연결 수 채널 입장시 사용할 channelId
                key:
                  type: string
                  description: 채팅서버 연결시 사용할 key

        EnterCast:
          type: object
          properties:
            cast:
              type: object
              properties:
                memKey:
                  $ref: '#/components/schemas/properties/castMemKey'
                nickName:
                  $ref: '#/components/schemas/properties/nickName'
                profileImg:
                  $ref: '#/components/schemas/properties/profileImg'
                thimbnail:
                  type: string
                  description: 썸네일 이미지 URL
                Title:
                  $ref: '#/components/schemas/properties/Title'
                Tag:
                  $ref: '#/components/schemas/properties/Tag'
                castDTCode:
                  $ref: '#/components/schemas/properties/castDTCode'
                passedSecs:
                  type: number
                  minimum: 0
                  description: 방송 시작 후 지난 시간(초)
                isAdult:
                  type: boolean
                  default: false
                  description: 미성년자 관람 제한 여부
                isLock:
                  type: boolean
                  default: false
                  description: 비번 제한 여부
            user:
              type: object
              properties:
                userType:
                  $ref: '#/components/schemas/properties/userType'
                isLiked:
                  type: boolean
                  enum: [true, false]
                  default: false
                  description: |
                    현재 기준 금일 "좋아요" 여부
                    - false: 좋아요 하지 않음
                    - true: 좋아요 함
                isFollowed:
                  type: boolean
                  enum: [true, false]
                  default: false
                  description: |
                    현재 기준 "팔로잉" 여부
                    - false: 팔로잉 하지 않음
                    - true: 팔로잉 함
            picture:
              type: object
              properties:
                URL:
                  type: string
                  description: 영상 서버 연결 URL
                #svcID:
                #  $ref: '#/components/schemas/properties/svcID'
                #streamName:
                #  $ref: '#/components/schemas/properties/streamName'
                viewType:
                  $ref: '#/components/schemas/properties/viewType'
            chat:
              type: object
              properties:
                URL:
                  $ref: '#/components/schemas/properties/chatURL'
                #port:
                #  type: number
                #  description: 채팅서버 접속 port
                userId:
                  type: string
                  description: 채팅서버 연결시 사용할 userId
                accessCode:
                  type: string
                  description: 채팅서버 연결시 사용할 accessCode
                channelId:
                  type: string
                  description: 채팅서버 연결 수 채널 입장시 사용할 channelId

        LocalLoginResult:
          type: object
          properties:
            memKey:
              $ref: '#/components/schemas/properties/memKey'
            svcID:
              $ref: '#/components/schemas/properties/svcID'
            nickName:
              $ref: '#/components/schemas/properties/nickName'
            profileImg:
              $ref: '#/components/schemas/properties/profileImg'
            isCellCertify:
              $ref: '#/components/schemas/properties/isCellCertify'
            isAdult:
              type: boolean
              defaullt: false
              description: 성인 여부
            token:
              type: string
              description: 인증 토큰

        LocalSocialNewResult:
          type: object
          properties:
            memKey:
              $ref: '#/components/schemas/properties/memKey'
            svcID:
              $ref: '#/components/schemas/properties/svcID'
            nickName:
              $ref: '#/components/schemas/properties/nickName'
            profileImg:
              $ref: '#/components/schemas/properties/profileImg'
            token:
              type: string
              description: 인증 토큰
            isCellCertify:
              $ref: '#/components/schemas/properties/isCellCertify'
            isAdult:
              type: boolean
              defaullt: false
              description: 성인 여부
                
        LocalSocialResult:
          type: object
          properties:
            memKey:
              $ref: '#/components/schemas/properties/memKey'
            svcID:
              $ref: '#/components/schemas/properties/svcID'
            nickName:
              $ref: '#/components/schemas/properties/nickName'
            profileImg:
              $ref: '#/components/schemas/properties/profileImg'
            token:
              type: string
              description: 인증 토큰
            isCellCertify:
              $ref: '#/components/schemas/properties/isCellCertify'
            isAdult:
              type: boolean
              defaullt: false
              description: 성인 여부
            isCreated:
              type: boolean
              description: |
                계정 생성 여부
                - true: 계정생성 후 로그인 처리됨
                - false: 이전 생성되어 있는 계정으로 로그인됨

        RegistLocalStepCellNumberResult:
          type: object
          properties:
            sendLimit:
              type: number
              description: 발송 가능한 제한 횟수
            sendCnt:
              type: number
              description: 현재 발송 횟수(sendLimit - sendCnt = 남은 발송 가능 횟수, 제한 횟수 초과시 일정 시간 후 초기화)

        RegistLocalStepCellNumberCertifyResult:
          type: object
          properties:
            memKey:
              $ref: '#/components/schemas/properties/memKey'

        RegistLocalCompleteResult:
          type: object
          properties:
            memKey:
              $ref: '#/components/schemas/properties/memKey'
            svcID:
              $ref: '#/components/schemas/properties/svcID'
            nickName:
              $ref: '#/components/schemas/properties/nickName'
            profileImg:
              $ref: '#/components/schemas/properties/profileImg'

        IsSocialRegisteredResult:
          type: object
          properties:
            isRegistered:
              type: boolean
              enum: [true, false]
              description: |
                소셜계정의 가입 여부
                - true: 가입
                - false: 미가입

        SystemProfileResult:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            systemProfiles:
              type: array
              items:
                type: object
                properties:
                  ixCode:
                    $ref: '#/components/schemas/properties/ixCode'
                  profileImg:
                    $ref: '#/components/schemas/properties/profileImg'
                  themaCode:
                    $ref: '#/components/schemas/properties/themaCode'

        CountryCodeResult:
          type: object
          properties:
            continents:
              type: array
              items:
                type: object
                properties:
                  continent:
                    type: string
                    description: 대륙구분명
                  txts:
                    type: object
                    description: 대륙구분명 언어별 표기
                    properties:
                      EN:
                        type: string
                        description: 영어 표기
                      KR:
                        type: string
                        description: 한글 표기
            countryCodes:
              type: array
              items:
                type: object
                properties:
                  continent:
                    type: string
                    enum: ['Asia', 'Europe', 'Middle East', 'North America', 'Oceania']
                    description: |
                      대륙 구분
                      - Asia: 아시아
                      - Europe: 유럽
                      - Middle East: 중동
                      - North America: 북미
                      - Oceania: 오세아니아
                  name:
                    type: string
                    description: 국가명
                  localname:
                    type: string
                    description: 국가명(지역명)
                  code:
                    type: string
                    description: ISO 3166-1 alpha-2 코드
                  text:
                    type: string
                    description: 목록 표시용 국가번호
                  value:
                    type: string
                    description: 국가번호
                  flag:
                    type: string
                    description: 국기 이미지 URL
                  favorite:
                    type: boolean
                    description: 주요국 여부
                  forder:
                    type: number
                    description: 주요국 표시 순서(0 이상일때만 사용, zero base)

        CastPreset:
          type: object
          properties:
            Title:
              $ref: '#/components/schemas/properties/Title'
            Tag:
              $ref: '#/components/schemas/properties/Tag'
            castTargetType:
              $ref: '#/components/schemas/properties/castTargetType'
            castTargetLevel:
              $ref: '#/components/schemas/properties/castTargetLevel'
            maxViewCnt:
              type: number
              description: 설정 가능 최대 입장 가능 인원수
            setViewCnt:
              $ref: '#/components/schemas/properties/setViewCnt'
            isLock:
              $ref: '#/components/schemas/properties/isLock'
            lockPassword:
              $ref: '#/components/schemas/properties/lockPassword'
            isAdult:
              $ref: '#/components/schemas/properties/isAdult'
            #maxManagerCnt:
            #  type: number
            #  description: 설정 가능 최대 매니저수
            #setManagerCnt:
            #  type: number
            #  description: 매니저수
            viewType:
              $ref: '#/components/schemas/properties/viewType'
            streamKey:
              $ref: '#/components/schemas/properties/streamKey'
            #Set_HL:
            #  $ref: '#/components/schemas/properties/Set_HL'
            #Set_CL:
            #  $ref: '#/components/schemas/properties/Set_CL'
            #Set_PV:
            #  $ref: '#/components/schemas/properties/Set_PV'
            #Set_PM:
            #  $ref: '#/components/schemas/properties/Set_PM'

        Rankings:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            rankings:
              type: array
              items:
                $ref: '#/components/schemas/models/Ranking'

        Clips:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            clips:
              type: array
              items:
                $ref: '#/components/schemas/models/ClipWithCastLevel'

        ClipsOwner:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            clips:
              type: array
              items:
                $ref: '#/components/schemas/models/ClipWithCastLevelOwner'

        ClipsWithRecommendedTag:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            recommendTags:
              type: array
              items:
                type: string
            recommendClip:
              $ref: '#/components/schemas/models/ClipWithFileNIsLiked'
            clips:
              type: array
              items:
                $ref: '#/components/schemas/models/ClipWithCastLevel'

        CastsWithHotList:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            hotList:
              type: object
              properties:
                casts:
                  type: array
                  items:
                    $ref: '#/components/schemas/models/Cast'
                fanCasts:
                  type: array
                  items:
                    $ref: '#/components/schemas/models/Cast'
            casts:
              type: array
              items:
                $ref: '#/components/schemas/models/CastWithRTag'

        Casts:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            casts:
              type: array
              items:
                $ref: '#/components/schemas/models/Cast'

        Search:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            lives:
              type: array
              items:
                $ref: '#/components/schemas/models/Cast'
            tags:
              type: array
              items:
                $ref: '#/components/schemas/models/SearchResultTagNNickName'
            nicknames:
              type: array
              items:
                $ref: '#/components/schemas/models/SearchResultTagNNickName'

        Managers:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 목록 갯수<br />
                    <font color="red">r_tc 요청과 상관없이 값을 출력합니다.</font>
                limit:
                  type: number
                  description: |
                    추가 가능한 최대 매니저수
            managers:
              type: array
              items:
                $ref: '#/components/schemas/models/Manager'

        Member:
          type: object
          properties:
            memKey:
              $ref: '#/components/schemas/properties/memKey'
            svcID:
              $ref: '#/components/schemas/properties/svcID'
            nickName:
              $ref: '#/components/schemas/properties/nickName'
            profileImg:
              $ref: '#/components/schemas/properties/profileImg'
            memLevel:
              $ref: '#/components/schemas/properties/memLevel'
            vipLevel:
              $ref: '#/components/schemas/properties/vipLevel'
            castLevel:
              $ref: '#/components/schemas/properties/castLevel'
            Tag:
              $ref: '#/components/schemas/properties/Tag'
            cel:
              type: object
              properties:
                countryCode:
                  $ref: '#/components/schemas/properties/countryCode'
                cellNumber:
                  $ref: '#/components/schemas/properties/cellNumber'
            coin:
              type: object
              properties:
                coin:
                  $ref: '#/components/schemas/properties/coin'
                cubic:
                  $ref: '#/components/schemas/properties/cubic'
            count:
              type: object
              properties:
                follower:
                  $ref: '#/components/schemas/properties/followerCnt'
                following:
                  $ref: '#/components/schemas/properties/followingCnt'
                fan:
                  $ref: '#/components/schemas/properties/fanCnt'
            isFollowing:
              type: boolean
              description: 현재 회원 기준, 조회 대상에 대한 팔로잉 여부 반환
              default: false
            isCellCertify:
              $ref: '#/components/schemas/properties/isCellCertify'
            isAdult:
              type: boolean
              defaullt: false
              description: 성인 여부
            accLoc:
              $ref: '#/components/schemas/properties/accLoc'
            fan:
              type: object
              properties:
                level:
                  $ref: '#/components/schemas/properties/fanLevel'
                rank:
                  $ref: '#/components/schemas/properties/fanRank'
            isAccountBlock:
              type: boolean
              defaullt: false
              description: 계정 차단 여부
            cast:
              type: object
              properties:
                exists:
                  type: boolean
                  default: false
                  description: |
                    현재 방송 진행 여부 반환, 캐시 자료를 반환합니다.
                      - true: 방송 진행중
                      - false: 방송 미진행중, 이 경우 info값은 null을 반환합니다.
                info:
                  type: object
                  properties:
                    Title:
                      $ref: '#/components/schemas/properties/Title'
                    Tag:
                      $ref: '#/components/schemas/properties/Tag'
                    castTargetType:
                      $ref: '#/components/schemas/properties/castTargetType'
                    castTargetLevel:
                      $ref: '#/components/schemas/properties/castTargetLevel'
                    isAdult:
                      $ref: '#/components/schemas/properties/isAdult'
                    isLock:
                      $ref: '#/components/schemas/properties/isLock'
                    viewType:
                      $ref: '#/components/schemas/properties/viewType'
                    castDateTime:
                      type: string
                      description: 방송 시작일시, yyyy-MM-dd hh:mm:ss.fff
        Members:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            members:
              type: array
              items:
                $ref: '#/components/schemas/models/MemberExSvcID'

        Followers:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            followers:
              type: array
              items:
                $ref: '#/components/schemas/models/Follower'

        Followings:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            followings:
              type: array
              items:
                $ref: '#/components/schemas/models/Follow'

        Blocks:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            blocks:
              type: array
              items:
                $ref: '#/components/schemas/models/Block'

        Fans:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            fans:
              type: array
              items:
                $ref: '#/components/schemas/models/Fan'

        Supporters:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            supporters:
              type: array
              items:
                $ref: '#/components/schemas/models/Supporter'

        Comments:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            comments:
              type: array
              items:
                $ref: '#/components/schemas/models/Comment'

        Questions:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            questions:
              type: array
              items:
                $ref: '#/components/schemas/models/QuestionSimple'

        Notices:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            importants:
              type: array
              items:
                $ref: '#/components/schemas/models/NoticeSimple'
            notices:
              type: array
              items:
                $ref: '#/components/schemas/models/NoticeSimple'

        Events:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            events:
              type: array
              items:
                $ref: '#/components/schemas/models/EventSimple'

        Achieves:
          type: array
          items:
            $ref: '#/components/schemas/models/Achieve'

        Payments:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            payments:
              type: array
              items:
                $ref: '#/components/schemas/models/Payment'

        RcvCoins:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            coins:
              type: array
              items:
                $ref: '#/components/schemas/models/RcvCoin'

        SPCoins:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            coin:
              type: object
              properties:
                normal:
                  type: number
                  description: 현재 보유중인 일반 코인 총합
                special:
                  type: number
                  description: 현재 보유중인 스페샬 코인 총합
            specialCoins:
              type: array
              items:
                $ref: '#/components/schemas/models/SPCoin'

        MemberNoticeItems:
          type: object
          properties:
            metadata:
              type: object
              properties:
                totalCnt:
                  type: number
                  description: |
                    전체 항목 갯수
                usableCnt:
                  type: number
                  description: |
                    사용가능한 노티스 아이템 전체 갯수
            items:
              type: array
              items:
                $ref: '#/components/schemas/models/MemberItem'

        MemberItems:
          type: object
          properties:
            metadata:
              type: object
              properties:
                page:
                  type: number
                  description: |
                    현재 출력되는 페이지 정보
                hasMore:
                  type: boolean
                  default: false
                  description: |
                    다음 페이지의 존재 유무
                totalCnt:
                  type: number
                  description: |
                    전체 페이지 갯수<br />
                    <font color="red">r_tc 요청이 있는 경우만 실제값 출력, 그외 0</font>
            items:
              type: array
              items:
                $ref: '#/components/schemas/models/MemberItem'

        CodeOnly:
          type: object
          required:
          - code
          properties:
            code:
              type: string
              description: 결과 코드값

      codeOnly:

        Success:
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/CodeOnly'

        WrongRequest:
          description: 요청값 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/CodeOnly'

        AuthenticationFail:
          description: 인증 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/CodeOnly'

        NotFound:
          description: 지정된 대상이 존재하지 않음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses/schemas/CodeOnly'


    models:

      SearchResultTagNNickName:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          Tag:
            $ref: '#/components/schemas/properties/Tag'

      SPCoin:
        type: object
        properties:
          regDateTime:
            type: string
            description: 스페셜 코인 등록일시
          goodName:
            type: string
            description: 스페셜 코인 아이템명
          coinCode:
            type: string
            description: 스페셜 코인 코드
          coinCount:
            type: number
            description: 코인 갯수
          isCoinUse:
            type: number
            enum: [0, 1]
            description: |
              코인 사용여부
              - 0: 미사용(사용가능)
              - 1: 사용(사용불가능)
          useDateTime:
            type: string
            description: 스페셜 코인 사용일시

      Payment:
        type: object
        properties:
          regDateTime:
            type: string
            description: 구매 일시
          goodName:
            $ref: '#/components/schemas/properties/goodName'
          goodCount:
            $ref: '#/components/schemas/properties/goodCount'
          #payTxt:
          #  $ref: '#/components/schemas/properties/payTxt'
          #payCode:
          #  $ref: '#/components/schemas/properties/payCode'
          isOrderCancel:
            $ref: '#/components/schemas/properties/isOrderCancel'
          orderCancelDateTime:
            $ref: '#/components/schemas/properties/orderCancelDateTime'

      RcvCoin:
        type: object
        properties:
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          regDateTime:
            type: string
            description: 선물받은 일시
          coinUseType:
            $ref: '#/components/schemas/properties/coinUseType'
          useCoin:
            $ref: '#/components/schemas/properties/useCoin'
          coinCode:
            type: string
            enum: ['NR', 'SR']
            description: |
              코인 구분
              - NR: 일반루비
              - SR: 스페셜 루비

      MemberItem:
        type: object
        properties:
          ixCode:
            type: string
            description: 사용자 소유 아이템 고유 번호
          itemImg:
            $ref: '#/components/schemas/properties/goodImg'
          goodCode:
            $ref: '#/components/schemas/properties/goodCode'
          goodName:
            $ref: '#/components/schemas/properties/goodName'
          isGift:
            type: number
            enum: [0, 1]
            description: |
              아이템 선물소유 여부
              - 0:구매
              - 1:선물
          fromNickName:
            type: string
            description: 아이템 선물한 회원의 닉네임
          isUseSet:
            type: number
            enum: [0, 1]
            description: |
              소지 후 아이템 사용설정 여부
              - 0:미사용
              - 1:사용설정
          itemType:
            $ref: '#/components/schemas/properties/itemType'
          startDateTime:
            type: string
            description: 아이템사용 시작 일자
          endDateTime:
            type: string
            description: 아이템사용 종료 일자
          useCnt:
            type: number
            description: 구매아이템 적용 횟수⬝일수
          offsetCnt:
            type: number
            description: 횟수 아이템 사용수

      Achieve:
        type: object
        properties:
          groupCode:
            type: number
            description: 업적 카테고리 코드
          missionCode:
            type: string
            description: 미션 고유 코드
          missionStep:
            type: number
            description: 미션 단계
          missionName:
            type: string
            description: 미션 명
            maxLength: 500
          goalGrade:
            type: number
            description: 단계별 달성 카운트
          currentGrade:
            type: number
            description: 현재 달성 카운트
          goalType:
            type: number
            description: |
              달성 표시형태(
              - 0:누적 카운트형
              - 1:달성 카운트형
          isComplete:
            $ref: '#/components/schemas/properties/isComplete'
          isReward:
            $ref: '#/components/schemas/properties/isReward'
          rewards:
            type: array
            items:
              $ref: '#/components/schemas/models/AchieveRewardSimple'

      AchieveRewardSimple:
        type: object
        properties:
          rwdImgUrl:
            type: string
            description: 보상항목 이미지 URL
          rwdName:
            type: string
            description: 보상항목 이름
          rwdDescript:
            type: string
            description: 보상항목 설명

      Member:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          svcID:
            $ref: '#/components/schemas/properties/svcID'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          memLevel:
            $ref: '#/components/schemas/properties/memLevel'
          vipLevel:
            $ref: '#/components/schemas/properties/vipLevel'
          castLevel:
            $ref: '#/components/schemas/properties/castLevel'
          followerCnt:
            $ref: '#/components/schemas/properties/followerCnt'
          followingCnt:
            $ref: '#/components/schemas/properties/followingCnt'
          fanCnt:
            $ref: '#/components/schemas/properties/fanCnt'
          isFollowing:
            $ref: '#/components/schemas/properties/isFollowing'

      MemberBasicWCastLevel:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          Tag:
            $ref: '#/components/schemas/properties/Tag'
          castLevel:
            $ref: '#/components/schemas/properties/castLevel'


      MemberExSvcID:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          Tag:
            $ref: '#/components/schemas/properties/Tag'
          level:
            type: object
            properties:
              mem:
                $ref: '#/components/schemas/properties/memLevel'
              vip:
                $ref: '#/components/schemas/properties/vipLevel'
              cast:
                $ref: '#/components/schemas/properties/castLevel'
          count:
            type: object
            properties:
              follower:
                $ref: '#/components/schemas/properties/followerCnt'
              fan:
                $ref: '#/components/schemas/properties/fanCnt'

      MemberSimple:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          svcID:
            $ref: '#/components/schemas/properties/svcID'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          memLevel:
            $ref: '#/components/schemas/properties/memLevel'
          vipLevel:
            $ref: '#/components/schemas/properties/vipLevel'
          castLevel:
            $ref: '#/components/schemas/properties/castLevel'
          Tag:
            $ref: '#/components/schemas/properties/Tag'

      MemberSimpleExSvcID:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          memLevel:
            $ref: '#/components/schemas/properties/memLevel'
          vipLevel:
            $ref: '#/components/schemas/properties/vipLevel'
          castLevel:
            $ref: '#/components/schemas/properties/castLevel'

      Manager:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          fanLevel:
            $ref: '#/components/schemas/properties/fanLevel'
          memLevel:
            $ref: '#/components/schemas/properties/memLevel'
          vipLevel:
            $ref: '#/components/schemas/properties/vipLevel'
          castLevel:
            $ref: '#/components/schemas/properties/castLevel'
          regDateTime:
            type: string
            description: 매니저 등록일자, yyyy-MM-dd hh:mm:ss.fff

      Block:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          regDateTime:
            type: string
            description: 차단 등록일자, yyyy-MM-dd hh:mm:ss.fff
          delDateTime:
            type: string
            description: 차단 종료일자, yyyy-MM-dd hh:mm:ss.fff

      Follower:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
#          Tag:
#            $ref: '#/components/schemas/properties/Tag'
          regDateTime:
            type: string
            description: 팔로워 등록일자, yyyy-MM-dd hh:mm:ss.fff

      Follow:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          isPush:
            type: number
            enum: [0, 1]
            description: |
              알림 사용 여부
              - 0: 사용안함
              - 1: 사용함
          Tag:
            $ref: '#/components/schemas/properties/Tag'
          castLevel:
            $ref: '#/components/schemas/properties/castLevel'
          regDateTime:
            type: string
            description: 팔로잉 등록일자, yyyy-MM-dd hh:mm:ss.fff

      Fan:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          fanRank:
            $ref: '#/components/schemas/properties/fanRank'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          Tag:
            $ref: '#/components/schemas/properties/Tag'
          fanLevel:
            $ref: '#/components/schemas/properties/fanLevel'
          memLevel:
            $ref: '#/components/schemas/properties/memLevel'
          vipLevel:
            $ref: '#/components/schemas/properties/vipLevel'
          castLevel:
            $ref: '#/components/schemas/properties/castLevel'

      Supporter:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          supportMonth:
            type: number
            description: 서포터 가입 기간(월)
          supportStartDate:
            type: string
            description: 마지막 서포터 시작일자, yyyy-MM-dd hh:mm:ss.fff
          regDateTime:
            type: string
            description: 서포터 가입일자, yyyy-MM-dd hh:mm:ss.fff
          fanRank:
            $ref: '#/components/schemas/properties/fanRank'
          fanLevel:
            $ref: '#/components/schemas/properties/fanLevel'

      Comment:
        type: object
        properties:
          ixCode:
            $ref: '#/components/schemas/properties/ixCode'
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          writeMemKey:
            $ref: '#/components/schemas/properties/memKey'
          writeNickName:
            $ref: '#/components/schemas/properties/nickName'
          writeProfileImg:
            $ref: '#/components/schemas/properties/profileImg'
          txtStr:
            type: string
            description: |
              댓글 내용
              <br />소유자에 의해 강제 삭제된 경우(isGradeDelete=true), ''값 반환
            minLength: 1
            maxLength: 300
          isGradeDelete:
            type: boolean
            enum: [true, false]
            description: |
              게시판 소유자 강제 삭제 여부
              - true: 삭제됨
              - false: 정상
          regDate:
            type: string
            description: 댓글 등록일자, yyyy-MM-dd hh:mm:ss.fff
          msgType:
            type: number
            enum: [0, 1, 2]
            default: 0
            description: |
              메시지 구분
              - 0: 일반
              - 1: 관리자
              - 2: 후원
                - 후원의 경우에만 coinSkin, coinValue, msgBackType 값들이 실제 사용됩니다.
          coinSkin:
            $ref: '#/components/schemas/properties/coinSkin'
          coinValue:
            $ref: '#/components/schemas/properties/coinValue'
          msgBackType:
            $ref: '#/components/schemas/properties/msgBackType'
          isAnonymous:
            type: number
            enum: [0, 1]
            default: 0
            description: |
              익명 여부
              - 0: 익명아님
              - 1: 익명
          isOperator:
            type: number
            enum: [0, 1]
            default: 0
            description: |
              운영자 여부
              - 0: 운영자아님
              - 1: 운영자
          isPrivate:
            type: number
            enum: [0, 1]
            default: 0
            description: |
              공개 여부
              - 0: 공개
              - 1: 비공개

      QuestionSimple:
        type: object
        properties:
          ixCode:
            $ref: '#/components/schemas/properties/ixCode'
          category:
            $ref: '#/components/schemas/properties/categoryInquire'
          isAnswer:
            type: number
            enum: [0, 1]
            description: |
              답변 상태
              - 0: 답변 미완료
              - 1: 답변 완료
          regDate:
            type: string
            description: 문의 등록일자, yyyy-MM-dd hh:mm:ss.fff

      Question:
        type: object
        properties:
          ixCode:
            $ref: '#/components/schemas/properties/ixCode'
          category:
            $ref: '#/components/schemas/properties/categoryInquire'
          txtStr:
            type: string
            description: 문의 내용
            maxLength: 4000
          addFileName1:
            type: string
            description: 첨부파일 ##1
            maxLength: 300
          addFileName2:
            type: string
            description: 첨부파일 ##2
            maxLength: 300
          addFileName3:
            type: string
            description: 첨부파일 ##3
            maxLength: 300
          regDate:
            type: string
            description: 문의 등록일자, yyyy-MM-dd hh:mm:ss.fff
          isAnswer:
            type: number
            enum: [0, 1]
            description: |
              답변 상태
              - 0: 답변 미완료
              - 1: 답변 완료
          answerStr:
            type: string
            description: 답변 내용
            maxLength: 4000
          answerDate:
            type: string
            description: 답변 등록일자, yyyy-MM-dd hh:mm:ss.fff

      NoticeSimple:
        type: object
        properties:
          ixCode:
            $ref: '#/components/schemas/properties/ixCode'
          noticeType:
            $ref: '#/components/schemas/properties/noticeType'
#          noticeLang:
#            $ref: '#/components/schemas/properties/lang'
          txtTitle:
            type: string
            description: 공지 제목
          regDate:
            type: string
            description: 공지 등록일자, yyyy-MM-dd hh:mm:ss.fff
          isNew:
            type: boolean
            default: false
            enum: [true, false]
            description: 30일 이내 등록건 여부

      Notice:
        type: object
        properties:
          ixCode:
            $ref: '#/components/schemas/properties/ixCode'
          noticeType:
            $ref: '#/components/schemas/properties/noticeType'
          noticeLang:
            $ref: '#/components/schemas/properties/lang'
          txtTitle:
            type: string
            description: 공지 제목
          txtStr:
            type: string
            description: 공지 내용
          regDate:
            type: string
            description: 공지 등록일자, yyyy-MM-dd hh:mm:ss.fff

      EventSimple:
        type: object
        properties:
          ixCode:
            $ref: '#/components/schemas/properties/ixCode'
          bTitle:
            type: string
            description: 이벤트 제목
          startDate:
            type: string
            description: 이벤트 시작일자, yyyy-MM-dd hh:mm:ss.fff
          endDate:
            type: string
            description: 이벤트 종료일자, yyyy-MM-dd hh:mm:ss.fff
          statusCode:
            type: number
            enum: [0, 1, 2]
            description: |
              이벤트 상태 코드
              - 0: 이벤트 시작전
              - 1: 이벤트 진행중
              - 2: 이벤트 종료
          isResultNoti:
            type: boolean
            description: |
              이벤트 결과 등록 여부
              - 0: 이벤트 결과정보 미등록 상태
              - 1: 이벤트 결과정보 등록 완료상태
          url_PC:
            type: string
            description: PC영역 이벤트배너 URL
          #imgFile_PC:
          #  type: string
          #  description: PC영역 이벤트배너 파일명
          url_Mobile:
            type: string
            description: Mobile영역 이벤트배너 URL
          #imgFile_Mobile:
          #  type: string
          #  description: Mobile영역 이벤트배너 파일명

      EventView:
        type: object
        properties:
          ixCode:
            $ref: '#/components/schemas/properties/ixCode'
          bTitle:
            type: string
            description: 이벤트 제목
          #bText:
          #  type: string
          #  description: 이벤트 내용
          startDate:
            type: string
            description: 이벤트 시작일자, yyyy-MM-dd hh:mm:ss.fff
          endDate:
            type: string
            description: 이벤트 종료일자, yyyy-MM-dd hh:mm:ss.fff
          statusCode:
            type: number
            enum: [0, 1, 2]
            description: |
              이벤트 상태 코드
              - 0: 이벤트 시작전
              - 1: 이벤트 진행중
              - 2: 이벤트 종료
          isResultNoti:
            type: boolean
            description: |
              이벤트 결과 등록 여부
              - 0: 이벤트 결과정보 미등록 상태
              - 1: 이벤트 결과정보 등록 완료상태
          resultText:
            type: string
            description: 이벤트 결과 내용
          url_PC:
            type: string
            description: PC영역 이벤트배너 URL
          #imgFile_PC:
          #  type: string
          #  description: PC영역 이벤트배너 파일명
          url_Detail_PC:
            type: string
            description: PC영역 상세 이벤트배너 URL
          #imgFile_Detail_PC:
          #  type: string
          #  description: PC영역 상세 이벤트배너 파일명
          url_Mobile:
            type: string
            description: Mobile영역 이벤트배너 URL
          #imgFile_Mobile:
          #  type: string
          #  description: Mobile영역 이벤트배너 URL
          url_Detail_Mobile:
            type: string
            description: Mobile영역 상세 이벤트배너 URL
          #imgFile_Detail_Mobile:
          #  type: string
          #  description: Mobile영역 상세 이벤트배너 파일명

      CastMemer:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          userType:
            $ref: '#/components/schemas/properties/userType'
          vipLevel:
            $ref: '#/components/schemas/properties/vipLevel'
          memLevel:
            $ref: '#/components/schemas/properties/memLevel'
          fanLevel:
            $ref: '#/components/schemas/properties/fanLevel'
          #metadata:
          #  $ref: '#/components/schemas/properties/swallowUserMetadata'

      CastDonator:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          coinSum:
            type: number
            description: |
              현재 방송에 대해 선물한 총 코인갯수
          lastDateTime:
            type: string
            description: |
              마지막으로 코인 선물한 일시
          #fanLevel:
          #  type: number
          #  description: |
          #    현재 방송자에 대한 팬레벨

      ShopCoin:
        type: object
        properties:
          goodCode:
            $ref: '#/components/schemas/properties/goodCode'
          goodName:
            $ref: '#/components/schemas/properties/goodName'
          goodCount:
            type: number
            description: 유효 코인수
          payAmount:
            $ref: '#/components/schemas/properties/payAmount'
          vipLevelMin:
            $ref: '#/components/schemas/properties/vipLevelMin'
          vipLevelMax:
            $ref: '#/components/schemas/properties/vipLevelMax'

      ShopCoinUserOwn:
        type: object
        properties:
          goodCode:
            $ref: '#/components/schemas/properties/goodCode'
          goodName:
            $ref: '#/components/schemas/properties/goodName'
          goodCount:
            type: number
            description: 유효 코인수
          payAmount:
            $ref: '#/components/schemas/properties/payAmount'
          vipLevelMin:
            $ref: '#/components/schemas/properties/vipLevelMin'
          vipLevelMax:
            $ref: '#/components/schemas/properties/vipLevelMax'
          userOwnedCount:
            type: number
            description: |
              현재 사용자가 소유하고 있는 아이템 갯수
              <br /><font color="red">*coinType=special & r_uoc=1인 경우에만 출력</font>

      ShopItem:
        type: object
        properties:
          goodImg:
            $ref: '#/components/schemas/properties/goodImg'
          goodCode:
            $ref: '#/components/schemas/properties/goodCode'
          goodName:
            $ref: '#/components/schemas/properties/goodName'
          payAmount:
            $ref: '#/components/schemas/properties/payAmount'
          vipLevelMin:
            $ref: '#/components/schemas/properties/vipLevelMin'
          vipLevelMax:
            $ref: '#/components/schemas/properties/vipLevelMax'
          itemType:
            $ref: '#/components/schemas/properties/itemType'
          count:
            type: number
            description: |
              아이템 사용 횟수/일수
              - itemType이 0인 경우 -> 횟수
              - itemType이 1인 경우 -> 일수
          addCnt:
            type: number
            description: |
              plusView/plusManager의 경우 사용되는 추가 값
              - plusView인 경우 -> 추가되는 시청 인원수
              - plusManager인 경우 -> 추가되는 매니저 인원수

      Ranking:
        type: object
        properties:
          ixCode:
            type: number
            description: 순위값
            minumum: 1
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          castMinute:
            type: number
            description: 누적 방송시간 (단위:분)
          likeCount:
            type: number
            description: 누적 좋아요 수 (추천)
          viewCount:
            type: number
            description: 누적 시청자 수
          followCount:
            type: number
            description: 누적 팔로잉 수 (즐겨찾기)
          incomeCoin:
            type: number
            description: 누적 수입 코인 수 (루비)
          rankPoint:
            type: number
            description: 랭킹 점수
          castLevel:
            $ref: '#/components/schemas/properties/castLevel'
          isOnAir:
            $ref: '#/components/schemas/properties/isOnAir'
          isCastLock:
            $ref: '#/components/schemas/properties/isCastLock'
          isLeave:
            $ref: '#/components/schemas/properties/isLeave'


      ClipWithFileNIsLiked:
        type: object
        properties:
          ixCode:
            $ref: '#/components/schemas/properties/ixCode'
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          clipTitle:
            type: string
            description: 클립영상 제목
            maxLength: 100
          clipFilePath:
            type: string
            description: 클립영상 URL
            maxLength: 500
          clipThumbnailPath:
            type: string
            description: 클립영상 썸네일 파일 URL
            maxLength: 500
          viewCnt:
            type: number
            description: 재생 횟수
          likeCnt:
            type: number
            description: 좋아요 갯수
          Tag:
            $ref: '#/components/schemas/properties/Tag'
          regDate:
            type: string
            description: 등록일, yyyy-MM-dd hh:mm:ss.fff
          viewType:
            $ref: '#/components/schemas/properties/viewType'
          isAdult:
            $ref: '#/components/schemas/properties/isAdult'
          isLiked:
            type: boolean
            default: false
            description: |
              좋아요 처리 여부
              <br /><font color="red">로그인 하지 않은 경우 항상 false</font>
          castLevel:
            $ref: '#/components/schemas/properties/castLevel'
          provider:
            $ref: '#/components/schemas/properties/clipProvider'

      ClipWithIsLiked:
        type: object
        properties:
          ixCode:
            $ref: '#/components/schemas/properties/ixCode'
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          clipTitle:
            type: string
            description: 클립영상 제목
            maxLength: 100
          clipThumbnailPath:
            type: string
            description: 클립영상 썸네일 파일 URL
            maxLength: 500
          viewCnt:
            type: number
            description: 재생 횟수
          likeCnt:
            type: number
            description: 좋아요 갯수
          Tag:
            $ref: '#/components/schemas/properties/Tag'
          regDate:
            type: string
            description: 등록일, yyyy-MM-dd hh:mm:ss.fff
          viewType:
            $ref: '#/components/schemas/properties/viewType'
            isAdult:
              $ref: '#/components/schemas/properties/isAdult'
          isLiked:
            type: boolean
            default: false
            description: |
              좋아요 처리 여부
              <br /><font color="red">로그인 하지 않은 경우 항상 false</font>

      ClipWithCastLevel:
        type: object
        properties:
          ixCode:
            $ref: '#/components/schemas/properties/ixCode'
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          clipTitle:
            type: string
            description: 클립영상 제목
            maxLength: 100
          clipThumbnailPath:
            type: string
            description: 클립영상 썸네일 파일 URL
            maxLength: 500
          viewCnt:
            type: number
            description: 재생 횟수
          likeCnt:
            type: number
            description: 좋아요 갯수
          Tag:
            $ref: '#/components/schemas/properties/Tag'
          regDate:
            type: string
            description: 등록일, yyyy-MM-dd hh:mm:ss.fff
          viewType:
            $ref: '#/components/schemas/properties/viewType'
          isAdult:
            $ref: '#/components/schemas/properties/isAdult'
          castLevel:
            $ref: '#/components/schemas/properties/castLevel'

      ClipWithCastLevelOwner:
        type: object
        properties:
          ixCode:
            $ref: '#/components/schemas/properties/ixCode'
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          clipTitle:
            type: string
            description: 클립영상 제목
            maxLength: 100
          clipThumbnailPath:
            type: string
            description: 클립영상 썸네일 파일 URL
            maxLength: 500
          viewCnt:
            type: number
            description: 재생 횟수
          likeCnt:
            type: number
            description: 좋아요 갯수
          Tag:
            $ref: '#/components/schemas/properties/Tag'
          regDate:
            type: string
            description: 등록일, yyyy-MM-dd hh:mm:ss.fff
          viewType:
            $ref: '#/components/schemas/properties/viewType'
          isAdult:
            $ref: '#/components/schemas/properties/isAdult'
          isOpen:
            type: number
            enum: [0, 1]
            default: 0
            description: |
              표시 여부
                - 0: 미표시
                - 1: 표시
          isBlock:
            type: number
            enum: [0, 1]
            default: 0
            description: |
              운영자에 의한 블럭 처리 여부
                - 0: 정상
                - 1: 블럭
          blockMemo:
            type: string
            description: |
              운영자에 의해 블럭된 경우, 블럭 사유
          castLevel:
            $ref: '#/components/schemas/properties/castLevel'

      Clip:
        type: object
        properties:
          ixCode:
            $ref: '#/components/schemas/properties/ixCode'
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          clipTitle:
            type: string
            description: 클립영상 제목
            maxLength: 100
          clipThumbnailPath:
            type: string
            description: 클립영상 썸네일 파일 URL
            maxLength: 500
          viewCnt:
            type: number
            description: 재생 횟수
          likeCnt:
            type: number
            description: 좋아요 갯수
          Tag:
            $ref: '#/components/schemas/properties/Tag'
          regDate:
            type: string
            description: 등록일, yyyy-MM-dd hh:mm:ss.fff
          viewType:
            $ref: '#/components/schemas/properties/viewType'
          isAdult:
            $ref: '#/components/schemas/properties/isAdult'

      ClipWithFilePath:
        type: object
        properties:
          ixCode:
            $ref: '#/components/schemas/properties/ixCode'
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          clipTitle:
            type: string
            description: 클립영상 제목
            maxLength: 100
          clipFilePath:
            type: string
            description: 클립영상 썸네일 파일 URL
            maxLength: 500
          clipThumbnailPath:
            type: string
            description: 클립영상 썸네일 파일 URL
            maxLength: 500
          viewCnt:
            type: number
            description: 재생 횟수
          likeCnt:
            type: number
            description: 좋아요 갯수
          Tag:
            $ref: '#/components/schemas/properties/Tag'
          regDate:
            type: string
            description: 등록일, yyyy-MM-dd hh:mm:ss.fff

      CastWithRTag:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          castLevel:
            $ref: '#/components/schemas/properties/castLevel'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          castDTCode:
            $ref: '#/components/schemas/properties/castDTCode'
          Title:
            $ref: '#/components/schemas/properties/Title'
          rTag:
            type: string
            description: |
              대표 Tag값(검색에 사용된 태그 등)
              <br />해당되지 않는 경우 ""값을 반환 합니다.
            maxLength: 10
          Tag:
            $ref: '#/components/schemas/properties/Tag'
          isLock:
            $ref: '#/components/schemas/properties/isLock'
          isAdult:
            $ref: '#/components/schemas/properties/isAdult'
          castTargetType:
            $ref: '#/components/schemas/properties/castTargetType'
          realViewCnt:
            $ref: '#/components/schemas/properties/realViewCnt'
          Set_HL:
            $ref: '#/components/schemas/properties/Set_HL'
          Set_CL:
            $ref: '#/components/schemas/properties/Set_CL'
          viewType:
            $ref: '#/components/schemas/properties/viewType'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          thumbnail:
            $ref: '#/components/schemas/properties/thumbnail'

      Cast:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          #castLevel:
          #  $ref: '#/components/schemas/properties/castLevel'
          #svcKey:
          #  type: string
          #  description: 방송자 소속 서비스정보
          #svcID:
          #  type: string
          #  description: 방송자 고유 ID
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          #castDTCode:
          #  $ref: '#/components/schemas/properties/castDTCode'
          Title:
            $ref: '#/components/schemas/properties/Title'
          Tag:
            $ref: '#/components/schemas/properties/Tag'
          #exeCode:
          #  $ref: '#/components/schemas/properties/exeCode'
          castTargetType:
            $ref: '#/components/schemas/properties/castTargetType'
          castTargetLevel:
            $ref: '#/components/schemas/properties/castTargetLevel'
          isLock:
            $ref: '#/components/schemas/properties/isLock'
          isAdult:
            $ref: '#/components/schemas/properties/isAdult'
          #setViewCnt:
          #  $ref: '#/components/schemas/properties/setViewCnt'
          #realViewCnt:
          #  $ref: '#/components/schemas/properties/realViewCnt'
          #Set_HL:
          #  $ref: '#/components/schemas/properties/Set_HL'
          #Set_CL:
          #  $ref: '#/components/schemas/properties/Set_CL'
          #pictureURL:
          #  type: string
          #  description: 영상 접속 URL
          #chatURL:
          #  $ref: '#/components/schemas/properties/chatURL'
          viewType:
            $ref: '#/components/schemas/properties/viewType'
          #thumbnail:
          #  $ref: '#/components/schemas/properties/thumbnail'
          castDateTime:
            type: string
            description: 방송시작일, yyyy-MM-dd hh:mm:ss.fff
          level:
            type: object
            properties:
              mem:
                $ref: '#/components/schemas/properties/memLevel'
              vip:
                $ref: '#/components/schemas/properties/vipLevel'
              cast:
                $ref: '#/components/schemas/properties/castLevel'
          supporter:
            type: object
            properties:
              exists:
                type: boolean
                default: false
                description: |
                  서포터 가입 유무
                  - true: 가입됨
                  - false: 가입안됨
              supportMonth:
                type: number|null
                default: null
                description: 서포터 가입 기간, 가입되지 않은 경우 null 반환

      CastLogin:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          Title:
            $ref: '#/components/schemas/properties/Title'
          Tag:
            $ref: '#/components/schemas/properties/Tag'
          castTargetType:
            $ref: '#/components/schemas/properties/castTargetType'
          castTargetLevel:
            $ref: '#/components/schemas/properties/castTargetLevel'
          isLock:
            $ref: '#/components/schemas/properties/isLock'
          isAdult:
            $ref: '#/components/schemas/properties/isAdult'
          viewType:
            $ref: '#/components/schemas/properties/viewType'
          castDateTime:
            type: string
            description: 방송시작일, yyyy-MM-dd hh:mm:ss.fff
          pictureURL:
            $ref: '#/components/schemas/properties/pictureURL'
          streamName:
            $ref: '#/components/schemas/properties/streamName'
          level:
            type: object
            properties:
              mem:
                $ref: '#/components/schemas/properties/memLevel'
              vip:
                $ref: '#/components/schemas/properties/vipLevel'
              cast:
                $ref: '#/components/schemas/properties/castLevel'
          supporter:
            type: object
            properties:
              exists:
                type: boolean
                default: false
                description: |
                  서포터 가입 유무
                  - true: 가입됨
                  - false: 가입안됨
              supportMonth:
                type: number|null
                default: null
                description: 서포터 가입 기간, 가입되지 않은 경우 null 반환

      WowzaSetCast:
        type: object
        properties:
          memKey:
            $ref: '#/components/schemas/properties/memKey'
          svcKey:
            $ref: '#/components/schemas/properties/svcKey'
          svcID:
            $ref: '#/components/schemas/properties/svcID'
          nickName:
            $ref: '#/components/schemas/properties/nickName'
          castDTCode:
            $ref: '#/components/schemas/properties/castDTCode'
          Title:
            $ref: '#/components/schemas/properties/Title'
          Tag:
            $ref: '#/components/schemas/properties/Tag'
          castDateTime:
            type: string
            description: 방송시작일
          exeCode:
            $ref: '#/components/schemas/properties/exeCode'
          isLock:
            $ref: '#/components/schemas/properties/isLock'
          isAdult:
            $ref: '#/components/schemas/properties/isAdult'
          castTargetType:
            $ref: '#/components/schemas/properties/castTargetType'
          castTargetLevel:
            $ref: '#/components/schemas/properties/castTargetLevel'
          setViewCnt:
            $ref: '#/components/schemas/properties/setViewCnt'
          realViewCnt:
            $ref: '#/components/schemas/properties/realViewCnt'
          Set_HL:
            $ref: '#/components/schemas/properties/Set_HL'
          Set_CL:
            $ref: '#/components/schemas/properties/Set_CL'
          pictureURL:
            $ref: '#/components/schemas/properties/pictureURL'
          chatURL:
            $ref: '#/components/schemas/properties/chatURL'
          profileImg:
            $ref: '#/components/schemas/properties/profileImg'
          viewType:
            $ref: '#/components/schemas/properties/viewType'
          streamName:
            $ref: '#/components/schemas/properties/streamName'

    properties:

      svcKey:
        type: string
        description: |
          서비스사 구분을 위한 키값. <font color="red">"F0F06126929A5F62110331EE91952AD9"</font>

      coinUseType:
        type: number
        enum: [0, 1, 2, 3, 4]
        description: |
          코인 차감⬝증감 형태
          - 0: 현금 환전(보유 금액을 현금으로 환전시)
          - 1: 온라인 선물(방송중 선물시)
          - 2: 오프라인 선물(방송중이 아닌상태에서의 일반 선물시)
          - 3: VOD 선물(방송이 아닌 방송자의 VOD 컨텐츠에 선물시)
          - 4: 아이템 구매(일반적 아이템 구매시)

      coinUseTypeCubic:
        type: number
        enum: [4, 5, 6]
        description: |
          코인 차감⬝증감 형태
          - 4: 아이템 구매
          - 5: 아이템 선물
          - 6: 서비스기능 소모시

      goodCode:
        type: string
        description: 상품코드
        maxLength: 50

      goodName:
        type: string
        description: 상품명
        maxLength: 50

      goodCount:
        type: string
        description: 상품 구매 갯수

      payAmount:
        type: string
        description: 총 결제금액

      orderCode:
        type: string
        description: 결재주문 번호⬝코드
        maxLength: 500

      isOrderCancel:
        type: number
        enum: [0, 1]
        description: |
          결재⬝지급 취소여부
          - 0: 정상
          - 1: 취소

      orderCancelDateTime:
        type: string
        description: 결재⬝지급 취소 처리일자, yyyy-MM-dd hh:mm:ss.fff

      regDateTime:
        type: string
        description: 등록일자, yyyy-MM-dd hh:mm:ss.fff

      vipLevelMin:
        type: string
        description: 구매가능 VIP등급 최소값

      vipLevelMax:
        type: string
        description: 구매가능 VIP등급 최대값

      saleLoc:
        type: number
        enum: [0, 1, 2, 3]
        description: |
          상품 판매 형태
          - 0: 일반금액 결재
          - 1: 환전금액 결재
          - 2: 구글 마켓 IN APP결재
          - 3: 애플 스토어 IN APP결재

      itemType:
        type: number
        enum: [0, 1]
        description: |
          아이템 사용형태
          - 0: 횟수
          - 1: 일수

      memKey:
        type: number
        description: |
          회원 index값
          회원을 특정할 수 없거나 Anonymous 아이템 사용하는 경우 "0"값을 반환합니다.

      memKeyNullable:
        type: number
        description: 회원 index값
        default: null

      castMemKey:
        type: number
        description: 방송자 index값

      followingMemKey:
        type: number
        description: 팔로잉 대상 index값

      targetMemKey:
        type: number
        description: 처리 대상 회원 index

      Title:
        type: string
        description: 방송 제목

      castDTCode:
        type: string
        description: 방송코드, {YYYYMMDDhhmmss} 형식
        length: 14

      themaGroup:
        type: number
        enum: [1, 2, 3]
        description: |
          코인 구분(하트/장미/루비)
          - 1: 하트
          - 2: 장미
          - 3: 루비

      themaCode:
        type: number
        enum: [1, 2, 3, 4]
        description: |
          이미지 주제별 그룹명
          - 1: 인물
          - 2: 게임
          - 3: 스포츠
          - 4: 음악

      fanLevel:
        type: number
        enum: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        default: 0
        description: |
          팬 레벨
          - 0: FAN0, < 1,000
          - 1: FAN1, < 5,000
          - 2: FAN2, < 10,000
          - 3: FAN3, < 50,000
          - 4: FAN4, < 100,000
          - 5: FAN5, < 150,000
          - 6: FAN6, < 200,000
          - 7: FAN7, < 250,000
          - 8: FAN8, < 300,000
          - 9: FAN9, < 350,000
          - 10: FAN10, >= 350,000

      fanRank:
        type: number
        minimum: 1
        description: |
          팬 랭킹값

      memLevel:
        type: number
        description: 회원 레벨

      vipLevel:
        type: number
        description: VIP 회원 레벨

      castLevel:
        type: number
        enum: [0, 1, 2, 3, 4, 5]
        description: |
          방송자 레벨
            - 0: Normal
            - 1: Rookie
            - 2: PRO
            - 3: ALL STAR
            - 4: MASTER
            - 5: MVP

      isOnAir:
        type: boolean
        default: false
        description: |
          현재 방송 진행여부 반환
          - true: 현재 진행중인 방송 존재함
          - false: 현재 진행중인 방송 존재하지 않음

      isLeave:
        type: boolean
        default: false
        description: |
          회원 탈퇴 여부
          - true: 현재 회원 탈퇴된 상태
          - false: 탈퇴되지 않은 상태

      isCastLock:
        type: boolean
        default: false
        description: |
          현재 진행중인 방송의 isLock 여부
          - true: isLock 상태
          - false: 방송이 진행중이지 않거나 isLock이 false 상태

      profileImg:
        type: string
        description: 회원 프로필 이미지 URL

      thumbnail:
        type: string
        description: 실시간 방송 썸네일 이미지 URL, 사용가능 하지 않은 경우 ""(빈값)을 반환합니다.

      goodImg:
        type: string
        description: 아이템 이미지 URL

      Tag:
        type: string
        description: |
          회원 방송 설정정보의 Tag값
          - 형식은 {태그}|{태그}|...
          - 각각의 태그는 1~10자리만 사용가능 합니다.
          - 태그 갯수는 10개를 초과할 수 없습니다.
        maxLength: 3000

      svcID:
        type: string
        description: 회원 Id, 영문숫자형 특수문자는"_"만 가능
        minLength: 4
        maxLength: 15

      pictureURL:
        type: string
        description: |
          영상 서버 연결을 위한 주소 정보

      chatURL:
        type: string
        description: |
          채팅 서버 연결을 위한 주소 정보<br />
          - public - <font color="blue">http://swallow.localhost</font>
          - private - <font color="red">http://192.168.0.1</font>

      Set_HL:
        type: number
        enum: [0, 1]
        description: |
          핫리스트 사용 여부
          - 0: 사용 안함
          - 1: 사용함

      Set_CL:
        type: number
        enum: [0, 1]
        description: |
          컬러리스트 사용 여부
          - 0: 사용 안함
          - 1: 사용함

      Set_PV:
        type: number
        enum: [0, 1]
        description: |
          플러스뷰 사용 여부
          - 0: 사용 안함
          - 1: 사용함

      Set_PM:
        type: number
        enum: [0, 1]
        description: |
          플러스매니저 사용 여부
          - 0: 사용 안함
          - 1: 사용함

      isAdult:
        type: number
        enum: [0, 1]
        description: |
          성인 방송 여부
          - 0: 일반 방송
          - 1: 성인 방송

      isLock:
        type: number
        enum: [0, 1]
        description: |
          비번 사용하여 잠금한 방송 여부
          - 0: 잠금 사용 안함
          - 1: 잠금 사용함

      lockPassword:
        type: string
        description: 비밀번호 사용시(isLock == true) 사용할 비번
        minLength: 4
        maxLength: 8

      viewType:
        type: number
        enum: [1, 2]
        description: |
          영상 송출 구분값
          - 1: PC/Mobile 16:9 가로 화면
          - 2: Mobile 전체 세로 화면

      castTargetLevel:
        type: number
        default: 1
        description: |
          방송 대상 설정값에 대한 등급 설정 기준값

      setViewCnt:
        type: number
        description: 최대 입장 가능 인원수

      realViewCnt:
        type: number
        description: 실제 접속 인원수

      castTargetType:
        type: number
        enum: [0, 1, 2]
        default: 0
        description: |
          방송 대상 설정값, 등급 설정은 castTargetLevel값 기준
          - 0: 일반 - 참여 제한없음
          - 1: 회원등급 - 설정한 회원 등급 이상만 참여 가능
          - 2: 팬등급 - 설정한 팬 등급 이상만 참여 가능

      countryCode:
        type: string
        description: |
          국가번호
        minLength: 2
        maxLength: 6

      cellNumber:
        type: string
        description: |
          전화번호
        minLength: 9
        maxLength: 11

      ptnKey:
        type: string
        description: |
          파트너사 코드

      mktKey:
        type: string
        description: |
          마케팅사 코드
          - 샾라이브: 0319E97980552C5FE00F6699CDAA6352

      nickName:
        type: string
        description: |
          회원 닉네임, 문자/숫자 조합
        minLength: 2
        maxLength: 15

      nickNameNullable:
        type: string
        description: |
          회원 닉네임, 문자/숫자 조합
        minLength: 2
        maxLength: 15
        default: null

      accLoc:
        type: string
        enum: ['local', 'naver', 'kakao', 'google', 'facebook', 'apple']
        description: |
          사용자 서비스가입/로그인 계정 위치
          - local: 로컬 가입 계정(소셜로그인시 사용 안함)
          - naver: 네이버(현재 사용안함)
          - kakao: 카카오
          - google: 구글
          - facebook: 페이스북
          - apple: apple login

      exeCode:
        type: number
        enum: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
        default: 0
        description: |
          사용자 접근 기기 구분값
          - 0: 정보없음
          - 1: Web Mobile
          - 2: Web PC
          - 3: WIN Application
          - 4: MAC Application
          - 5: iOS 모바일(앱스토어)
          - 6: iOS 모바일(엔터)
          - 7: iOS 패드(앱스토어)
          - 8: iOS 패드(엔터)
          - 9: AOS App mobile (googlever.) 
          - 10: AOS App mobile (onestore(sk) ver.) 
          - 11: AOS App mobile (down ver.)
          - 12: AOS

#      payTxt:
#        type: string
#        enum: ['취소', '보상 지금', '이벤트 지급', '관리자 지급', '보너스 지급', '무통장입금 지급', '휴대폰 결제', '신용카드 결제', '계좌이체 결제', '가상계좌 결제', '도서상품권 결제', '문화상품권 결제', '해피머니상품권 결제', 'Google 결제', 'Apple 결제']
#        description: 결제 처리 구분

      payCode:
        type: number
        enum: [0, 1, 2, 3, 4, 5, 6, 50, 51, 52, 53, 54, 55, 56, 100, 101, 102]
        description: |
          결재처리 분류 코드
          - 0: 결제⬝지급 취소
          - 1: 보상 지금
          - 2: 이벤트 지급
          - 3: 관리자 지급
          - 4: 보너스 지급
          - 5: 무통장입금 지급
          - 6: 업적보상 지급
          - 50: 휴대폰 결제
          - 51: 신용카드 결제
          - 52: 계좌이체 결제
          - 53: 가상계좌 결제
          - 54: 도서상품권 결제
          - 55: 문화상품권 결제
          - 56: 해피머니상품권 결제
          - 100: Google 결제
          - 101: Apple 결제
          - 102: Cubic 결제

      paymentAmount:
        type: number
        description: 결제 금액

      sex:
        type: string
        enum: ['0', 'F', 'M']
        description: |
          성별 구분
          - 0: 정보없음
          - F: 여
          - M: 남

      DI:
        type: string
        description: |
          본인인증 DI 값

      CI:
        type: string
        description: |
          본인인증 CI 값

      birth:
        type: string
        description: |
          생일정보, YYYYMMDD 형식

      certifyCode:
        type: string
        description: 인증 확인을 위한 코드값
        minLength: 5
        maxLength: 5

      certifyToken:
        type: string
        description: 인증 코드 확인을 위한 암호화된 문자열

      swallowUserMetadata:
        type: string
        description: |
          사용자 metadata값
          <br /> 형식: {memKey},{vipLevel},{memLevel},{colorChatType(a)},{inkChatType(a)}

      userType:
        type: string
        enum: ['0', '1', '2', '5']
        description: |
          채팅서버 채널 사용자 구분값
          - 0: 관리자
          - 1: 방송자
          - 2: 매니저
          - 5: 일반회원

      ixCode:
        type: number
        description: 특정자료의 index값
        minimum: 1

      password:
        type: string
        description: 로그인 비밀번호
        minLength: 8
        maxLength: 20

      agreeMarketing:
        type: number
        enum: [0, 1]
        description: |
          마케팅 이용 동의 여부
          - 0: 비동의
          - 1: 동의

      lang:
        type: string
        enum: ['ko', 'en', 'ja']
        default: 'ko'
        description: |
          <font color="blue">(r)equest (l)anguage</font>
          <br />현재 클라이언트에서 사용중인 언어별 구분을 위한 요청값
          <br />언어 코드는 <a href="https://www.iso.org/iso-639-language-codes.html">[ISO 639 Alpha-2]</a>를 기준으로 합니다.
            - 한국어 - "ko"
            - 영어 - "en"
            - 일본어 - "ja"

      scheduleType:
        type: number
        enum: [0, 1]
        description: |
          예약 방송 구분
          - 0: 정규방송
          - 1: 대체방송

      scheduleContent:
        type: string
        description: |
          방송 스케줄 설명

      streamName:
        type: string
        description: |
          방송 스트림/썸네일 파일명을 위한 문자열(랜덤생성)

      followerCnt:
        type: number
        description: 팔로워수

      followingCnt:
        type: number
        description: 팔로잉수

      fanCnt:
        type: number
        description: 팬수

      isFollowing:
        type: boolean
        description: |
          팔로잉 상태(로그인 상태 아닌 경우 항상 false)
          - true: 팔로잉중
          - false: 팔로잉중 아님

      coin:
        type: number
        description: 현재 보유중인 코인(루비) 총합

      cubic:
        type: number
        description: 현재 보유중인 큐빅 총합

      useCoin:
        type: number
        description: 사용(후원)한 코인(루비) 갯수

      isCellCertify:
        type: boolean
        defaullt: false
        description: 본인인증 여부

      noticeType:
        type: number
        description: |
          공지 구분
          - 0: 일반
          - 1: 중요
        enum: [0, 1]

      reportType:
        type: number
        enum: [0, 1, 2, 3]
        description: |
          신고 구분 코드
          - 0: 상업성 홍보 및 스팸
          - 1: 욕설 및 폭력
          - 2: 권리침해 및 괴롭힘
          - 3: 음란 및 노골적인 표현

      categoryInquire:
        type: string
        enum: ['1', '2', '3', '4', '5', '6', '7', '8']
        maxLength: 10
        description: |
          질문 카테고리
          - 1: 라이브 방송 및 시청
          - 2: 채팅하기
          - 3: 채널 및 콘텐츠 관리
          - 4: 수익 및 정산
          - 5: 구매 및 환불
          - 6: 오류 및 장애
          - 7: 이용제한 및 규제
          - 8: 기타

      missionCode:
        type: string
        description: 업적 미션 고유 코드

      groupCode:
        type: number
        enum: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        description: |
          업적 카테고리 코드
          - 0: 제가 확실해요
          - 1: 하트의 신
          - 2: 남들과 다른눈
          - 3: 귀족의 길
          - 4: 지지자들 계급
          - 5: 남들과 다른 등급
          - 6: 응답하라 온라인
          - 7: 정규 방송자
          - 8: 인기의 비결
          - 9: 팬파워
          - 10: 최고의 시청률

      missionStep:
        type: number
        description: |
          groupCode별 미션 단계
          <br />groupCode별 단계가 상이하니, 별도의 업정 정보를 확인하시기 바랍니다.

      goalType:
        type: number
        enum: [0, 1]
        description: |
          달성 표시형태
          - 0: 누적 카운트형
          - 1: 달성 카운트형

      isComplete:
        type: boolean
        enum: [true, false]
        default: false
        description: |
          미션 달성 여부
          - true: 달성
          - false: 미달성

      isReward:
        type: boolean
        enum: [true, false]
        default: false
        description: |
          보상 수신 여부
          - 0:미수신
          - 1:수신완료

      coinSkin:
        type: number
        enum: [0, 4, 5, 6, 7, 8, 9]
        description: |
          후원시의 코인 테마구분
          - 0: 일반
          - 1: 하트(미사용)
          - 2: 장미(미사용)
          - 3: 루비(미사용)
          - 4: joy/기쁨
          - 5: shy/부끄러움
          - 6: sad/슬픔
          - 7: anger/분노
          - 8: pain/고통
          - 9: adult/19

      coinCategory:
        type: string
        enum: ['', 'joy', 'shy', 'sad', 'anger', 'pain', 'adult']
        default: ''
        description: |
          후원시의 코인 카테고리 구분
          - '': 일반
          - 'joy': 기쁨
          - 'shy': 부끄러움
          - 'sad': 슬픔
          - 'anger': 분노
          - 'pain': 고통
          - 'adult': 19

      coinValue:
        type: number
        default: 0
        description: 코인(루비) 갯수

      coinValueAdd:
        type: number
        description: 코인(루비) 갯수
        minimum: 1
        maximum: 10000

      addCoin:
        type: number
        default: 0
        description: 추가 적립 코인(루비/큐빅) 갯수

      msgBackType:
        type: number
        enum: [0, 1, 2, 3]
        default: 0
        description: |
          후원시의 배경 이미지구분
          - 0: 일반(후원 미사용)
          - 1: 배경#1
          - 2: 배경#2
          - 3: 배경#3

      streamKey:
        type: string
        description: |
          방송 송출을 위한 연결 문자열

      itemCode:
        type: string
        enum: ['CN', 'FV', 'JB', 'NO', 'PV', 'PM', 'CC', 'IC', 'HL', 'CL', 'LU', 'AN', 'GC']
        description: |
          아이템 구분 코드
          - CN: ChangeNickName
          - FV: FreeView
          - JB: JoinBar
          - NO: Notice
          - PV: PlusView
          - PM: PlusManager
          - CC: ColorChat
          - IC: InkChat
          - HL: HotList
          - CL: ColorList
          - LU: LiveUp
          - AN: Anonymous
          - GC: GlobalChat

      paySetType:
        type: number
        enum: [-1, 0, 1, 2]
        description: |
          정산 유형
            - -1: 자료없음(사용 유무 확인 필요)
            - 0: 신청별 환전처리 설정(수동)
            - 1: 주별 자동환정 처리 설정(자동)
            - 2: 월별 자동환정 처리 설정(자동)

      bankName:
        type: string
        description: 은행명

      bankLocCode:
        type: string
        description: |
          은행 코드
            - 039: 경남
            - 034: 광주
            - 004: 국민
            - 003: 기업은행
            - 011: 농협
            - 012: 단위농협
            - 031: 대구
            - 032: 부산
            - 064: 산림조합
            - 002: 산업
            - 050: 상호저축
            - 045: 새마을금고
            - 007: 수협
            - 088: 신한
            - 048: 신협
            - 020: 우리
            - 071: 우체국
            - 037: 전북
            - 035: 제주
            - 081: KEB하나
            - 027: 한국씨티
            - 055: 도이치
            - 060: BOA
            - 062: 중국공상
            - 023: SC제일
            - 054: HSBC
            - 089: K뱅크
            - 090: 카카오뱅크

      bankAccNum:
        type: string
        description: 계좌번호

      accountName:
        type: string
        description: 예금주명

      clipProvider:
        type: string
        enum: ['youtube']
        description: |
          영상 제공자 정보
          - youtube: 유튜브

      accessToken:
        type: string
        description: |
          소셜 검증값
          - kakao: OAuth2 인증을 통해 반환된 access_token값
          - facebook: OAuth2 인증을 통해 반환된 access_token값
          - google: id_token값
          - apple: identityToken값
          
      hmCode:
        type: string
        description: |
          시, 분 정보를 나타내는 문자열 (hhmm 형식)
        minLength: 4
        maxLength: 4